<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<Embed xmlns="http://www.mbsim-env.de/MBXMLUtils">

  <Parameter/>

  <MBSimProject xmlns="http://www.mbsim-env.de/MBSimXML" name="Project">

    <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils">
      <Parameter>
        <scalarParameter name="_______________kinematic_structure_________________________________________">0%________________________________________________________________</scalarParameter>
        <scalarParameter name="enable_frame_torsion">1                     % [/]</scalarParameter>
        <scalarParameter name="enable_swingarm_torsion">1                     % [/]</scalarParameter>
        <scalarParameter name="enable_rider_lean">1                     % [/]</scalarParameter>
        <scalarParameter name="enable_rider_yaw">0                     % [/]</scalarParameter>
        <scalarParameter name="enable_rider_lateral">1                     % [/]</scalarParameter>
        <scalarParameter name="enable_fork_rot_x">1                     % [/]</scalarParameter>
        <scalarParameter name="enable_fork_rot_y">1                     % [/]</scalarParameter>
        <scalarParameter name="enable_fork_rot_z">1                     % [/]</scalarParameter>
        <scalarParameter name="enable_front_susp">1                     % [/]</scalarParameter>
        <scalarParameter name="enable_rear_susp">1                     % [/]</scalarParameter>
        <scalarParameter name="enable_aero">1                     % [/]</scalarParameter>
        <scalarParameter name="Komp_Gyro_FW">0                     % Comp. centrifugal moments front wheel [/]          </scalarParameter>
        <scalarParameter name="Komp_Gyro_RW">0                     % Comp. centrifugal moments rear wheel [/]          </scalarParameter>
        <scalarParameter name="Switch_Gyro_comp_wobble">0                     % Comp. centrifugal moment fork bending [/]</scalarParameter>
        <scalarParameter name="Switch_Komp_vy">0                     % Comp. r*alp in v_cf_C [/]</scalarParameter>
        <scalarParameter name="_______________velocity_control____________________________________________________________">0%____________________________________________________________________</scalarParameter>        
        <scalarParameter name="v0">200                % [km/h]                                            </scalarParameter>
        <scalarParameter name="Velocity_controller">1                     % [/]</scalarParameter>
        <scalarParameter name="Brake_distribution">0.8                   % front brake</scalarParameter>        
        <scalarParameter name="_______________steering_control___________________________________________________________">0%____________________________________________________________________</scalarParameter>        
        <scalarParameter name="Steering_controller">1                     % [/]                           </scalarParameter>
        <scalarParameter name="Setval_roll_angle">30                  % [Grad]         </scalarParameter>
        <scalarParameter name="T_roll_start">0.5                   % [sec]      </scalarParameter>
        <scalarParameter name="T_roll_exc">1.0                    % Duration ramp up setvalue [sec]      </scalarParameter>
        <scalarParameter name="_______________excitation__________________________________________________________________">0%____________________________________________________________________</scalarParameter>
        <scalarParameter name="Torque_steer_cos">0                     % [Nm]       </scalarParameter>
        <scalarParameter name="T_To_start">0                     % [sec]      </scalarParameter>
        <scalarParameter name="T_To_exc">1.5                   % Duration Torque [sec]      </scalarParameter>
        <scalarParameter name="Fy_Impuls">0 %1000                %  [N]       </scalarParameter>
        <scalarParameter name="T_Fy_start">0                     % [sec]      </scalarParameter>
        <scalarParameter name="T_Fy_exc">0.2                   % Duration Fy_Impuls [sec]      </scalarParameter>
        <scalarParameter name="h_road_waves">0*0.02              % height cosinus-road waves [m]</scalarParameter>
        <scalarParameter name="l_road_waves">2.65                 % length road waves [m]</scalarParameter>
        <scalarParameter name="n_road_waves">2                      % number of road waves [/]</scalarParameter>
        <scalarParameter name="T_start_road_waves">1                      % [sec]</scalarParameter>
        <scalarParameter name="_______________preload______________________________________________________________________">0%____________________________________________________________________</scalarParameter>
        <scalarParameter name="FzPreload_FW">1172.57              %[N]</scalarParameter>
        <scalarParameter name="FzPreload_RW">1272.19              %[N]</scalarParameter>
        <scalarParameter name="M0_rot_y_fork">111.73                % preload fork [Nm]</scalarParameter>
        <scalarParameter name="F0_suspension_f">906.30                %[N]</scalarParameter>
        <scalarParameter name="F0_suspension_r">1946.22              %[N]</scalarParameter>
        <scalarParameter name="_______________vehicle_data___________________________________________________________________">0%____________________________________________________________________</scalarParameter>
        <scalarParameter name="caster_angle">-0.4189             % [rad]</scalarParameter>
        <scalarParameter name="steering_damper">6.944                %[Nm]</scalarParameter>
        <scalarParameter name="wheelbase">1.41                  % [m]</scalarParameter>
        <scalarParameter name="x_CoG">-0.0016             % vector p_to_kin =&gt; CoG [m] </scalarParameter>
        <scalarParameter name="z_CoG">0.0674              % vector p_to_kin =&gt; CoG [m] </scalarParameter>
      </Parameter>
     <DynamicSystemSolver xmlns="http://www.mbsim-env.de/MBSim" name="MBS">
        <plotFeatureRecursive value="generalizedPosition">true</plotFeatureRecursive>
        <plotFeatureRecursive value="generalizedVelocity">true</plotFeatureRecursive>
        <plotFeatureRecursive value="ns1:signal" xmlns:ns1="http://www.mbsim-env.de/MBSimControl">true</plotFeatureRecursive>
        <plotFeatureRecursive value="acceleration">true</plotFeatureRecursive>
        <plotFeatureRecursive value="angularAcceleration">true</plotFeatureRecursive>
        <plotFeatureRecursive value="generalizedForce">true</plotFeatureRecursive>
        <frames>
          <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils" parameterHref="Data/Group_Front_wheel.xml">
            <FixedRelativeFrame xmlns="http://www.mbsim-env.de/MBSim" name="cam_pos_xy">
              <relativePosition unit="m">
                <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                  <ele>0</ele>
                  <ele>0</ele>
                  <ele>z0_I_Road</ele>
              </xmlVector>
            </relativePosition>
          </FixedRelativeFrame>
        </Embed>
      </frames>  
        <contours/>
        <groups>
          <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils">
            <Parameter>
          </Parameter>
            <Group xmlns="http://www.mbsim-env.de/MBSim" name="Group_Controller">
              <frames/>
              <contours/>
              <groups>
                <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils">
                  <Parameter>
                    <scalarParameter name="M_brake_max">-1000                %[Nm]</scalarParameter>
                    <scalarParameter name="M_drive_max">400                    %[N]</scalarParameter>
                    <scalarParameter name="T_cos_start">99                   % [sec]      </scalarParameter>
                    <scalarParameter name="T_cos_exc">2                     % [sec]      </scalarParameter>
                    <scalarParameter name="T_end">5                     % [sec]      </scalarParameter>
                    <scalarParameter name="v_cos_end">150                  % [km/h]                                            </scalarParameter>
                    <scalarParameter name="v_end">150                  % [km/h]                                            </scalarParameter>
                    <scalarParameter name="Switch_brake">1                     % Brake on/off [/]</scalarParameter>
                    <scalarParameter name="Switch_throttle">1                     % Throttle on/off [/]</scalarParameter>
                    <scalarParameter name="M_brake_stat_f_max">0                      % max static torque front brake [Nm]</scalarParameter>
                    <scalarParameter name="M_brake_stat_r_max">0                      % max static torque rear brake [Nm]</scalarParameter>
                    <scalarParameter name="P_long">800                % P-value longitudinal controller [/]</scalarParameter>
                    <scalarParameter name="I_long">5</scalarParameter>
                    <scalarParameter name="D_long">10</scalarParameter>
                    <scalarParameter name="C_long">1</scalarParameter>
                    <scalarParameter name="f_long">1</scalarParameter>
                    <scalarParameter name="R1_long">1/(2*pi*f_long*C_long)</scalarParameter>
                    <scalarParameter name="R2_long">sqrt(R1_long^2+1/C_long^2)</scalarParameter>
                  </Parameter>
                  <Group xmlns="http://www.mbsim-env.de/MBSim" name="longitudinal">
                    <frames/>
                    <contours/>
                    <groups/>
                    <objects/>
                    <links>
                      <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="vx_target">
                        <inputSignal ref="../../Link[time]"/>
                        <function>
                          <PiecewiseDefinedFunction xmlns="http://www.mbsim-env.de/MBSim">
                            <limitedFunctions>
                              <LimitedFunction>
                                <function>
                                  <ConstantFunction>
                                    <a0>v0/3.6</a0>
                                </ConstantFunction>
                              </function>
                                <limit>T_cos_start</limit>
                            </LimitedFunction>
                              <LimitedFunction>
                                <function>
                                  <SymbolicFunction arg1="t" arg1Dim="1">
                                    <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                                      <ele>ret = v_cos_end/3.6 + (v0-v_cos_end)/3.6*0.5*(1+cos(pi*1/(T_cos_exc)*(t(1)-T_cos_start)))</ele>
                                  </xmlVector>
                                </SymbolicFunction>
                              </function>
                                <limit>T_cos_start + T_cos_exc</limit>
                            </LimitedFunction>
                              <LimitedFunction>
                                <function>
                                  <ConstantFunction>
                                    <a0>v_end/3.6</a0>
                                </ConstantFunction>
                              </function>
                                <limit>T_end</limit>
                            </LimitedFunction>
                              <LimitedFunction>
                                <function>
                                  <ConstantFunction>
                                    <a0>v_end/3.6</a0>
                                </ConstantFunction>
                              </function>
                                <limit>1000</limit>
                            </LimitedFunction>
                          </limitedFunctions>
                            <shiftAbscissa>false</shiftAbscissa>
                        </PiecewiseDefinedFunction>
                      </function>
                    </SignalOperation>
                      <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="vx_diff">
                        <inputSignal ref="../../Link[v_long]"/>
                        <inputSignal ref="../Link[vx_target]"/>
                        <function>
                          <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="vx" arg1Dim="1" arg2="vxt" arg2Dim="1">
                            <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                              <ele>ret = vxt(1) - vx(1)</ele>
                          </xmlVector>
                        </SymbolicFunction>
                      </function>
                    </SignalOperation>  
                      <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="M_brake_f_stat">
                        <inputSignal ref="../../Link[time]"/>
                        <function>
                          <TabularFunction xmlns="http://www.mbsim-env.de/MBSim">
                            <xy>
                              <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                                <row>
                                  <ele>0</ele>
                                  <ele>0</ele>
                                </row>
                                <row>
                                  <ele>1</ele>
                                  <ele>0</ele>
                                </row>
                                <row>
                                  <ele>1.5</ele>
                                  <ele>M_brake_stat_f_max*(1-Velocity_controller)</ele>
                                </row>
                                <row>
                                  <ele>3.</ele>
                                  <ele>M_brake_stat_f_max*(1-Velocity_controller)</ele>
                                </row>
                                <row>
                                  <ele>3.5</ele>
                                  <ele>0</ele>
                                </row>
                                <row>
                                  <ele>100</ele>
                                  <ele>0</ele>
                                </row>
                              </xmlMatrix>
                            </xy>
                          </TabularFunction>
                        </function>
                      </SignalOperation>
                      <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="M_brake_r_stat">
                        <inputSignal ref="../../Link[time]"/>
                        <function>
                          <TabularFunction xmlns="http://www.mbsim-env.de/MBSim">
                            <xy>
                              <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                                <row>
                                  <ele>0</ele>
                                  <ele>0</ele>
                                </row>
                                <row>
                                  <ele>1</ele>
                                  <ele>0</ele>
                                </row>
                                <row>
                                  <ele>1.5</ele>
                                  <ele>M_brake_stat_r_max*(1-Velocity_controller)</ele>
                                </row>
                                <row>
                                  <ele>3.</ele>
                                  <ele>M_brake_stat_r_max*(1-Velocity_controller)</ele>
                                </row>
                                <row>
                                  <ele>3.5</ele>
                                  <ele>0</ele>
                                </row>
                                <row>
                                  <ele>100</ele>
                                  <ele>0</ele>
                                </row>
                              </xmlMatrix>
                            </xy>
                          </TabularFunction>
                        </function>
                      </SignalOperation>  
                      <LinearTransferSystem xmlns="http://www.mbsim-env.de/MBSimControl" name="PID_long">
                        <inputSignal ref="../Link[vx_diff]"/>
                        <systemMatrix>
                          <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                            <row>
                              <ele>0</ele>
                              <ele>0</ele>
                        </row>
                            <row>
                              <ele>0</ele>
                              <ele>-1/(R1_long*C_long)</ele>
                        </row>
                      </xmlMatrix>
                    </systemMatrix>
                        <inputMatrix>
                          <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                            <row>
                              <ele>1</ele>
                        </row>
                            <row>
                              <ele>1/(R1_long*C_long)</ele>
                        </row>
                      </xmlMatrix>
                    </inputMatrix>
                        <outputMatrix>
                          <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                            <row>
                              <ele>I_long</ele>
                              <ele>-D_long*R2_long*C_long/(R1_long*C_long)</ele>
                        </row>
                      </xmlMatrix>
                    </outputMatrix>
                        <feedthroughMatrix>
                          <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                            <row>
                              <ele>P_long+D_long*R2_long*C_long/(R1_long*C_long)</ele>
                        </row>
                      </xmlMatrix>
                    </feedthroughMatrix>
                  </LinearTransferSystem>  
                      <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="M_long">
                        <inputSignal ref="../Link[PID_long]"/>
                        <function>
                          <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="M" arg1Dim="1">
                            <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                              <ele>ret = M(1)*Velocity_controller</ele>
                        </xmlVector>
                      </SymbolicFunction>
                    </function>
                  </SignalOperation>  
                      <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="M_brake_lim">
                        <inputSignal ref="../Link[M_long]"/>
                        <function>
                          <BoundedFunction xmlns="http://www.mbsim-env.de/MBSim">
                            <lowerBound>M_brake_max</lowerBound>
                            <upperBound>0</upperBound>
                          </BoundedFunction>
                        </function>
                      </SignalOperation>  
                      <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="M_brake">
                        <inputSignal ref="../Link[M_brake_lim]"/>
                        <function>
                          <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="Mbr" arg1Dim="1">
                            <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                              <ele>ret = Mbr(1)*Switch_brake</ele>
                            </xmlVector>
                          </SymbolicFunction>
                        </function>
                      </SignalOperation>  
                      <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="M_drive_lim">
                        <inputSignal ref="../Link[M_long]"/>
                        <function>
                          <BoundedFunction xmlns="http://www.mbsim-env.de/MBSim">
                            <lowerBound>0</lowerBound>
                            <upperBound>M_drive_max</upperBound>
                          </BoundedFunction>
                        </function>
                      </SignalOperation>  
                      <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="M_drive">
                        <inputSignal ref="../Link[M_drive_lim]"/>
                        <function>
                          <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="Mdr" arg1Dim="1">
                            <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                              <ele>ret = Mdr(1)*Switch_throttle</ele>
                            </xmlVector>
                          </SymbolicFunction>
                        </function>
                      </SignalOperation>
                    </links>
                    <constraints/>
                    <observers/>
                  </Group>
                </Embed>
                <Group name="lateral" xmlns="http://www.mbsim-env.de/MBSim">
                    <frames/>
                    <contours/>
                    <groups/>
                    <objects/>
                    <links>
                      <KineticExcitation name="Torque_steering_cos_exc">
                      <connect ref1="../../../Group[Group_Frame]/Object[frame_torsion]/Frame[C]" ref2="../../../Group[Group_Front_fork]/Object[Steering_axis]/Frame[C]"/>
                      <momentDirection unit="-">
                        <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <row>
                            <ele>0</ele>
                          </row>
                          <row>
                            <ele>0</ele>
                          </row>
                          <row>
                            <ele>1</ele>
                          </row>
                        </xmlMatrix>
                      </momentDirection>
                      <momentFunction>
                        <PiecewiseDefinedFunction>
                          <limitedFunctions>
                            <LimitedFunction>
                              <function>
                                <ConstantFunction>
                                  <a0>0</a0>
                                </ConstantFunction>
                              </function>
                              <limit>T_To_start</limit>
                            </LimitedFunction>
                            <LimitedFunction>
                              <function>
                                <SymbolicFunction arg1="t">
                                  <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                                    <ele>ret = Torque_steer_cos*0.5*(1-cos(2*pi*1/T_To_exc*(t-T_To_start)))*(1-Steering_controller)</ele>
                                  </xmlVector>
                                </SymbolicFunction>
                              </function>
                              <limit>T_To_start + T_To_exc</limit>
                            </LimitedFunction>
                            <LimitedFunction>
                              <function>
                                <ConstantFunction>
                                  <a0>0</a0>
                                </ConstantFunction>
                              </function>
                              <limit>1000</limit>
                            </LimitedFunction>
                          </limitedFunctions>
                        </PiecewiseDefinedFunction>
                      </momentFunction>
                      <enableOpenMBV>
                        <diffuseColor>
                          <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                            <ele>0.333333</ele>
                            <ele>1</ele>
                            <ele>0.666667</ele>
                          </xmlVector>
                        </diffuseColor>
                        <scaleLength>.1</scaleLength>
                        <scaleSize>.1</scaleSize>
                      </enableOpenMBV>
                    </KineticExcitation>
                      <GeneralizedPositionSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="roll_angle">
                        <object ref="../../../Group[Group_Frame]/Object[roll_axis]"/>
                  </GeneralizedPositionSensor>  
                      <GeneralizedVelocitySensor xmlns="http://www.mbsim-env.de/MBSimControl" name="roll_angle_vel">
                        <object ref="../../../Group[Group_Frame]/Object[roll_axis]"/>
                  </GeneralizedVelocitySensor>  
                      <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="roll_angle_setval">
                        <inputSignal ref="../../Link[time]"/>
                        <function>
                          <PiecewiseDefinedFunction xmlns="http://www.mbsim-env.de/MBSim">
                            <limitedFunctions>
                              <LimitedFunction>
                                <function>
                                  <ConstantFunction>
                                    <a0>0</a0>
                                  </ConstantFunction>
                                </function>
                                <limit>T_roll_start</limit>
                              </LimitedFunction>
                              <LimitedFunction>
                                <function>
                                  <SymbolicFunction arg1="t" arg1Dim="1">
                                    <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                                      <ele>ret = Setval_roll_angle*pi/180*0.5*(1-cos(pi*1/(T_roll_exc)*(t(1)-T_roll_start)))</ele>
                                    </xmlVector>
                                  </SymbolicFunction>
                                </function>
                                <limit>T_roll_start + T_roll_exc</limit>
                              </LimitedFunction>
                              <LimitedFunction>
                                <function>
                                  <ConstantFunction>
                                    <a0>Setval_roll_angle*pi/180</a0>
                                  </ConstantFunction>
                                </function>
                                <limit>1000</limit>
                              </LimitedFunction>
                            </limitedFunctions>
                          </PiecewiseDefinedFunction>
                        </function>
                      </SignalOperation>
                      <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="M_steer_stat">
                      <inputSignal ref="../../Link[v_long]"/>
                      <inputSignal ref="../Link[roll_angle]"/>
                      <function>
                        <TwoDimensionalTabularFunction xmlns="http://www.mbsim-env.de/MBSim">
                          <x>
                            <fromFile xmlns="http://www.mbsim-env.de/MBXMLUtils" href="Data/vel.txt"/>
                          </x>
                          <y>
                            <fromFile xmlns="http://www.mbsim-env.de/MBXMLUtils" href="Data/roll_des.txt"/>
                          </y>
                          <z>
                            <fromFile xmlns="http://www.mbsim-env.de/MBXMLUtils" href="Data/steer_mom_stat.txt"/>
                          </z>
                        </TwoDimensionalTabularFunction>
                      </function>
                    </SignalOperation>
                      <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="Param_P_controller">
                      <inputSignal ref="../../Link[v_long]"/>
                      <inputSignal ref="../Link[roll_angle]"/>
                      <function>
                        <TwoDimensionalTabularFunction xmlns="http://www.mbsim-env.de/MBSim">
                          <x>
                            <fromFile xmlns="http://www.mbsim-env.de/MBXMLUtils" href="Data/vel.txt"/>
                          </x>
                          <y>
                            <fromFile xmlns="http://www.mbsim-env.de/MBXMLUtils" href="Data/roll_des.txt"/>
                          </y>
                          <z>
                            <fromFile xmlns="http://www.mbsim-env.de/MBXMLUtils" href="Data/P_par.txt"/>
                          </z>
                        </TwoDimensionalTabularFunction>
                      </function>
                    </SignalOperation>
                      <Multiplexer xmlns="http://www.mbsim-env.de/MBSimControl" name="steering_controller_input">
                      <inputSignal ref="../Link[roll_angle_setval]"/>
                      <inputSignal ref="../Link[roll_angle]"/>
                      <inputSignal ref="../Link[roll_angle_vel]"/>
                      <inputSignal ref="../Link[Param_P_controller]"/>
                      <inputSignal ref="../Link[M_steer_stat]"/>
                    </Multiplexer>  
                      <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="steering_controller_sop">
                      <inputSignal ref="../Link[steering_controller_input]"/>
                      <function>
                        <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="in" arg1Dim="5">RW_s = in(1);
RW    = in(2);
RWp  = in(3);
P       = in(4);
MLs   = in(5);
%----------------------------------------------
P_Reg = P*(RW_s-RW)+MLs;
ret = [Steering_controller*(P_Reg)]</SymbolicFunction>
                      </function>
                    </SignalOperation>  
                      <KineticExcitation name="steering_controller_exc">
                        <connect ref1="../../../Group[Group_Frame]/Object[frame_torsion]/Frame[C]" ref2="../../../Group[Group_Front_fork]/Object[Steering_axis]/Frame[C]"/>
                        <momentDirection unit="-">
                          <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                            <row>
                              <ele>0</ele>
                            </row>
                            <row>
                              <ele>0</ele>
                            </row>
                            <row>
                              <ele>1</ele>
                            </row>
                          </xmlMatrix>
                        </momentDirection>
                        <momentFunction>
                          <SignalFunction xmlns="http://www.mbsim-env.de/MBSimControl">
                            <returnSignal ref="../../Link[steering_controller_sop]"/>
                          </SignalFunction>
                        </momentFunction>
                        <enableOpenMBV>
                          <diffuseColor>
                            <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                              <ele>0.333333</ele>
                              <ele>1</ele>
                              <ele>1</ele>
                            </xmlVector>
                          </diffuseColor>
                          <scaleLength>.01</scaleLength>
                          <scaleSize>.1</scaleSize>
                        </enableOpenMBV>
                      </KineticExcitation>
                    </links>
                    <constraints/>
                    <observers/>
                  </Group>
                <Group name="kinematics">
                  <frames/>
                  <contours/>
                  <groups/>
                  <objects/>
                  <links>
                    <AccelerationSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="a_frame_I">
                      <frame ref="../../../Group[Group_Frame]/Object[Frame]/Frame[C]"/>
                    </AccelerationSensor>
                    <OrientationSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="S_I_yaw_axis">
                      <frame ref="../../../Group[Group_Frame]/Object[yaw_axis]/Frame[C]"/>
                    </OrientationSensor>
                    <GeneralizedPositionSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="pitch_angle">
                      <object ref="../../../Group[Group_Frame]/Object[Frame]"/>
                    </GeneralizedPositionSensor>
                    <GeneralizedPositionSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="yaw_angle">
                      <object ref="../../../Group[Group_Frame]/Object[yaw_axis]"/>
                    </GeneralizedPositionSensor>
                  </links>
                  <constraints/>
                  <observers/>
                  <enableOpenMBVFrameI/>
                </Group>
              </groups>
              <objects/>
              <links>
                <FunctionSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="time">
                  <function>
                    <LinearFunction xmlns="http://www.mbsim-env.de/MBSim">
                      <a1>1</a1>
                </LinearFunction>
              </function>
            </FunctionSensor>
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="v_long">
                  <inputSignal ref="../../Group[Group_Rear_wheel]/Group[Kinematics]/Link[v_c_rc]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="v" arg1Dim="3">
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>ret = v(1)</ele>
                      </xmlVector>
                    </SymbolicFunction>
                  </function>
                </SignalOperation>
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="v_kmh">
                  <inputSignal ref="../Link[v_long]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="v" arg1Dim="1">
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>ret = v(1)*3.6</ele>
                      </xmlVector>
                    </SymbolicFunction>
                  </function>
                </SignalOperation>
                <NonlinearTransferSystem xmlns="http://www.mbsim-env.de/MBSimControl" name="s_long">
                  <inputSignal ref="../Link[v_long]"/>
                  <systemFunction>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="x" arg1Dim="1" arg2="u" arg2Dim="1">
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>u(1)</ele>
                      </xmlVector>
                    </SymbolicFunction>
                  </systemFunction>
                </NonlinearTransferSystem><SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="a_long">
                  <inputSignal ref="../Group[kinematics]/Link[a_frame_I]"/>
                  <inputSignal ref="../Group[kinematics]/Link[S_I_yaw_axis]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="a" arg1Dim="3" arg2="s" arg2Dim="9">
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>ret = s(1)*a(1) + s(4)*a(2) + s(7)*a(3) </ele>
                        <ele>ret = s(2)*a(1) + s(5)*a(2) + s(8)*a(3) </ele>
                        <ele>ret = s(3)*a(1) + s(6)*a(2) + s(9)*a(3) </ele>
                      </xmlVector>
                    </SymbolicFunction>
                  </function>
                </SignalOperation><SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="a_lat">
                  <inputSignal ref="../Group[kinematics]/Link[a_frame_I]"/>
                  <inputSignal ref="../Group[kinematics]/Link[S_I_yaw_axis]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="a" arg1Dim="3" arg2="s" arg2Dim="9">
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>ret = s(2)*a(1) + s(5)*a(2) + s(8)*a(3)</ele>
                      </xmlVector>
                    </SymbolicFunction>
                  </function>
                </SignalOperation><SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="Roll_angle_deg">
                  <inputSignal ref="../Group[lateral]/Link[roll_angle]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="al" arg1Dim="1">
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>ret = al(1)*180/pi</ele>
                      </xmlVector>
                    </SymbolicFunction>
                  </function>
                </SignalOperation><SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="Pitch_angle_deg">
                  <inputSignal ref="../Group[kinematics]/Link[pitch_angle]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="be" arg1Dim="1">
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>ret = be(1)*180/pi</ele>
                      </xmlVector>
                    </SymbolicFunction>
                  </function>
                </SignalOperation><SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="Yaw_angle_deg">
                  <inputSignal ref="../Group[kinematics]/Link[yaw_angle]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="ga" arg1Dim="4">
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>ret = ga(4)*180/pi</ele>
                      </xmlVector>
                    </SymbolicFunction>
                  </function>
                </SignalOperation></links>
              <constraints/>
              <observers/>
            </Group>
          </Embed>
          <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils" parameterHref="Data/Group_Frame.xml">
            <Group xmlns="http://www.mbsim-env.de/MBSim" name="Group_Frame">
              <frameOfReference ref="../Frame[I]"/>
              <frames/>
              <contours/>
              <groups>
                <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils" count="enable_frame_torsion" counterName="n">
                  <Parameter/>
                  <Group xmlns="http://www.mbsim-env.de/MBSim" name="Dof_frame_torsion">
                    <frames/>
                    <contours/>
                    <groups/>
                    <objects/>
                    <links>
                      <GeneralizedPositionSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="al_tors_Frame">
                        <object ref="../../Object[frame_torsion]"/>
                    </GeneralizedPositionSensor>
                      <GeneralizedVelocitySensor xmlns="http://www.mbsim-env.de/MBSimControl" name="alp_tors_Frame">
                        <object ref="../../Object[frame_torsion]"/>
                    </GeneralizedVelocitySensor>
                      <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="Mx_tors_Frame_sop">
                        <inputSignal ref="../Link[al_tors_Frame]"/>
                        <inputSignal ref="../Link[alp_tors_Frame]"/>
                        <function>
                          <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="al" arg1Dim="1" arg2="alp" arg2Dim="1">
                            <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                              <ele>ret=-tors_Frame(1)*al(1) - tors_Frame(2)*alp(1) + 1e-7</ele>
                          </xmlVector>
                        </SymbolicFunction>
                      </function>
                    </SignalOperation>      
                      <KineticExcitation name="Mx_tors_Frame_exc">
                        <connect ref1="../../Object[Frame]/Frame[steering_head]" ref2="../../Object[frame_torsion]/Frame[C]"/>
                        <momentDirection unit="-">
                          <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                            <row>
                              <ele>1</ele>
                          </row>
                            <row>
                              <ele>0</ele>
                          </row>
                            <row>
                              <ele>0</ele>
                          </row>
                        </xmlMatrix>
                      </momentDirection>
                        <momentFunction>
                          <SignalFunction xmlns="http://www.mbsim-env.de/MBSimControl">
                            <returnSignal ref="../../Link[Mx_tors_Frame_sop]"/>
                        </SignalFunction>
                      </momentFunction>
                        <enableOpenMBV>
                          <diffuseColor>
                            <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                              <ele>0.666667</ele>
                              <ele>.3</ele>
                              <ele>1</ele>
                          </xmlVector>
                        </diffuseColor>
                          <scaleLength>.01</scaleLength>
                          <scaleSize>.1</scaleSize>
                      </enableOpenMBV>
                    </KineticExcitation>
                  </links>
                    <constraints/>
                    <observers/>
                </Group>
                </Embed>
                <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils" count="enable_rider_lean" counterName="n">
                  <Parameter/>
                  <Group xmlns="http://www.mbsim-env.de/MBSim" name="Dof_rider_torsion">
                    <frames/>
                    <contours/>
                    <groups/>
                    <objects/>
                    <links>
                      <GeneralizedPositionSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="al_rider">
                        <object ref="../../Object[upper_body]"/>
                    </GeneralizedPositionSensor>
                      <GeneralizedVelocitySensor xmlns="http://www.mbsim-env.de/MBSimControl" name="alp_rider">
                        <object ref="../../Object[upper_body]"/>
                    </GeneralizedVelocitySensor>
                      <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="Mx_rider_sop">
                        <inputSignal ref="../Link[al_rider]"/>
                        <inputSignal ref="../Link[alp_rider]"/>
                        <function>
                          <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="al" arg1Dim="1" arg2="alp" arg2Dim="1">
                            <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                              <ele>ret=-rider_lean(1)*al(1) - rider_lean(2)*alp(1) + 1e-7</ele>
                          </xmlVector>
                        </SymbolicFunction>
                      </function>
                    </SignalOperation>      
                      <KineticExcitation name="Mx_rider_exc">
                        <connect ref1="../../Object[lower_body]/Frame[C]" ref2="../../Object[upper_body]/Frame[joint_rider]"/>
                        <momentDirection unit="-">
                          <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                            <row>
                              <ele>1</ele>
                          </row>
                            <row>
                              <ele>0</ele>
                          </row>
                            <row>
                              <ele>0</ele>
                          </row>
                        </xmlMatrix>
                      </momentDirection>
                        <momentFunction>
                          <SignalFunction xmlns="http://www.mbsim-env.de/MBSimControl">
                            <returnSignal ref="../../Link[Mx_rider_sop]"/>
                        </SignalFunction>
                      </momentFunction>
                        <enableOpenMBV>
                          <diffuseColor>
                            <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                              <ele>0.666667</ele>
                              <ele>.3</ele>
                              <ele>1</ele>
                          </xmlVector>
                        </diffuseColor>
                          <scaleLength>.01</scaleLength>
                          <scaleSize>.1</scaleSize>
                      </enableOpenMBV>
                    </KineticExcitation>
                  </links>
                    <constraints/>
                    <observers/>
                </Group>
                </Embed>
                <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils" count="enable_rider_lateral" counterName="n">
                  <Parameter/>
                  <Group xmlns="http://www.mbsim-env.de/MBSim" name="Dof_rider_lateral">
                    <frames/>
                    <contours/>
                    <groups/>
                    <objects/>
                    <links>
                      <GeneralizedPositionSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="y_rider">
                        <object ref="../../Object[lower_body]"/>
                      </GeneralizedPositionSensor>
                      <GeneralizedVelocitySensor xmlns="http://www.mbsim-env.de/MBSimControl" name="yp_rider">
                        <object ref="../../Object[lower_body]"/>
                      </GeneralizedVelocitySensor>
                      <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="Fy_rider_sop">
                        <inputSignal ref="../Link[y_rider]"/>
                        <inputSignal ref="../Link[yp_rider]"/>
                        <function>
                          <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="y" arg1Dim="1" arg2="yp" arg2Dim="1">
                            <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                              <ele>ret=-rider_lat(1)*y(1) - rider_lat(2)*yp(1) </ele>
                            </xmlVector>
                          </SymbolicFunction>
                        </function>
                      </SignalOperation>      
                      <KineticExcitation name="Fy_rider_exc">
                        <connect ref1="../../Object[Frame]/Frame[CG_lower_body]" ref2="../../Object[lower_body]/Frame[C]"/>
                        <forceDirection unit="-">
                          <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                            <row>
                              <ele>0</ele>
                            </row>
                            <row>
                              <ele>1</ele>
                            </row>
                            <row>
                              <ele>0</ele>
                            </row>
                          </xmlMatrix>
                        </forceDirection>
                        <forceFunction>
                          <SignalFunction xmlns="http://www.mbsim-env.de/MBSimControl">
                            <returnSignal ref="../../Link[Fy_rider_sop]"/>
                          </SignalFunction>
                        </forceFunction>
                        <enableOpenMBV>
                          <diffuseColor>
                            <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                              <ele>0.666667</ele>
                              <ele>.3</ele>
                              <ele>1</ele>
                            </xmlVector>
                          </diffuseColor>
                          <scaleLength>.01</scaleLength>
                          <scaleSize>.1</scaleSize>
                        </enableOpenMBV>
                      </KineticExcitation>
                    </links>
                    <constraints/>
                    <observers/>
                  </Group>
                </Embed>
                <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils" count="enable_rider_yaw" counterName="n">
                  <Parameter/>
                  <Group xmlns="http://www.mbsim-env.de/MBSim" name="Dof_rider_yaw">
                    <frames/>
                    <contours/>
                    <groups/>
                    <objects/>
                    <links>
                      <GeneralizedPositionSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="theta_rider_yaw">
                        <object ref="../../Object[torso_z_rotation]"/>
                      </GeneralizedPositionSensor>
                      <GeneralizedVelocitySensor xmlns="http://www.mbsim-env.de/MBSimControl" name="thetap_rider_yaw">
                        <object ref="../../Object[torso_z_rotation]"/>
                      </GeneralizedVelocitySensor>
                      <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="Mz_rider_yaw_sop">
                        <inputSignal ref="../Link[theta_rider_yaw]"/>
                        <inputSignal ref="../Link[thetap_rider_yaw]"/>
                        <function>
                          <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="theta" arg1Dim="1" arg2="thetap" arg2Dim="1">
                            <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                              <ele>ret=-rider_yaw_upper_body(1)*theta(1) - rider_yaw_upper_body(2)*thetap(1)</ele>
                            </xmlVector>
                          </SymbolicFunction>
                        </function>
                      </SignalOperation>
                      <KineticExcitation name="Mz_rider_yaw_exc">
                        <connect ref1="../../Object[lower_body]/Frame[C]" ref2="../../Object[torso_z_rotation]/Frame[C]"/>
                        <momentDirection unit="-">
                          <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                            <row>
                              <ele>0</ele>
                            </row>
                            <row>
                              <ele>0</ele>
                            </row>
                            <row>
                              <ele>1</ele>
                            </row>
                          </xmlMatrix>
                        </momentDirection>
                        <momentFunction>
                          <SignalFunction xmlns="http://www.mbsim-env.de/MBSimControl">
                            <returnSignal ref="../../Link[Mz_rider_yaw_sop]"/>
                          </SignalFunction>
                        </momentFunction>
                        <enableOpenMBV>
                          <scaleSize>0.1</scaleSize>
                        </enableOpenMBV>
                      </KineticExcitation>
                    </links>
                    <constraints/>
                    <observers/>
                    <enableOpenMBVFrameI/>
                  </Group>
                </Embed>
                <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils" count="0" counterName="n">
                  <Parameter/>
                  <Group xmlns="http://www.mbsim-env.de/MBSim" name="vis_screw_axis">
                    <frames/>
                    <contours/>
                    <groups/>
                    <objects/>
                    <links>
                      <VelocitySensor xmlns="http://www.mbsim-env.de/MBSimControl" name="v_obs_1">
                        <frame ref="../../Object[Frame]/Frame[obs_1]"/>
                      </VelocitySensor>
                      <VelocitySensor xmlns="http://www.mbsim-env.de/MBSimControl" name="v_obs_2">
                        <frame ref="../../Object[Frame]/Frame[obs_2]"/>
                      </VelocitySensor>
                      <VelocitySensor xmlns="http://www.mbsim-env.de/MBSimControl" name="v_obs_3">
                        <frame ref="../../Object[Frame]/Frame[obs_3]"/>
                      </VelocitySensor>
                      <VelocitySensor xmlns="http://www.mbsim-env.de/MBSimControl" name="v_obs_4">
                        <frame ref="../../Object[Frame]/Frame[obs_4]"/>
                      </VelocitySensor>
                      <VelocitySensor xmlns="http://www.mbsim-env.de/MBSimControl" name="v_obs_5">
                        <frame ref="../../Object[Frame]/Frame[obs_5]"/>
                      </VelocitySensor>
                      <VelocitySensor xmlns="http://www.mbsim-env.de/MBSimControl" name="v_obs_6">
                        <frame ref="../../Object[Frame]/Frame[obs_6]"/>
                      </VelocitySensor>
                      <VelocitySensor xmlns="http://www.mbsim-env.de/MBSimControl" name="v_obs_7">
                        <frame ref="../../Object[Frame]/Frame[obs_7]"/>
                      </VelocitySensor>
                      <VelocitySensor xmlns="http://www.mbsim-env.de/MBSimControl" name="v_obs_8">
                        <frame ref="../../Object[Frame]/Frame[obs_8]"/>
                      </VelocitySensor>
                      <VelocitySensor xmlns="http://www.mbsim-env.de/MBSimControl" name="v_obs_9">
                        <frame ref="../../Object[Frame]/Frame[obs_9]"/>
                      </VelocitySensor>
                      <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="v_obs_1_yaw">
                        <inputSignal ref="../Link[v_obs_1]"/>
                        <inputSignal ref="../../../Group[Group_Controller]/Group[kinematics]/Link[S_I_yaw_axis]"/>
                        <function>
                          <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="v" arg1Dim="3" arg2="s" arg2Dim="9">vy_yaw = s(2)*v(1) + s(5)*v(2) +s(8)*v(3);

vx_I = s(2)*vy_yaw + s(3)*v(3);
vy_I = s(5)*vy_yaw + s(6)*v(3);
vz_I = s(8)*vy_yaw + s(9)*v(3);
ret =[vx_I; vy_I; vz_I]</SymbolicFunction>
                        </function>
                      </SignalOperation>
                      <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="v_obs_2_yaw">
                        <inputSignal ref="../Link[v_obs_2]"/>
                        <inputSignal ref="../../../Group[Group_Controller]/Group[kinematics]/Link[S_I_yaw_axis]"/>
                        <function>
                          <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="v" arg1Dim="3" arg2="s" arg2Dim="9">vy_yaw = s(2)*v(1) + s(5)*v(2) +s(8)*v(3);

vx_I = s(2)*vy_yaw + s(3)*v(3);
vy_I = s(5)*vy_yaw + s(6)*v(3);
vz_I = s(8)*vy_yaw + s(9)*v(3);
ret =[vx_I; vy_I; vz_I]</SymbolicFunction>
                        </function>
                      </SignalOperation>
                      <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="v_obs_3_yaw">
                        <inputSignal ref="../Link[v_obs_3]"/>
                        <inputSignal ref="../../../Group[Group_Controller]/Group[kinematics]/Link[S_I_yaw_axis]"/>
                        <function>
                          <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="v" arg1Dim="3" arg2="s" arg2Dim="9">vy_yaw = s(2)*v(1) + s(5)*v(2) +s(8)*v(3);

vx_I = s(2)*vy_yaw + s(3)*v(3);
vy_I = s(5)*vy_yaw + s(6)*v(3);
vz_I = s(8)*vy_yaw + s(9)*v(3);
ret =[vx_I; vy_I; vz_I]</SymbolicFunction>
                        </function>
                      </SignalOperation>
                      <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="v_obs_4_yaw">
                        <inputSignal ref="../Link[v_obs_4]"/>
                        <inputSignal ref="../../../Group[Group_Controller]/Group[kinematics]/Link[S_I_yaw_axis]"/>
                        <function>
                          <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="v" arg1Dim="3" arg2="s" arg2Dim="9">vy_yaw = s(2)*v(1) + s(5)*v(2) +s(8)*v(3);

vx_I = s(2)*vy_yaw + s(3)*v(3);
vy_I = s(5)*vy_yaw + s(6)*v(3);
vz_I = s(8)*vy_yaw + s(9)*v(3);
ret =[vx_I; vy_I; vz_I]</SymbolicFunction>
                        </function>
                      </SignalOperation>
                      <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="v_obs_5_yaw">
                        <inputSignal ref="../Link[v_obs_5]"/>
                        <inputSignal ref="../../../Group[Group_Controller]/Group[kinematics]/Link[S_I_yaw_axis]"/>
                        <function>
                          <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="v" arg1Dim="3" arg2="s" arg2Dim="9">vy_yaw = s(2)*v(1) + s(5)*v(2) +s(8)*v(3);

vx_I = s(2)*vy_yaw + s(3)*v(3);
vy_I = s(5)*vy_yaw + s(6)*v(3);
vz_I = s(8)*vy_yaw + s(9)*v(3);
ret =[vx_I; vy_I; vz_I]</SymbolicFunction>
                        </function>
                      </SignalOperation>
                      <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="v_obs_6_yaw">
                        <inputSignal ref="../Link[v_obs_6]"/>
                        <inputSignal ref="../../../Group[Group_Controller]/Group[kinematics]/Link[S_I_yaw_axis]"/>
                        <function>
                          <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="v" arg1Dim="3" arg2="s" arg2Dim="9">vy_yaw = s(2)*v(1) + s(5)*v(2) +s(8)*v(3);

vx_I = s(2)*vy_yaw + s(3)*v(3);
vy_I = s(5)*vy_yaw + s(6)*v(3);
vz_I = s(8)*vy_yaw + s(9)*v(3);
ret =[vx_I; vy_I; vz_I]</SymbolicFunction>
                        </function>
                      </SignalOperation>
                      <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="v_obs_7_yaw">
                        <inputSignal ref="../Link[v_obs_7]"/>
                        <inputSignal ref="../../../Group[Group_Controller]/Group[kinematics]/Link[S_I_yaw_axis]"/>
                        <function>
                          <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="v" arg1Dim="3" arg2="s" arg2Dim="9">vy_yaw = s(2)*v(1) + s(5)*v(2) +s(8)*v(3);

vx_I = s(2)*vy_yaw + s(3)*v(3);
vy_I = s(5)*vy_yaw + s(6)*v(3);
vz_I = s(8)*vy_yaw + s(9)*v(3);
ret =[vx_I; vy_I; vz_I]</SymbolicFunction>
                        </function>
                      </SignalOperation>
                      <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="v_obs_8_yaw">
                        <inputSignal ref="../Link[v_obs_8]"/>
                        <inputSignal ref="../../../Group[Group_Controller]/Group[kinematics]/Link[S_I_yaw_axis]"/>
                        <function>
                          <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="v" arg1Dim="3" arg2="s" arg2Dim="9">vy_yaw = s(2)*v(1) + s(5)*v(2) +s(8)*v(3);

vx_I = s(2)*vy_yaw + s(3)*v(3);
vy_I = s(5)*vy_yaw + s(6)*v(3);
vz_I = s(8)*vy_yaw + s(9)*v(3);
ret =[vx_I; vy_I; vz_I]</SymbolicFunction>
                        </function>
                      </SignalOperation>
                      <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="v_obs_9_yaw">
                        <inputSignal ref="../Link[v_obs_9]"/>
                        <inputSignal ref="../../../Group[Group_Controller]/Group[kinematics]/Link[S_I_yaw_axis]"/>
                        <function>
                          <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="v" arg1Dim="3" arg2="s" arg2Dim="9">vy_yaw = s(2)*v(1) + s(5)*v(2) +s(8)*v(3);

vx_I = s(2)*vy_yaw + s(3)*v(3);
vy_I = s(5)*vy_yaw + s(6)*v(3);
vz_I = s(8)*vy_yaw + s(9)*v(3);
ret =[vx_I; vy_I; vz_I]</SymbolicFunction>
                        </function>
                      </SignalOperation>
                      <PositionSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="pos_obs_1">
                        <frame ref="../../Object[Frame]/Frame[obs_1]"/>
                      </PositionSensor>
                      <PositionSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="pos_obs_2">
                        <frame ref="../../Object[Frame]/Frame[obs_2]"/>
                      </PositionSensor>
                      <PositionSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="pos_obs_3">
                        <frame ref="../../Object[Frame]/Frame[obs_3]"/>
                      </PositionSensor>
                      <PositionSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="pos_obs_4">
                        <frame ref="../../Object[Frame]/Frame[obs_4]"/>
                      </PositionSensor>
                      <PositionSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="pos_obs_5">
                        <frame ref="../../Object[Frame]/Frame[obs_5]"/>
                      </PositionSensor>
                      <PositionSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="pos_obs_6">
                        <frame ref="../../Object[Frame]/Frame[obs_6]"/>
                      </PositionSensor>
                      <PositionSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="pos_obs_7">
                        <frame ref="../../Object[Frame]/Frame[obs_7]"/>
                      </PositionSensor>
                      <PositionSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="pos_obs_8">
                        <frame ref="../../Object[Frame]/Frame[obs_8]"/>
                      </PositionSensor>
                      <PositionSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="pos_obs_9">
                        <frame ref="../../Object[Frame]/Frame[obs_9]"/>
                      </PositionSensor>
                    </links>
                    <constraints/>
                    <observers>
                      <SignalObserver xmlns="http://www.mbsim-env.de/MBSimControl" name="sig_obs_1">
                        <signal ref="../Link[v_obs_1_yaw]"/>
                        <position ref="../Link[pos_obs_1]"/>
                        <enableOpenMBV>
                          <diffuseColor xmlns="http://www.mbsim-env.de/MBSim">
                            <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                              <ele>0.583333</ele>
                              <ele>0.666667</ele>
                              <ele>1</ele>
                            </xmlVector>
                          </diffuseColor>
                          <scaleLength xmlns="http://www.mbsim-env.de/MBSim">2</scaleLength>
                          <scaleSize xmlns="http://www.mbsim-env.de/MBSim">0.5</scaleSize>
                        </enableOpenMBV>
                      </SignalObserver>
                      <SignalObserver xmlns="http://www.mbsim-env.de/MBSimControl" name="sig_obs_2">
                        <signal ref="../Link[v_obs_2_yaw]"/>
                        <position ref="../Link[pos_obs_2]"/>
                        <enableOpenMBV>
                          <diffuseColor xmlns="http://www.mbsim-env.de/MBSim">
                            <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                              <ele>0.583333</ele>
                              <ele>0.666667</ele>
                              <ele>1</ele>
                            </xmlVector>
                          </diffuseColor>
                          <scaleLength xmlns="http://www.mbsim-env.de/MBSim">2</scaleLength>
                          <scaleSize xmlns="http://www.mbsim-env.de/MBSim">0.5</scaleSize>
                        </enableOpenMBV>
                      </SignalObserver>
                      <SignalObserver xmlns="http://www.mbsim-env.de/MBSimControl" name="sig_obs_3">
                        <signal ref="../Link[v_obs_3_yaw]"/>
                        <position ref="../Link[pos_obs_3]"/>
                        <enableOpenMBV>
                          <diffuseColor xmlns="http://www.mbsim-env.de/MBSim">
                            <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                              <ele>0.583333</ele>
                              <ele>0.666667</ele>
                              <ele>1</ele>
                            </xmlVector>
                          </diffuseColor>
                          <scaleLength xmlns="http://www.mbsim-env.de/MBSim">2</scaleLength>
                          <scaleSize xmlns="http://www.mbsim-env.de/MBSim">0.5</scaleSize>
                        </enableOpenMBV>
                      </SignalObserver>
                      <SignalObserver xmlns="http://www.mbsim-env.de/MBSimControl" name="sig_obs_4">
                        <signal ref="../Link[v_obs_4_yaw]"/>
                        <position ref="../Link[pos_obs_4]"/>
                        <enableOpenMBV>
                          <diffuseColor xmlns="http://www.mbsim-env.de/MBSim">
                            <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                              <ele>0.5</ele>
                              <ele>0.333333</ele>
                              <ele>1</ele>
                            </xmlVector>
                          </diffuseColor>
                          <scaleLength xmlns="http://www.mbsim-env.de/MBSim">2</scaleLength>
                          <scaleSize xmlns="http://www.mbsim-env.de/MBSim">0.5</scaleSize>
                        </enableOpenMBV>
                      </SignalObserver>
                      <SignalObserver xmlns="http://www.mbsim-env.de/MBSimControl" name="sig_obs_5">
                        <signal ref="../Link[v_obs_5_yaw]"/>
                        <position ref="../Link[pos_obs_5]"/>
                        <enableOpenMBV>
                          <diffuseColor xmlns="http://www.mbsim-env.de/MBSim">
                            <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                              <ele>0.5</ele>
                              <ele>0.333333</ele>
                              <ele>1</ele>
                            </xmlVector>
                          </diffuseColor>
                          <scaleLength xmlns="http://www.mbsim-env.de/MBSim">2</scaleLength>
                          <scaleSize xmlns="http://www.mbsim-env.de/MBSim">0.5</scaleSize>
                        </enableOpenMBV>
                      </SignalObserver>
                      <SignalObserver xmlns="http://www.mbsim-env.de/MBSimControl" name="sig_obs_6">
                        <signal ref="../Link[v_obs_6_yaw]"/>
                        <position ref="../Link[pos_obs_6]"/>
                        <enableOpenMBV>
                          <diffuseColor xmlns="http://www.mbsim-env.de/MBSim">
                            <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                              <ele>0.5</ele>
                              <ele>0.333333</ele>
                              <ele>1</ele>
                            </xmlVector>
                          </diffuseColor>
                          <scaleLength xmlns="http://www.mbsim-env.de/MBSim">2</scaleLength>
                          <scaleSize xmlns="http://www.mbsim-env.de/MBSim">0.5</scaleSize>
                        </enableOpenMBV>
                      </SignalObserver>
                      <SignalObserver xmlns="http://www.mbsim-env.de/MBSimControl" name="sig_obs_7">
                        <signal ref="../Link[v_obs_7_yaw]"/>
                        <position ref="../Link[pos_obs_7]"/>
                        <enableOpenMBV>
                          <diffuseColor xmlns="http://www.mbsim-env.de/MBSim">
                            <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                              <ele>0.222222</ele>
                              <ele>1</ele>
                              <ele>1</ele>
                            </xmlVector>
                          </diffuseColor>
                          <scaleLength xmlns="http://www.mbsim-env.de/MBSim">2</scaleLength>
                          <scaleSize xmlns="http://www.mbsim-env.de/MBSim">0.5</scaleSize>
                        </enableOpenMBV>
                      </SignalObserver>
                      <SignalObserver xmlns="http://www.mbsim-env.de/MBSimControl" name="sig_obs_8">
                        <signal ref="../Link[v_obs_8_yaw]"/>
                        <position ref="../Link[pos_obs_8]"/>
                        <enableOpenMBV>
                          <diffuseColor xmlns="http://www.mbsim-env.de/MBSim">
                            <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                              <ele>0.222222</ele>
                              <ele>1</ele>
                              <ele>1</ele>
                            </xmlVector>
                          </diffuseColor>
                          <scaleLength xmlns="http://www.mbsim-env.de/MBSim">2</scaleLength>
                          <scaleSize xmlns="http://www.mbsim-env.de/MBSim">0.5</scaleSize>
                        </enableOpenMBV>
                      </SignalObserver>
                      <SignalObserver xmlns="http://www.mbsim-env.de/MBSimControl" name="sig_obs_9">
                        <signal ref="../Link[v_obs_9_yaw]"/>
                        <position ref="../Link[pos_obs_9]"/>
                        <enableOpenMBV>
                          <diffuseColor xmlns="http://www.mbsim-env.de/MBSim">
                            <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                              <ele>0.222222</ele>
                              <ele>1</ele>
                              <ele>1</ele>
                            </xmlVector>
                          </diffuseColor>
                          <scaleLength xmlns="http://www.mbsim-env.de/MBSim">2</scaleLength>
                          <scaleSize xmlns="http://www.mbsim-env.de/MBSim">0.5</scaleSize>
                        </enableOpenMBV>
                      </SignalObserver>
                    </observers>
                    <enableOpenMBVFrameI/>
                  </Group>
                </Embed>
                <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils">
                  <Parameter>
                    <scalarParameter name="m_Frame">153.716000</scalarParameter>
                    <scalarParameter name="m_lower_body">11.414000</scalarParameter>
                    <scalarParameter name="m_upper_body">33.680000</scalarParameter>
                    <scalarParameter name="m_trim_mass">0.000000</scalarParameter>
                    <scalarParameter name="m_pack_bag">0.000000</scalarParameter>
                    <scalarParameter name="m_upper_fork">9.300000</scalarParameter>
                    <scalarParameter name="m_lower_fork">6.500000</scalarParameter>
                    <scalarParameter name="m_FW">11.900000</scalarParameter>
                    <scalarParameter name="m_unbalance">0.000000</scalarParameter>
                    <scalarParameter name="m_swingarm">8.000000</scalarParameter>
                    <scalarParameter name="m_RW">14.700000</scalarParameter>
                  </Parameter>
                  <Group xmlns="http://www.mbsim-env.de/MBSim" name="kinematic_check">
                    <frames/>
                    <contours/>
                    <groups/>
                    <objects/>
                    <links>
                      <PositionSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="r_wc_f">
                        <frame ref="../../../Group[Group_Front_wheel]/Object[Front_wheel]/Frame[C]"/>
                    </PositionSensor>
                      <PositionSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="r_wc_r">
                        <frame ref="../../../Group[Group_Rear_wheel]/Object[Rear_wheel]/Frame[C]"/>
                    </PositionSensor>
                      <PositionSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="r_lower_body">
                        <frame ref="../../Object[lower_body]/Frame[C]"/>
                    </PositionSensor>
                      <PositionSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="r_upper_body">
                        <frame ref="../../Object[upper_body]/Frame[C]"/>
                    </PositionSensor>
                      <PositionSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="r_trim_mass">
                        <frame ref="../../Object[trim_mass]/Frame[C]"/>
                    </PositionSensor>
                      <PositionSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="r_frame">
                        <frame ref="../../Object[Frame]/Frame[C]"/>
                    </PositionSensor>
                      <PositionSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="r_lower_fork">
                        <frame ref="../../../Group[Group_Front_fork]/Object[lower_fork]/Frame[C]"/>
                    </PositionSensor>
                      <PositionSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="r_upper_fork">
                        <frame ref="../../../Group[Group_Front_fork]/Object[upper_fork]/Frame[C]"/>
                    </PositionSensor>
                      <PositionSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="r_swingarm">
                        <frame ref="../../../Group[Group_swingarm]/Object[swingarm]/Frame[C]"/>
                    </PositionSensor>
                      <PositionSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="r_inertial">
                        <frame ref="../../Object[roll_axis]/Frame[C]"/>
                    </PositionSensor>
                      <PositionSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="steering_head_pos">
                        <frame ref="../../Object[Frame]/Frame[steering_head]"/>
                    </PositionSensor>
                      <Multiplexer xmlns="http://www.mbsim-env.de/MBSimControl" name="CoG_input">
                        <inputSignal ref="../Link[r_wc_f]"/>
                        <inputSignal ref="../Link[r_wc_r]"/>
                        <inputSignal ref="../../../Group[Group_Front_wheel]/Link[Fz_Tyre_f_C]"/>
                        <inputSignal ref="../../../Group[Group_Rear_wheel]/Link[Fz_Tyre_r_C]"/>
                        <inputSignal ref="../Link[r_lower_body]"/>
                        <inputSignal ref="../Link[r_upper_body]"/>
                        <inputSignal ref="../Link[r_trim_mass]"/>
                        <inputSignal ref="../Link[r_frame]"/>
                        <inputSignal ref="../Link[r_lower_fork]"/>
                        <inputSignal ref="../Link[r_upper_fork]"/>
                        <inputSignal ref="../Link[r_swingarm]"/>
                        <inputSignal ref="../Link[r_inertial]"/>
                    </Multiplexer>
                      <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="mass_by_wheelload">
                        <inputSignal ref="../../../Group[Group_Front_wheel]/Link[Fz_Tyre_f_C]"/>
                        <inputSignal ref="../../../Group[Group_Rear_wheel]/Link[Fz_Tyre_r_C]"/>
                        <function>
                          <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="Fzf" arg1Dim="1" arg2="Fzr" arg2Dim="1">
                            <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                              <ele>ret = (Fzf(1) + Fzr(1))/9.81</ele>
                          </xmlVector>
                        </SymbolicFunction>
                      </function>
                    </SignalOperation>
                      <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="wheelbase_check               %only valid for straight running!!! ">
                        <inputSignal ref="../Link[r_wc_f]"/>
                        <inputSignal ref="../Link[r_wc_r]"/>
                        <function>
                          <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="r_f" arg1Dim="3" arg2="r_r" arg2Dim="3">
                            <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                              <ele>ret = (r_f(1) - r_r(1))*1000</ele>
                          </xmlVector>
                        </SymbolicFunction>
                      </function>
                    </SignalOperation>
                      <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="trail">
                        <inputSignal ref="../Link[r_wc_f]"/>
                        <inputSignal ref="../Link[steering_head_pos]"/>
                        <function>
                          <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="r_wheel" arg1Dim="3" arg2="r_st_head" arg2Dim="3">z_sth_road = r_st_head(3) -z0_I_Road(3)
ret = (r_st_head(1) + z_sth_road*tan(-caster_angle) - r_wheel(1))*1000</SymbolicFunction>
                        </function>
                      </SignalOperation>
                      <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="trail_eff">
                        <inputSignal ref="../Link[trail]"/>
                        <function>
                          <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="n" arg1Dim="1">
                            <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                              <ele>ret = n(1)*cos(caster_angle)</ele>
                            </xmlVector>
                          </SymbolicFunction>
                        </function>
                      </SignalOperation>
                      <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="fork_offset_check               %only valid for straight running!!!">
                        <inputSignal ref="../Link[r_wc_f]"/>
                        <inputSignal ref="../Link[steering_head_pos]"/>
                        <function>
                          <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="r_f" arg1Dim="3" arg2="r_sh" arg2Dim="3">r_sf_wc = r_f-r_sh;

ret = (cos(caster_angle)*r_sf_wc(1) - sin(caster_angle)*r_sf_wc(3) )*1000;</SymbolicFunction>
                      </function>
                    </SignalOperation>  
                      <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="CoGx_by_wheelload           %only valid for straight running!!!">
                        <inputSignal ref="../Link[CoG_input]"/>
                        <function>
                          <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="i" arg1Dim="32">wb = i(1) - i(4);
l_v = wb/(i(7)/i(8)+1);
ret =i(1)-i(30)-l_v;</SymbolicFunction>
                      </function>
                    </SignalOperation>  
                      <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="CoG_by_masses                %only valid for straigth running!!!">
                        <inputSignal ref="../Link[CoG_input]"/>
                        <function>
                          <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="i" arg1Dim="32">xs = (i(1)*m_FW+i(4)*m_RW+i(9)*m_lower_body  +i(12)*m_upper_body+i(15)*m_trim_mass+ i(18)*m_Frame+i(21)*m_lower_fork+i(24)*m_upper_fork+i(27)*m_swingarm) / (m_FW+m_RW+m_lower_body+m_upper_body+m_trim_mass+m_Frame+m_lower_fork+m_upper_fork+m_swingarm);
zs = (i(3)*m_FW+i(6)*m_RW+i(11)*m_lower_body+i(14)*m_upper_body+i(17)*m_trim_mass+ i(20)*m_Frame+i(23)*m_lower_fork+i(26)*m_upper_fork+i(29)*m_swingarm) / (m_FW+m_RW+m_lower_body+m_upper_body+m_trim_mass+m_Frame+m_lower_fork+m_upper_fork+m_swingarm) ;
m_tot = (m_FW+m_RW+m_lower_body+m_upper_body+m_Frame+m_lower_fork+m_upper_fork+m_swingarm) ;
ret =[xs-i(30);zs-i(32);m_tot] </SymbolicFunction>
                        </function>
                      </SignalOperation>
                    </links>
                    <constraints/>
                    <observers/>
                    <enableOpenMBVFrameI/>
                  </Group></Embed>
                <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils" count="0" counterName="n">
                  <Parameter/>
                  <Group xmlns="http://www.mbsim-env.de/MBSim" name="axis_rotation">
                    <frames/>
                    <contours/>
                    <groups/>
                    <objects/>
                    <links>
                      <OrientationSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="S_I_roll_axis">
                        <frame ref="../../Object[roll_axis]/Frame[C]"/>
                    </OrientationSensor>
                      <VelocitySensor xmlns="http://www.mbsim-env.de/MBSimControl" name="v_I_obs">
                        <frame ref="../../Object[roll_axis]/Frame[v_obs_top]"/>
                    </VelocitySensor>
                      <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="vy_obs">
                        <inputSignal ref="../Link[S_I_roll_axis]"/>
                        <inputSignal ref="../Link[v_I_obs]"/>
                        <function>
                          <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="s" arg1Dim="9" arg2="v" arg2Dim="3">
                            <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                              <ele>ret = s(2)*v(1) + s(5)*v(2) +s(8)*v(3);</ele>
                          </xmlVector>
                        </SymbolicFunction>
                      </function>
                    </SignalOperation>
                      <AngularVelocitySensor xmlns="http://www.mbsim-env.de/MBSimControl" name="om_I_roll_axis">
                        <frame ref="../../Object[roll_axis]/Frame[C]"/>
                    </AngularVelocitySensor>
                      <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="omx_R_roll_axis">
                        <inputSignal ref="../Link[S_I_roll_axis]"/>
                        <inputSignal ref="../Link[om_I_roll_axis]"/>
                        <function>
                          <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="s" arg1Dim="9" arg2="om" arg2Dim="3">
                            <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                              <ele>ret = s(1)*om(1) + s(4)*om(2) +s(7)*om(3);</ele>
                          </xmlVector>
                        </SymbolicFunction>
                      </function>
                    </SignalOperation>
                      <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="z_rot_axis">
                        <inputSignal ref="../Link[vy_obs]"/>
                        <inputSignal ref="../Link[omx_R_roll_axis]"/>
                        <function>
                          <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="v" arg1Dim="1" arg2="om" arg2Dim="1">
                            <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                              <ele>ret = v(1)/(om(1)+1e-7) + 1 - z_CoG</ele>
                            </xmlVector>
                          </SymbolicFunction>
                        </function>
                      </SignalOperation>
                      <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="z_rot_axis_lim">
                        <inputSignal ref="../Link[z_rot_axis]"/>
                        <function>
                          <BoundedFunction xmlns="http://www.mbsim-env.de/MBSim">
                            <lowerBound>-2.5</lowerBound>
                            <upperBound>2.5</upperBound>
                          </BoundedFunction>
                        </function>
                      </SignalOperation>
                      <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="pos_roll_axis">
                        <inputSignal ref="../Link[S_I_roll_axis]"/>
                        <inputSignal ref="../Link[z_rot_axis_lim]"/>
                        <function>
                          <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="s" arg1Dim="9" arg2="z" arg2Dim="1">
                            <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                              <ele>ret = s(3)*z(1)</ele>
                              <ele>ret = s(6)*z(1)</ele>
                              <ele>ret = s(9)*z(1)</ele>
                            </xmlVector>
                          </SymbolicFunction>
                        </function>
                      </SignalOperation>
                      <PositionSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="pos_obs_CoG">
                        <frame ref="../../Object[CoG]/Frame[C]"/>
                      </PositionSensor>
                    </links>
                    <constraints/>
                    <observers>
                      <SignalObserver xmlns="http://www.mbsim-env.de/MBSimControl" name="roll_axis_obs">
                        <signal ref="../Link[pos_roll_axis]"/>
                        <position ref="../Link[pos_obs_CoG]"/>
                        <enableOpenMBV>
                          <diffuseColor xmlns="http://www.mbsim-env.de/MBSim">
                            <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                              <ele>0.166667</ele>
                              <ele>1</ele>
                              <ele>0.666667</ele>
                            </xmlVector>
                          </diffuseColor>
                          <scaleLength xmlns="http://www.mbsim-env.de/MBSim">1</scaleLength>
                          <scaleSize xmlns="http://www.mbsim-env.de/MBSim">0.3</scaleSize>
                        </enableOpenMBV>
                      </SignalObserver>
                    </observers>
                    <enableOpenMBVFrameI/>
                  </Group>
                </Embed>
              </groups>
              <objects>
                <RigidBody name="yaw_axis">
                  <generalizedInitialPosition>
                    <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                      <ele>0</ele>
                      <ele>0</ele>
                      <ele>0</ele>
                      <ele>0</ele>
                    </xmlVector>
                  </generalizedInitialPosition>
                  <generalizedInitialVelocity>
                    <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                      <ele>(v0/3.6)</ele>
                      <ele>0</ele>
                      <ele>0</ele>
                      <ele>0</ele>
                    </xmlVector>
                  </generalizedInitialVelocity>
                  <mass unit="kg">0</mass>
                  <inertiaTensor unit="kg*m^2">
                    <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                    </xmlMatrix>
                  </inertiaTensor>
                  <stateDependentTranslation>
                    <TranslationAlongAxesXYZ/>
                  </stateDependentTranslation>
                  <stateDependentRotation>
                    <RotationAboutZAxis/>
                  </stateDependentRotation>
                  <frames/>
                  <contours/>
                  <openMBVRigidBody>
                    <Cylinder xmlns="http://www.mbsim-env.de/OpenMBV" name="Cylinder2">
                      <transparency unit="-">0.3</transparency>
                      <initialTranslation unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </initialTranslation>
                      <initialRotation unit="rad">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </initialRotation>
                      <scaleFactor unit="-">1</scaleFactor>
                      <radius unit="m">.01</radius>
                      <height unit="m">.2</height>
                    </Cylinder>
                  </openMBVRigidBody>
                </RigidBody>
                <RigidBody name="roll_axis">
                  <frameOfReference ref="../Object[yaw_axis]/Frame[C]"/>
                  <mass unit="kg">0</mass>
                  <inertiaTensor unit="kg*m^2">
                    <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                    </xmlMatrix>
                  </inertiaTensor>
                  <stateDependentRotation>
                    <RotationAboutXAxis/>
                  </stateDependentRotation>
                  <frames>
                    <FixedRelativeFrame name="v_obs_top">
                      <relativePosition unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0</ele>
                          <ele>1</ele>
                        </xmlVector>
                      </relativePosition>
                    </FixedRelativeFrame>
                  </frames><contours/>
                  <openMBVRigidBody>
                    <Cylinder xmlns="http://www.mbsim-env.de/OpenMBV" name="Cylinder2">
                      <transparency unit="-">0.3</transparency>
                      <initialTranslation unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </initialTranslation>
                      <initialRotation unit="rad">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </initialRotation>
                      <scaleFactor unit="-">1</scaleFactor>
                      <radius unit="m">0.02</radius>
                      <height unit="m">0.1</height>
                    </Cylinder>
                  </openMBVRigidBody>
                </RigidBody>
                <RigidBody name="Frame">
                  <generalizedInitialPosition>
                    <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                      <ele>0</ele>
                    </xmlVector>
                  </generalizedInitialPosition>
                  <frameOfReference ref="../Object[roll_axis]/Frame[C]"/>
                  <frameForKinematics ref="Frame[point_for_kin]"/>
                  <mass unit="kg">m_Frame</mass>
                  <inertiaTensor unit="kg*m^2">T_Frame</inertiaTensor>
                  <stateDependentRotation>
                    <RotationAboutYAxis/>
                  </stateDependentRotation>
                  <frames>
                    <FixedRelativeFrame name="point_for_kin">
                      <relativePosition unit="m">point_for_kin</relativePosition>
                    </FixedRelativeFrame>
                    <FixedRelativeFrame name="CG_lower_body">
                      <frameOfReference ref="../Frame[point_for_kin]"/>
                      <relativePosition unit="m">CG_lower_body</relativePosition>
                    </FixedRelativeFrame>
                    <FixedRelativeFrame name="CG_trim_mass">
                      <frameOfReference ref="../Frame[point_for_kin]"/>
                      <relativePosition unit="m">CG_trim_mass</relativePosition>
                    </FixedRelativeFrame>
                    <FixedRelativeFrame name="steering_head">
                      <frameOfReference ref="../Frame[point_for_kin]"/>
                      <relativePosition unit="m">steering_head</relativePosition>
                      <relativeOrientation>
                        <aboutY xmlns="http://www.mbsim-env.de/MBXMLUtils" unit="rad">caster_angle</aboutY>
                      </relativeOrientation>
                    </FixedRelativeFrame>
                    <FixedRelativeFrame name="axis_swingarm">
                      <frameOfReference ref="../Frame[point_for_kin]"/>
                      <relativePosition unit="m">axis_swingarm</relativePosition>
                    </FixedRelativeFrame>
                    <FixedRelativeFrame name="rear_suspension_top">
                      <frameOfReference ref="../Frame[point_for_kin]"/>
                      <relativePosition unit="m">rear_suspension_top</relativePosition>
                    </FixedRelativeFrame>
                    <FixedRelativeFrame name="wheel_axis_rear">
                      <frameOfReference ref="../Frame[point_for_kin]"/>
                      <relativePosition unit="m">wheel_axis_rear</relativePosition>
                    </FixedRelativeFrame>
                    <FixedRelativeFrame name="pack_bag_le">
                      <frameOfReference ref="../Frame[point_for_kin]"/>
                      <relativePosition unit="m">pack_bag_le</relativePosition>
                    </FixedRelativeFrame>
                    <FixedRelativeFrame name="pack_bag_ri">
                      <frameOfReference ref="../Frame[point_for_kin]"/>
                      <relativePosition unit="m">pack_bag_ri</relativePosition>
                    </FixedRelativeFrame>
                    <FixedRelativeFrame name="p19">
                      <frameOfReference ref="../Frame[point_for_kin]"/>
                      <relativePosition unit="m">p19</relativePosition>
                    </FixedRelativeFrame>
                    <FixedRelativeFrame name="obs_1">
                      <relativePosition unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0.8</ele>
                          <ele>0</ele>
                          <ele>0.47</ele>
                        </xmlVector>
                      </relativePosition>
                    </FixedRelativeFrame>
                    <FixedRelativeFrame name="obs_2">
                      <relativePosition unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0.1</ele>
                          <ele>0</ele>
                          <ele>0.47</ele>
                        </xmlVector>
                      </relativePosition>
                    </FixedRelativeFrame>
                    <FixedRelativeFrame name="obs_3">
                      <relativePosition unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>-0.6</ele>
                          <ele>0</ele>
                          <ele>0.47</ele>
                        </xmlVector>
                      </relativePosition>
                    </FixedRelativeFrame>
                    <FixedRelativeFrame name="obs_4">
                      <relativePosition unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0.8</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </relativePosition>
                    </FixedRelativeFrame>
                    <FixedRelativeFrame name="obs_5">
                      <relativePosition unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0.1</ele>
                          <ele>0</ele>
                          <ele>0.</ele>
                        </xmlVector>
                      </relativePosition>
                    </FixedRelativeFrame>
                    <FixedRelativeFrame name="obs_6">
                      <relativePosition unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>-0.6</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </relativePosition>
                    </FixedRelativeFrame>
                    <FixedRelativeFrame name="obs_7">
                      <relativePosition unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0.8</ele>
                          <ele>0</ele>
                          <ele>-0.47</ele>
                        </xmlVector>
                      </relativePosition>
                    </FixedRelativeFrame>
                    <FixedRelativeFrame name="obs_8">
                      <relativePosition unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0.1</ele>
                          <ele>0</ele>
                          <ele>-0.47</ele>
                        </xmlVector>
                      </relativePosition>
                    </FixedRelativeFrame>
                    <FixedRelativeFrame name="obs_9">
                      <relativePosition unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>-0.6</ele>
                          <ele>0</ele>
                          <ele>-0.47</ele>
                        </xmlVector>
                      </relativePosition>
                    </FixedRelativeFrame>
                    <FixedRelativeFrame name="pos_CoG">
                      <relativePosition unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>x_CoG</ele>
                          <ele>0</ele>
                          <ele>z_CoG</ele>
                        </xmlVector>
                      </relativePosition>
                    </FixedRelativeFrame>
                  </frames><contours/>
                  <openMBVRigidBody>
                    <Cuboid xmlns="http://www.mbsim-env.de/OpenMBV" name="Cuboid2">
                      <transparency unit="-">0.3</transparency>
                      <initialTranslation unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0.13</ele>
                          <ele>0</ele>
                          <ele>0.16</ele>
                        </xmlVector>
                      </initialTranslation>
                      <initialRotation unit="rad">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>caster_angle</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </initialRotation>
                      <scaleFactor unit="-">1</scaleFactor>
                      <length unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0.75</ele>
                          <ele>.05</ele>
                          <ele>.25</ele>
                        </xmlVector>
                      </length>
                    </Cuboid>
                  </openMBVRigidBody>
                  <openMBVFrameOfReference ref="Frame[point_for_kin]"/>
                </RigidBody>
                <RigidBody name="frame_torsion">
                  <frameOfReference ref="../Object[Frame]/Frame[steering_head]"/>
                  <mass unit="kg">0</mass>
                  <inertiaTensor unit="kg*m^2">
                    <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                    </xmlMatrix>
                  </inertiaTensor>
                  <stateDependentRotation>
                    <RotationAboutXAxis/>
                  </stateDependentRotation>
                  <frames/>
                  <contours/>
                  <openMBVRigidBody>
                    <Cube xmlns="http://www.mbsim-env.de/OpenMBV" name="Cube2">
                      <transparency unit="-">0.3</transparency>
                      <initialTranslation unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </initialTranslation>
                      <initialRotation unit="rad">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </initialRotation>
                      <scaleFactor unit="-">.01</scaleFactor>
                      <length unit="m">1</length>
                    </Cube>
                  </openMBVRigidBody></RigidBody>
                <RigidBody name="lower_body">
                  <frameOfReference ref="../Object[Frame]/Frame[CG_lower_body]"/>
                  <mass unit="kg">m_lower_body</mass>
                  <inertiaTensor unit="kg*m^2">T_lower_body</inertiaTensor>
                  <stateDependentTranslation>
                    <TranslationAlongYAxis/>
                  </stateDependentTranslation>
                  <frames>
                </frames>  
                  <contours/>
                  <openMBVRigidBody>
                    <Cube xmlns="http://www.mbsim-env.de/OpenMBV" name="Cube2">
                      <transparency unit="-">0.3</transparency>
                      <initialTranslation unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </initialTranslation>
                      <initialRotation unit="rad">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </initialRotation>
                      <scaleFactor unit="-">.01</scaleFactor>
                      <length unit="m">1</length>
                    </Cube>
                  </openMBVRigidBody>
                </RigidBody>
                <RigidBody name="torso_z_rotation">
                  <frameOfReference ref="../Object[lower_body]/Frame[C]"/>
                  <frameForKinematics ref="Frame[C]"/>
                  <mass unit="kg">0</mass>
                  <inertiaTensor unit="kg*m^2">
                    <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                      <row>
                        <ele>0.00001</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>0.00001</ele>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0.00001</ele>
                      </row>
                    </xmlMatrix>
                  </inertiaTensor>
                  <stateDependentRotation>
                    <RotationAboutZAxis/>
                  </stateDependentRotation>
                  <frames>
                    <FixedRelativeFrame name="joint_upper_body">
                      <relativeOrientation>
                        <aboutY xmlns="http://www.mbsim-env.de/MBXMLUtils" unit="degree">30</aboutY>
                      </relativeOrientation>
                    </FixedRelativeFrame>
                  </frames>
                  <contours/>
                  <openMBVRigidBody>
                    <Cube xmlns="http://www.mbsim-env.de/OpenMBV" name="Cube2">
                      <transparency unit="-">0.3</transparency>
                      <scaleFactor unit="-">.01</scaleFactor>
                      <length unit="m">1</length>
                    </Cube>
                  </openMBVRigidBody>
                </RigidBody>
                <RigidBody name="upper_body">
                  <frameOfReference ref="../Object[torso_z_rotation]/Frame[joint_upper_body]"/>
                  <frameForKinematics ref="Frame[joint_rider]"/>
                  <mass unit="kg">m_upper_body</mass>
                  <inertiaTensor unit="kg*m^2">T_upper_body</inertiaTensor>
                  <frameForInertiaTensor ref="Frame[MTM_Trafo]"/>
                  <stateDependentRotation>
                    <RotationAboutXAxis/>
                  </stateDependentRotation>
                  <frames>
                    <FixedRelativeFrame name="joint_rider">
                      <frameOfReference ref="../Frame[C]"/>
                      <relativePosition unit="m">joint_rider</relativePosition>
                    </FixedRelativeFrame>
                    <FixedRelativeFrame name="MTM_Trafo">
                      <relativeOrientation>
                        <aboutY xmlns="http://www.mbsim-env.de/MBXMLUtils" unit="degree">30</aboutY>
                      </relativeOrientation>
                    </FixedRelativeFrame>
                  </frames>
                  <contours/>
                  <openMBVRigidBody>
                    <Cuboid xmlns="http://www.mbsim-env.de/OpenMBV" name="Cuboid2">
                      <transparency unit="-">0.3</transparency>
                      <initialTranslation unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0</ele>
                          <ele>-0.1</ele>
                        </xmlVector>
                      </initialTranslation>
                      <initialRotation unit="rad">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </initialRotation>
                      <scaleFactor unit="-">1</scaleFactor>
                      <length unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0.2</ele>
                          <ele>0.3</ele>
                          <ele>0.5</ele>
                        </xmlVector>
                      </length>
                    </Cuboid>
                  </openMBVRigidBody>
                </RigidBody>
                <RigidBody name="trim_mass">
                  <frameOfReference ref="../Object[Frame]/Frame[CG_trim_mass]"/>
                  <mass unit="kg">m_trim_mass</mass>
                  <inertiaTensor unit="kg*m^2">T_trim_mass</inertiaTensor>
                  <frames/>
                  <contours/>
                  <openMBVRigidBody>
                    <Cube xmlns="http://www.mbsim-env.de/OpenMBV" name="Cube2">
                      <transparency unit="-">0.3</transparency>
                      <initialTranslation unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </initialTranslation>
                      <initialRotation unit="rad">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </initialRotation>
                      <scaleFactor unit="-">.01</scaleFactor>
                      <length unit="m">1</length>
                    </Cube>
                  </openMBVRigidBody>
                </RigidBody>
                <RigidBody name="pack_bag_le">
                  <frameOfReference ref="../Object[Frame]/Frame[pack_bag_le]"/>
                  <mass unit="kg">m_pack_bag</mass>
                  <inertiaTensor unit="kg*m^2">T_pack_bag</inertiaTensor>
                  <frames/>
                  <contours/>
                  <openMBVRigidBody>
                    <Cuboid xmlns="http://www.mbsim-env.de/OpenMBV" name="Cuboid2">
                      <transparency unit="-">1</transparency>
                      <initialTranslation unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                      </xmlVector>
                    </initialTranslation>
                      <initialRotation unit="rad">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                      </xmlVector>
                    </initialRotation>
                      <scaleFactor unit="-">1</scaleFactor>
                      <length unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>.3</ele>
                          <ele>.2</ele>
                          <ele>.3</ele>
                      </xmlVector>
                    </length>
                  </Cuboid>
                </openMBVRigidBody>
              </RigidBody>  
                <RigidBody name="pack_bag_ri">
                  <frameOfReference ref="../Object[Frame]/Frame[pack_bag_ri]"/>
                  <mass unit="kg">m_pack_bag</mass>
                  <inertiaTensor unit="kg*m^2">T_pack_bag</inertiaTensor>
                  <frames/>
                  <contours/>
                  <openMBVRigidBody>
                    <Cuboid xmlns="http://www.mbsim-env.de/OpenMBV" name="Cuboid2">
                      <transparency unit="-">1</transparency>
                      <initialTranslation unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                      </xmlVector>
                    </initialTranslation>
                      <initialRotation unit="rad">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                      </xmlVector>
                    </initialRotation>
                      <scaleFactor unit="-">1</scaleFactor>
                      <length unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>.3</ele>
                          <ele>.2</ele>
                          <ele>.3</ele>
                      </xmlVector>
                    </length>
                  </Cuboid>
                </openMBVRigidBody>
              </RigidBody>  
                <RigidBody name="upper_frame_vis">
                  <frameOfReference ref="../Object[Frame]/Frame[rear_suspension_top]"/>
                  <mass unit="kg">0</mass>
                  <inertiaTensor unit="kg*m^2">
                    <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                    </xmlMatrix>
                  </inertiaTensor>
                  <frames/>
                  <contours/>
                  <openMBVRigidBody>
                    <Cuboid xmlns="http://www.mbsim-env.de/OpenMBV" name="Cuboid2">
                      <transparency unit="-">0.3</transparency>
                      <initialTranslation unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </initialTranslation>
                      <initialRotation unit="rad">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </initialRotation>
                      <scaleFactor unit="-">1</scaleFactor>
                      <length unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0.2</ele>
                          <ele>0.04</ele>
                          <ele>0.04</ele>
                        </xmlVector>
                      </length>
                    </Cuboid>
                  </openMBVRigidBody>
                </RigidBody>
                <RigidBody name="CoG">
                  <frameOfReference ref="../Object[Frame]/Frame[pos_CoG]"/>
                  <mass unit="kg">0</mass>
                  <inertiaTensor unit="kg*m^2">
                    <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                    </xmlMatrix>
                  </inertiaTensor>
                  <frames/>
                  <contours/>
                  <openMBVRigidBody>
                    <Sphere xmlns="http://www.mbsim-env.de/OpenMBV" name="Sphere2">
                      <diffuseColor>
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>1</ele>
                          <ele>0.666667</ele>
                        </xmlVector>
                      </diffuseColor>
                      <transparency unit="-">0.3</transparency>
                      <radius unit="m">0.06</radius>
                    </Sphere>
                  </openMBVRigidBody>
                </RigidBody>
              </objects>
              <links>
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="trail">
                  <inputSignal ref="../../Group[Group_Controller]/Link[time]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="x" arg1Dim="1">x_LK  = (steering_head(3)- z0_I_Road(3))*tan(-caster_angle(1))
x_RA =  x_Frame_C(1) - steering_head(1)  
ret=x_LK-x_RA</SymbolicFunction>
                  </function>
                </SignalOperation>
                <KineticExcitation name="Fy_Impuls">
                  <connect ref2="../Object[Frame]/Frame[steering_head]"/>
                  <frameOfReference>"secondFrame"</frameOfReference>
                  <forceDirection unit="-">
                    <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                      <row>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>1</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                      </row>
                    </xmlMatrix>
                  </forceDirection>
                  <forceFunction>
                    <PiecewiseDefinedFunction>
                      <limitedFunctions>
                        <LimitedFunction>
                          <function>
                            <ConstantFunction>
                              <a0>0</a0>
                            </ConstantFunction>
                          </function>
                          <limit>T_Fy_start</limit>
                        </LimitedFunction>
                        <LimitedFunction>
                          <function>
                            <SymbolicFunction arg1="t">
                              <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                                <ele>ret = Fy_Impuls*0.5*(1-cos(2*pi*1/T_Fy_exc*(t-T_Fy_start)))*(1-Steering_controller)</ele>
                              </xmlVector>
                            </SymbolicFunction>
                          </function>
                          <limit>T_Fy_start+T_Fy_exc</limit>
                        </LimitedFunction>
                        <LimitedFunction>
                          <function>
                            <ConstantFunction>
                              <a0>0</a0>
                            </ConstantFunction>
                          </function>
                          <limit>1000</limit>
                        </LimitedFunction>
                      </limitedFunctions>
                    </PiecewiseDefinedFunction>
                  </forceFunction>
                  <enableOpenMBV/>
                </KineticExcitation>
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="Aero_force_sop">
                  <inputSignal ref="../../Group[Group_Controller]/Link[v_long]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="v" arg1Dim="1">drag = 0.5*0.48*0.65*1.225*(v(1))^2
lift = 0.5*0.078*0.65*1.225*(v(1))^2
ret = [drag;lift]</SymbolicFunction>
                  </function>
                </SignalOperation>
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="Aero_moment_sop">
                  <inputSignal ref="../../Group[Group_Controller]/Link[v_long]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="v" arg1Dim="1">ret = 0.5*0.189*0.65*1.225*(v(1))^2</SymbolicFunction>
                  </function>
                </SignalOperation>
                <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils" count="enable_aero" counterName="n">
                  <Parameter/>
                  <KineticExcitation xmlns="http://www.mbsim-env.de/MBSim" name="Aero_force_moment_exc">
                    <connect ref2="../Object[Frame]/Frame[point_for_kin]"/>
                    <forceDirection unit="-">
                      <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <row>
                          <ele>-1</ele>
                          <ele>0</ele>
                        </row>
                        <row>
                          <ele>0</ele>
                          <ele>0</ele>
                        </row>
                        <row>
                          <ele>0</ele>
                          <ele>1</ele>
                        </row>
                      </xmlMatrix>
                    </forceDirection>
                    <forceFunction>
                      <SignalFunction xmlns="http://www.mbsim-env.de/MBSimControl">
                        <returnSignal ref="../../Link[Aero_force_sop]"/>
                      </SignalFunction>
                    </forceFunction>
                    <momentDirection unit="-">
                      <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <row>
                          <ele>0</ele>
                        </row>
                        <row>
                          <ele>-1</ele>
                        </row>
                        <row>
                          <ele>0</ele>
                        </row>
                      </xmlMatrix>
                    </momentDirection>
                    <momentFunction>
                      <SignalFunction xmlns="http://www.mbsim-env.de/MBSimControl">
                        <returnSignal ref="../../Link[Aero_moment_sop]"/>
                      </SignalFunction>
                    </momentFunction>
                  </KineticExcitation>
                </Embed>
                <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils" count="enable_rider_yaw" counterName="n">
                  <Parameter/>
                  <Multiplexer xmlns="http://www.mbsim-env.de/MBSimControl" name="Arms_mom_input">
                    <inputSignal ref="../Group[Dof_rider_yaw]/Link[theta_rider_yaw]"/>
                    <inputSignal ref="../Group[Dof_rider_yaw]/Link[thetap_rider_yaw]"/>
                    <inputSignal ref="../../Group[Group_Front_fork]/Link[steering_angle]"/>
                    <inputSignal ref="../../Group[Group_Front_fork]/Link[steering_angle_vel]"/>
                  </Multiplexer>
                </Embed>
                <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils" count="enable_rider_yaw" counterName="n">
                  <Parameter/>
                  <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="Arms_mom">
                    <inputSignal ref="../Link[Arms_mom_input]"/>
                    <function>
                      <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="i" arg1Dim="4">gamma=i(1);
gamma_p=i(2);
delta=i(3);
delta_p=i(4);

ret=(gamma-delta)*rider_yaw_arms(1)+(gamma_p-delta_p)*rider_yaw_arms(2)</SymbolicFunction>
                    </function>
                  </SignalOperation>
                </Embed>
                <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils" count="enable_rider_yaw" counterName="n">
                  <Parameter/>
                  <KineticExcitation xmlns="http://www.mbsim-env.de/MBSim" name="Arms_mom_upperbody">
                    <connect ref1="../Object[lower_body]/Frame[C]" ref2="../Object[torso_z_rotation]/Frame[C]"/>
                    <momentDirection unit="-">
                      <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <row>
                          <ele>0</ele>
                        </row>
                        <row>
                          <ele>0</ele>
                        </row>
                        <row>
                          <ele>-1</ele>
                        </row>
                      </xmlMatrix>
                    </momentDirection>
                    <momentFunction>
                      <SignalFunction xmlns="http://www.mbsim-env.de/MBSimControl">
                        <returnSignal ref="../../Link[Arms_mom]"/>
                      </SignalFunction>
                    </momentFunction>
                    <enableOpenMBV>
                      <scaleLength>.1</scaleLength>
                      <scaleSize>.1</scaleSize>
                    </enableOpenMBV>
                  </KineticExcitation>
                </Embed>
                <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils" count="enable_rider_yaw" counterName="n">
                  <Parameter/>
                  <KineticExcitation xmlns="http://www.mbsim-env.de/MBSim" name="Arms_mom_handlebar">
                    <connect ref1="../Object[frame_torsion]/Frame[C]" ref2="../../Group[Group_Front_fork]/Object[Steering_axis]/Frame[C]"/>
                    <momentDirection unit="-">
                      <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <row>
                          <ele>0</ele>
                        </row>
                        <row>
                          <ele>0</ele>
                        </row>
                        <row>
                          <ele>1</ele>
                        </row>
                      </xmlMatrix>
                    </momentDirection>
                    <momentFunction>
                      <SignalFunction xmlns="http://www.mbsim-env.de/MBSimControl">
                        <returnSignal ref="../../Link[Arms_mom]"/>
                      </SignalFunction>
                    </momentFunction>
                    <enableOpenMBV>
                      <scaleLength>.1</scaleLength>
                      <scaleSize>.1</scaleSize>
                    </enableOpenMBV>
                  </KineticExcitation>
                </Embed>
              </links>
              <constraints>
                <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils" count="1-enable_frame_torsion" counterName="n">
                  <Parameter/>
                  <GeneralizedPositionConstraint xmlns="http://www.mbsim-env.de/MBSim" name="con_al_frame_torsion">
                    <dependentRigidBody ref="../Object[frame_torsion]"/>
                    <constraintFunction>
                      <ConstantFunction>
                        <a0>0</a0>
                    </ConstantFunction>
                  </constraintFunction>
                </GeneralizedPositionConstraint>
                </Embed>
                <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils" count="1-enable_rider_lean" counterName="n">
                  <Parameter/>
                  <GeneralizedPositionConstraint xmlns="http://www.mbsim-env.de/MBSim" name="con_al_rider_torsion">
                    <dependentRigidBody ref="../Object[upper_body]"/>
                    <constraintFunction>
                      <ConstantFunction>
                        <a0>0</a0>
                    </ConstantFunction>
                  </constraintFunction>
                </GeneralizedPositionConstraint>
                </Embed>
                <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils" count="1-enable_rider_lateral" counterName="n">
                  <Parameter/>
                  <GeneralizedPositionConstraint xmlns="http://www.mbsim-env.de/MBSim" name="con_y_rider_lateral">
                    <dependentRigidBody ref="../Object[lower_body]"/>
                    <constraintFunction>
                      <ConstantFunction>
                        <a0>0</a0>
                      </ConstantFunction>
                    </constraintFunction>
                  </GeneralizedPositionConstraint>
                </Embed>
                <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils" count="1-enable_rider_yaw" counterName="n">
                  <Parameter/>
                  <GeneralizedPositionConstraint xmlns="http://www.mbsim-env.de/MBSim" name="con_theta_rider_yaw">
                    <dependentRigidBody ref="../Object[torso_z_rotation]"/>
                    <constraintFunction>
                      <ConstantFunction>
                        <a0>0</a0>
                      </ConstantFunction>
                    </constraintFunction>
                  </GeneralizedPositionConstraint>
                </Embed>
              </constraints>
              <observers/>
            </Group>
          </Embed>
          <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils" parameterHref="Data/Group_Front_fork.xml">
            <Group xmlns="http://www.mbsim-env.de/MBSim" name="Group_Front_fork">
              <frames/>
              <contours/>
              <groups>
                <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils" count="enable_fork_rot_x" counterName="n">
                  <Parameter/>
                  <Group xmlns="http://www.mbsim-env.de/MBSim" name="Dof_fork_rot_x">
                    <frames/>
                    <contours/>
                    <groups/>
                    <objects/>
                    <links>
                      <GeneralizedPositionSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="al_fork">
                        <object ref="../../Object[Fork_rot_x]"/>
                  </GeneralizedPositionSensor>
                      <GeneralizedVelocitySensor xmlns="http://www.mbsim-env.de/MBSimControl" name="alp_fork">
                        <object ref="../../Object[Fork_rot_x]"/>
                  </GeneralizedVelocitySensor>
                      <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="Mx_bend_fork_sop">
                        <inputSignal ref="../Link[al_fork]"/>
                        <inputSignal ref="../Link[alp_fork]"/>
                        <function>
                          <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="al" arg1Dim="1" arg2="alp" arg2Dim="1">
                            <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                              <ele>ret = -bend_fork(1)*al(1) - bend_fork(2)*alp(1) + 1e-7</ele>
                          </xmlVector>
                        </SymbolicFunction>
                      </function>
                    </SignalOperation>      
                      <KineticExcitation name="Mx_bend_fork_exc">
                        <connect ref1="../../Object[upper_fork]/Frame[fork_joint]" ref2="../../Object[Fork_rot_x]/Frame[C]"/>
                        <momentDirection unit="-">
                          <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                            <row>
                              <ele>1</ele>
                        </row>
                            <row>
                              <ele>0</ele>
                        </row>
                            <row>
                              <ele>0</ele>
                        </row>
                      </xmlMatrix>
                    </momentDirection>
                        <momentFunction>
                          <SignalFunction xmlns="http://www.mbsim-env.de/MBSimControl">
                            <returnSignal ref="../../Link[Mx_bend_fork_sop]"/>
                      </SignalFunction>
                    </momentFunction>
                        <enableOpenMBV>
                          <diffuseColor>
                            <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                              <ele>0.666667</ele>
                              <ele>.3</ele>
                              <ele>1</ele>
                        </xmlVector>
                      </diffuseColor>
                          <scaleLength>.01</scaleLength>
                          <scaleSize>.1</scaleSize>
                    </enableOpenMBV>
                  </KineticExcitation>
                  </links>
                    <constraints/>
                    <observers/>
                </Group>
                </Embed>
                <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils" count="enable_fork_rot_y" counterName="n">
                  <Parameter/>
                  <Group xmlns="http://www.mbsim-env.de/MBSim" name="Dof_fork_rot_y">
                    <frames/>
                    <contours/>
                    <groups/>
                    <objects/>
                    <links>
                      <GeneralizedPositionSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="be_fork">
                        <object ref="../../Object[Fork_rot_y]"/>
                  </GeneralizedPositionSensor>
                      <GeneralizedVelocitySensor xmlns="http://www.mbsim-env.de/MBSimControl" name="bep_fork">
                        <object ref="../../Object[Fork_rot_y]"/>
                  </GeneralizedVelocitySensor>
                      <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="My_bend_fork_sop">
                        <inputSignal ref="../Link[be_fork]"/>
                        <inputSignal ref="../Link[bep_fork]"/>
                        <function>
                          <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="be" arg1Dim="1" arg2="bep" arg2Dim="1">
                            <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                              <ele>ret = -bend_fork(1)*be(1) - bend_fork(2)*bep(1) + M0_rot_y_fork</ele>
                          </xmlVector>
                        </SymbolicFunction>
                      </function>
                    </SignalOperation>      
                      <KineticExcitation name="My_bend_fork_exc">
                        <connect ref1="../../Object[Fork_rot_x]/Frame[C]" ref2="../../Object[Fork_rot_y]/Frame[C]"/>
                        <momentDirection unit="-">
                          <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                            <row>
                              <ele>0</ele>
                        </row>
                            <row>
                              <ele>1</ele>
                        </row>
                            <row>
                              <ele>0</ele>
                        </row>
                      </xmlMatrix>
                    </momentDirection>
                        <momentFunction>
                          <SignalFunction xmlns="http://www.mbsim-env.de/MBSimControl">
                            <returnSignal ref="../../Link[My_bend_fork_sop]"/>
                      </SignalFunction>
                    </momentFunction>
                        <enableOpenMBV>
                          <diffuseColor>
                            <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                              <ele>0.666667</ele>
                              <ele>.3</ele>
                              <ele>1</ele>
                        </xmlVector>
                      </diffuseColor>
                          <scaleLength>.001</scaleLength>
                          <scaleSize>.1</scaleSize>
                    </enableOpenMBV>
                  </KineticExcitation>
                  </links>
                    <constraints/>
                    <observers/>
                </Group>
                </Embed>
                <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils" count="enable_fork_rot_z" counterName="n">
                  <Parameter/>
                  <Group xmlns="http://www.mbsim-env.de/MBSim" name="Dof_fork_rot_z">
                    <frames/>
                    <contours/>
                    <groups/>
                    <objects/>
                    <links>
                      <GeneralizedPositionSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="ga_fork">
                        <object ref="../../Object[Fork_rot_z]"/>
                  </GeneralizedPositionSensor>
                      <GeneralizedVelocitySensor xmlns="http://www.mbsim-env.de/MBSimControl" name="gap_fork">
                        <object ref="../../Object[Fork_rot_z]"/>
                  </GeneralizedVelocitySensor>
                      <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="Mz_tors_fork_sop">
                        <inputSignal ref="../Link[ga_fork]"/>
                        <inputSignal ref="../Link[gap_fork]"/>
                        <function>
                          <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="ga" arg1Dim="1" arg2="gap" arg2Dim="1">
                            <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                              <ele>ret = -tors_fork(1)*ga(1) - tors_fork(2)*gap(1)</ele>
                          </xmlVector>
                        </SymbolicFunction>
                      </function>
                    </SignalOperation>      
                      <KineticExcitation name="Mz_tors_fork_exc">
                        <connect ref1="../../Object[Fork_rot_y]/Frame[C]" ref2="../../Object[Fork_rot_z]/Frame[C]"/>
                        <momentDirection unit="-">
                          <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                            <row>
                              <ele>0</ele>
                        </row>
                            <row>
                              <ele>0</ele>
                        </row>
                            <row>
                              <ele>1</ele>
                        </row>
                      </xmlMatrix>
                    </momentDirection>
                        <momentFunction>
                          <SignalFunction xmlns="http://www.mbsim-env.de/MBSimControl">
                            <returnSignal ref="../../Link[Mz_tors_fork_sop]"/>
                      </SignalFunction>
                    </momentFunction>
                        <enableOpenMBV>
                          <diffuseColor>
                            <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                              <ele>0.666667</ele>
                              <ele>.3</ele>
                              <ele>1</ele>
                        </xmlVector>
                      </diffuseColor>
                          <scaleLength>.01</scaleLength>
                          <scaleSize>.1</scaleSize>
                    </enableOpenMBV>
                  </KineticExcitation>
                  </links>
                    <constraints/>
                    <observers/>
                </Group>
                </Embed>
                <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils" count="enable_front_susp" counterName="n">
                  <Parameter/>
                  <Group xmlns="http://www.mbsim-env.de/MBSim" name="Dof_fork_suspension">
                    <frames/>
                    <contours/>
                    <groups/>
                    <objects/>
                    <links>
                      <GeneralizedPositionSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="z_susp_f">
                        <object ref="../../Object[lower_fork]"/>
                  </GeneralizedPositionSensor>
                      <GeneralizedVelocitySensor xmlns="http://www.mbsim-env.de/MBSimControl" name="zp_susp_f">
                        <object ref="../../Object[lower_fork]"/>
                  </GeneralizedVelocitySensor>
                      <SpringDamper name="SpringDamper_f">
                        <connect ref1="../../Object[Fork_rot_z]/Frame[suspension_f]" ref2="../../Object[lower_fork]/Frame[joint_fork]"/>
                        <forceFunction>
                          <NonlinearSpringDamperForce>
                            <forceDeflectionFunction>
                              <TabularFunction>
                                <xy>
                                  <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                                    <row>
                                      <ele>-1</ele>
                                      <ele>-c_suspension_f</ele>
                                    </row>
                                    <row>
                                      <ele>0</ele>
                                      <ele>0</ele>
                                    </row>
                                    <row>
                                      <ele>1</ele>
                                      <ele>c_suspension_f</ele>
                                    </row>
                                  </xmlMatrix>
                                </xy>
                              </TabularFunction>
                            </forceDeflectionFunction>
                            <forceVelocityFunction>
                              <TabularFunction>
                                <xy>
                                  <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                                    <row>
                                      <ele>-2</ele>
                                      <ele>-Fd_compression_f</ele>
                                    </row>
                                    <row>
                                      <ele>-0.2</ele>
                                      <ele>-Fd_compression_f/10</ele>
                                    </row>
                                    <row>
                                      <ele>-0.1</ele>
                                      <ele>-Fd_compression_f/20</ele>
                                    </row>
                                    <row>
                                      <ele>0</ele>
                                      <ele>0</ele>
                                    </row>
                                    <row>
                                      <ele>0.1</ele>
                                      <ele>Fd_rebound_f/20</ele>
                                    </row>
                                    <row>
                                      <ele>0.2</ele>
                                      <ele>Fd_rebound_f/10</ele>
                                    </row>
                                    <row>
                                      <ele>2</ele>
                                      <ele>Fd_rebound_f</ele>
                                    </row>
                                  </xmlMatrix>
                                </xy>
                              </TabularFunction>
                            </forceVelocityFunction>
                          </NonlinearSpringDamperForce>
                        </forceFunction>
                        <unloadedLength unit="m">F0_suspension_f/c_suspension_f + L0_spring_f</unloadedLength>
                        <enableOpenMBV>
                          <diffuseColor>
                            <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                              <ele>0</ele>
                              <ele>1</ele>
                              <ele>0.666667</ele>
                            </xmlVector>
                          </diffuseColor>
                          <numberOfCoils>15</numberOfCoils>
                          <springRadius unit="m">0.025</springRadius>
                          <crossSectionRadius unit="m">0.005</crossSectionRadius>
                        </enableOpenMBV>
                      </SpringDamper>
                    </links>
                    <constraints/>
                    <observers/>
                  </Group>
                </Embed>
              </groups>
              <objects>
                <RigidBody name="Steering_axis">
                  <generalizedInitialPosition>
                    <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                      <ele>0</ele>
                    </xmlVector>
                  </generalizedInitialPosition>
                  <frameOfReference ref="../../Group[Group_Frame]/Object[frame_torsion]/Frame[C]"/>
                  <mass unit="kg">0</mass>
                  <inertiaTensor unit="kg*m^2">
                    <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                    </xmlMatrix>
                  </inertiaTensor>
                  <stateDependentRotation>
                    <RotationAboutZAxis/>
                  </stateDependentRotation>
                  <frames>
                    <FixedRelativeFrame name="horizontal">
                      <frameOfReference ref="../Frame[C]"/>
                      <relativeOrientation>
                        <aboutY xmlns="http://www.mbsim-env.de/MBXMLUtils" unit="rad">-caster_angle</aboutY>
                      </relativeOrientation>
                    </FixedRelativeFrame>
                    <FixedRelativeFrame name="CG_upper_fork">
                      <frameOfReference ref="../Frame[horizontal]"/>
                      <relativePosition unit="m">CG_upper_fork</relativePosition>
                      <relativeOrientation>
                        <aboutY xmlns="http://www.mbsim-env.de/MBXMLUtils" unit="rad">caster_angle</aboutY>
                      </relativeOrientation>
                    </FixedRelativeFrame>
                  </frames>
                  <contours/>
                  <openMBVRigidBody>
                    <Cuboid xmlns="http://www.mbsim-env.de/OpenMBV" name="Cuboid2">
                      <transparency unit="-">0.3</transparency>
                      <initialTranslation unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0.03</ele>
                          <ele>0</ele>
                          <ele>0.1</ele>
                        </xmlVector>
                      </initialTranslation>
                      <initialRotation unit="rad">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </initialRotation>
                      <scaleFactor unit="-">1</scaleFactor>
                      <length unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0.08</ele>
                          <ele>0.2</ele>
                          <ele>0.2</ele>
                        </xmlVector>
                      </length>
                    </Cuboid>
                  </openMBVRigidBody>
                  <enableOpenMBVFrameC/>
                </RigidBody>
                <RigidBody name="upper_fork">
                  <frameOfReference ref="../Object[Steering_axis]/Frame[CG_upper_fork]"/>
                  <mass unit="kg">m_upper_fork</mass>
                  <inertiaTensor unit="kg*m^2">T_upper_fork</inertiaTensor>
                  <frames>
                    <FixedRelativeFrame name="horizontal">
                      <relativeOrientation>
                        <aboutY xmlns="http://www.mbsim-env.de/MBXMLUtils" unit="rad">-caster_angle</aboutY>
                      </relativeOrientation>
                    </FixedRelativeFrame>
                    <FixedRelativeFrame name="fork_joint">
                      <frameOfReference ref="../Frame[horizontal]"/>
                      <relativePosition unit="m">fork_joint</relativePosition>
                      <relativeOrientation>
                        <aboutY xmlns="http://www.mbsim-env.de/MBXMLUtils" unit="rad">caster_angle</aboutY>
                      </relativeOrientation>
                    </FixedRelativeFrame>
                  </frames>
                  <contours/>
                  <openMBVRigidBody>
                    <Cube xmlns="http://www.mbsim-env.de/OpenMBV" name="Cube2">
                      <transparency unit="-">0.3</transparency>
                      <initialTranslation unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </initialTranslation>
                      <initialRotation unit="rad">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </initialRotation>
                      <scaleFactor unit="-">.02</scaleFactor>
                      <length unit="m">1</length>
                    </Cube>
                  </openMBVRigidBody></RigidBody>
                <RigidBody name="Fork_rot_x">
                  <frameOfReference ref="../Object[upper_fork]/Frame[fork_joint]"/>
                  <mass unit="kg">0</mass>
                  <inertiaTensor unit="kg*m^2">
                    <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                    </xmlMatrix>
                  </inertiaTensor>
                  <stateDependentRotation>
                    <RotationAboutXAxis/>
                  </stateDependentRotation>
                  <frames/>
                  <contours/>
                  <openMBVRigidBody>
                    <Cube xmlns="http://www.mbsim-env.de/OpenMBV" name="Cube2">
                      <diffuseColor>
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0.583333</ele>
                          <ele>0.666667</ele>
                          <ele>1</ele>
                        </xmlVector>
                      </diffuseColor>
                      <transparency unit="-">0.3</transparency>
                      <initialTranslation unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </initialTranslation>
                      <initialRotation unit="rad">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </initialRotation>
                      <scaleFactor unit="-">1</scaleFactor>
                      <length unit="m">0.03</length>
                    </Cube>
                  </openMBVRigidBody>
                </RigidBody>
                <RigidBody name="Fork_rot_y">
                  <frameOfReference ref="../Object[Fork_rot_x]/Frame[C]"/>
                  <mass unit="kg">0</mass>
                  <inertiaTensor unit="kg*m^2">
                    <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                    </xmlMatrix>
                  </inertiaTensor>
                  <stateDependentRotation>
                    <RotationAboutYAxis/>
                  </stateDependentRotation>
                  <frames/>
                  <contours/>
                  <openMBVRigidBody>
                    <Cube xmlns="http://www.mbsim-env.de/OpenMBV" name="Cube2">
                      <diffuseColor>
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0.583333</ele>
                          <ele>0.666667</ele>
                          <ele>1</ele>
                        </xmlVector>
                      </diffuseColor>
                      <transparency unit="-">0.3</transparency>
                      <initialTranslation unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </initialTranslation>
                      <initialRotation unit="rad">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </initialRotation>
                      <scaleFactor unit="-">1</scaleFactor>
                      <length unit="m">0.03</length>
                    </Cube>
                  </openMBVRigidBody>
                </RigidBody>
                <RigidBody name="Fork_rot_z">
                  <frameOfReference ref="../Object[Fork_rot_y]/Frame[C]"/>
                  <frameForKinematics ref="Frame[C]"/>
                  <mass unit="kg">0</mass>
                  <inertiaTensor unit="kg*m^2">
                    <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                    </xmlMatrix>
                  </inertiaTensor>
                  <stateDependentRotation>
                    <RotationAboutZAxis/>
                  </stateDependentRotation>
                  <frames>
                    <FixedRelativeFrame name="suspension_f">
                      <relativePosition unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0</ele>
                          <ele>L0_spring_f</ele>
                        </xmlVector>
                      </relativePosition>
                    </FixedRelativeFrame>
                  </frames>
                  <contours/>
                  <openMBVRigidBody>
                    <Cube xmlns="http://www.mbsim-env.de/OpenMBV" name="Cube2">
                      <transparency unit="-">0.3</transparency>
                      <initialTranslation unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </initialTranslation>
                      <initialRotation unit="rad">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </initialRotation>
                      <scaleFactor unit="-">1</scaleFactor>
                      <length unit="m">0.02</length>
                    </Cube>
                  </openMBVRigidBody>
                </RigidBody>
                <RigidBody name="lower_fork">
                  <frameOfReference ref="../Object[Fork_rot_z]/Frame[C]"/>
                  <frameForKinematics ref="Frame[joint_fork]"/>
                  <mass unit="kg">m_lower_fork</mass>
                  <inertiaTensor unit="kg*m^2">T_lower_fork</inertiaTensor>
                  <stateDependentTranslation>
                    <TranslationAlongZAxis/>
                  </stateDependentTranslation>
                  <frames>
                    <FixedRelativeFrame name="joint_fork">
                      <frameOfReference ref="../Frame[horizontal]"/>
                      <relativePosition unit="m">joint_fork</relativePosition>
                      <relativeOrientation>
                        <aboutY xmlns="http://www.mbsim-env.de/MBXMLUtils" unit="rad">caster_angle</aboutY>
                      </relativeOrientation>
                    </FixedRelativeFrame>
                    <FixedRelativeFrame name="Wheel_Center">
                      <frameOfReference ref="../Frame[horizontal]"/>
                      <relativePosition unit="m">Wheel_Center</relativePosition>
                    </FixedRelativeFrame>
                    <FixedRelativeFrame name="horizontal">
                      <relativeOrientation>
                        <aboutY xmlns="http://www.mbsim-env.de/MBXMLUtils" unit="rad">-caster_angle</aboutY>
                      </relativeOrientation>
                    </FixedRelativeFrame>
                  </frames>
                  <contours/>
                  <openMBVRigidBody>
                    <Cube xmlns="http://www.mbsim-env.de/OpenMBV" name="Cube2">
                      <transparency unit="-">0.3</transparency>
                      <initialTranslation unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </initialTranslation>
                      <initialRotation unit="rad">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </initialRotation>
                      <scaleFactor unit="-">.02</scaleFactor>
                      <length unit="m">1</length>
                    </Cube>
                  </openMBVRigidBody></RigidBody>
                <RigidBody name="stanchion_left">
                  <frameOfReference ref="../Object[Steering_axis]/Frame[C]"/>
                  <mass unit="kg">0</mass>
                  <inertiaTensor unit="kg*m^2">
                    <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                    </xmlMatrix>
                  </inertiaTensor>
                  <frames>
                    <FixedRelativeFrame name="FixedRelativeFrame"/>
              </frames>    
                  <contours/>
                  <openMBVRigidBody>
                    <Cylinder xmlns="http://www.mbsim-env.de/OpenMBV" name="Cylinder2">
                      <transparency unit="-">0.3</transparency>
                      <initialTranslation unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0.026</ele>
                          <ele>0.1</ele>
                          <ele>-0.18</ele>
                        </xmlVector>
                      </initialTranslation>
                      <initialRotation unit="degree">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>90</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </initialRotation>
                      <scaleFactor unit="-">1</scaleFactor>
                      <radius unit="m">0.04</radius>
                      <height unit="m">0.71</height>
                    </Cylinder>
                  </openMBVRigidBody>
                </RigidBody>  
                <RigidBody name="stanchion_right">
                  <frameOfReference ref="../Object[Steering_axis]/Frame[C]"/>
                  <mass unit="kg">0</mass>
                  <inertiaTensor unit="kg*m^2">
                    <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                    </xmlMatrix>
                  </inertiaTensor>
                  <frames/>
                  <contours/>
                  <openMBVRigidBody>
                    <Cylinder xmlns="http://www.mbsim-env.de/OpenMBV" name="Cylinder2">
                      <transparency unit="-">0.3</transparency>
                      <initialTranslation unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0.026</ele>
                          <ele>-0.1</ele>
                          <ele>-0.18 </ele>
                        </xmlVector>
                      </initialTranslation>
                      <initialRotation unit="degree">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>90</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </initialRotation>
                      <scaleFactor unit="-">1</scaleFactor>
                      <radius unit="m">0.04</radius>
                      <height unit="m">0.71</height>
                    </Cylinder>
                  </openMBVRigidBody>
                </RigidBody>  
                <RigidBody name="handlebar">
                  <frameOfReference ref="../Object[Steering_axis]/Frame[C]"/>
                  <mass unit="kg">0</mass>
                  <inertiaTensor unit="kg*m^2">
                    <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                    </xmlMatrix>
                  </inertiaTensor>
                  <frames>
                    <FixedRelativeFrame name="right_handlebar">
                      <frameOfReference ref="../Frame[C]"/>
                      <relativePosition unit="m">right_handlebar</relativePosition>
                    </FixedRelativeFrame>
                    <FixedRelativeFrame name="left_handlebar">
                      <relativePosition unit="m">left_handlebar</relativePosition>
                    </FixedRelativeFrame>
                  </frames>
                  <contours/>
                  <openMBVRigidBody>
                    <Cylinder xmlns="http://www.mbsim-env.de/OpenMBV" name="Cylinder2">
                      <transparency unit="-">0.3</transparency>
                      <initialTranslation unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>.026</ele>
                          <ele>0</ele>
                          <ele>0.17</ele>
                        </xmlVector>
                      </initialTranslation>
                      <initialRotation unit="rad">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </initialRotation>
                      <scaleFactor unit="-">1</scaleFactor>
                      <radius unit="m">.03</radius>
                      <height unit="m">.6</height>
                    </Cylinder>
                  </openMBVRigidBody>
                  <enableOpenMBVFrameC/></RigidBody>  
                <RigidBody name="Steeraxis_trail">
                  <frameOfReference ref="../Object[Steering_axis]/Frame[C]"/>
                  <mass unit="kg">0</mass>
                  <inertiaTensor unit="kg*m^2">
                    <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                    </xmlMatrix>
                  </inertiaTensor>
                  <frames/>
                  <contours/>
                  <openMBVRigidBody>
                    <Cylinder xmlns="http://www.mbsim-env.de/OpenMBV" name="Cylinder2">
                      <diffuseColor>
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0.666667</ele>
                          <ele>1</ele>
                          <ele>.3</ele>
                        </xmlVector>
                      </diffuseColor>
                      <transparency unit="-">0.3</transparency>
                      <initialTranslation unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0</ele>
                          <ele>-0.47</ele>
                        </xmlVector>
                      </initialTranslation>
                      <initialRotation unit="degree">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>90</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </initialRotation>
                      <scaleFactor unit="-">1</scaleFactor>
                      <radius unit="m">.005</radius>
                      <height unit="m">1.15</height>
                    </Cylinder>
                  </openMBVRigidBody>
                </RigidBody>  
              </objects>
              <links>
                <GeneralizedPositionSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="steering_angle">
                  <object ref="../Object[Steering_axis]"/>
            </GeneralizedPositionSensor>
                <GeneralizedVelocitySensor xmlns="http://www.mbsim-env.de/MBSimControl" name="steering_angle_vel">
                  <object ref="../Object[Steering_axis]"/>
            </GeneralizedVelocitySensor>
                <GeneralizedAccelerationSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="steering_angle_acc">
                  <object ref="../Object[Steering_axis]"/>
                </GeneralizedAccelerationSensor>
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="steering_damper_sop">
                  <inputSignal ref="../Link[steering_angle_vel]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="om" arg1Dim="1">
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>ret=-om(1)*steering_damper</ele>
                    </xmlVector>
                  </SymbolicFunction>
                </function>
              </SignalOperation>  
                <KineticExcitation name="steering_damper_exc">
                  <connect ref1="../../Group[Group_Frame]/Object[frame_torsion]/Frame[C]" ref2="../Object[Steering_axis]/Frame[C]"/>
                  <momentDirection unit="-">
                    <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                      <row>
                        <ele>0</ele>
                    </row>
                      <row>
                        <ele>0</ele>
                    </row>
                      <row>
                        <ele>1</ele>
                    </row>
                  </xmlMatrix>
                </momentDirection>
                  <momentFunction>
                    <SignalFunction xmlns="http://www.mbsim-env.de/MBSimControl">
                      <returnSignal ref="../../Link[steering_damper_sop]"/>
                  </SignalFunction>
                </momentFunction>
                  <enableOpenMBV>
                    <diffuseColor>
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>0.666667</ele>
                        <ele>.3</ele>
                        <ele>1</ele>
                    </xmlVector>
                  </diffuseColor>
                    <scaleLength>.1</scaleLength>
                    <scaleSize>.1</scaleSize>
                </enableOpenMBV>
              </KineticExcitation>
                <PositionSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="r_steering_head_I">
                  <frame ref="../../Group[Group_Frame]/Object[Frame]/Frame[steering_head]"/>
                </PositionSensor>
                <PositionSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="r_wheel_center_f_I">
                  <frame ref="../../Group[Group_Front_wheel]/Object[Front_wheel]/Frame[C]"/>
                </PositionSensor>
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="r_st_wc_I">
                  <inputSignal ref="../Link[r_wheel_center_f_I]"/>
                  <inputSignal ref="../Link[r_steering_head_I]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="r_wc" arg1Dim="3" arg2="r_st" arg2Dim="3">
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>ret = r_wc(1) - r_st(1)</ele>
                        <ele>ret = r_wc(2) - r_st(2)</ele>
                        <ele>ret = r_wc(3) - r_st(3)</ele>
                      </xmlVector>
                    </SymbolicFunction>
                  </function>
                </SignalOperation>
              </links>
              <constraints>
                <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils" count="1-enable_fork_rot_x" counterName="n">
                  <Parameter/>
                  <GeneralizedPositionConstraint xmlns="http://www.mbsim-env.de/MBSim" name="con_fork_rot_x">
                    <dependentRigidBody ref="../Object[Fork_rot_x]"/>
                    <constraintFunction>
                      <ConstantFunction>
                        <a0>0</a0>
                  </ConstantFunction>
                </constraintFunction>
              </GeneralizedPositionConstraint>
                </Embed>
                <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils" count="1-enable_fork_rot_y" counterName="n">
                  <Parameter/>
                  <GeneralizedPositionConstraint xmlns="http://www.mbsim-env.de/MBSim" name="con_fork_rot_y">
                    <dependentRigidBody ref="../Object[Fork_rot_y]"/>
                    <constraintFunction>
                      <ConstantFunction>
                        <a0>0</a0>
                  </ConstantFunction>
                </constraintFunction>
              </GeneralizedPositionConstraint>
                </Embed>
                <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils" count="1-enable_fork_rot_z" counterName="n">
                  <Parameter/>
                  <GeneralizedPositionConstraint xmlns="http://www.mbsim-env.de/MBSim" name="con_fork_rot_z">
                    <dependentRigidBody ref="../Object[Fork_rot_z]"/>
                    <constraintFunction>
                      <ConstantFunction>
                        <a0>0</a0>
                  </ConstantFunction>
                </constraintFunction>
              </GeneralizedPositionConstraint>
                </Embed>
                <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils" count="1-enable_front_susp" counterName="n">
                  <Parameter/>
                  <GeneralizedPositionConstraint xmlns="http://www.mbsim-env.de/MBSim" name="con_z_fork_susp">
                    <dependentRigidBody ref="../Object[lower_fork]"/>
                    <constraintFunction>
                      <ConstantFunction>
                        <a0>0</a0>
                  </ConstantFunction>
                </constraintFunction>
              </GeneralizedPositionConstraint>
                </Embed>
              </constraints>
              <observers/>
            </Group>
          </Embed>
          <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils" parameterHref="Data/Group_Front_wheel.xml">
            <Group xmlns="http://www.mbsim-env.de/MBSim" name="Group_Front_wheel">
              <frames/>
              <contours/>
              <groups>
                <Group name="Kinematics">
                  <frames/>
                  <contours/>
                  <groups/>
                  <objects/>
                  <links>
                    <PositionSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="p_fw_I">
                      <frame ref="../../Object[Front_wheel]/Frame[C]"/>
                  </PositionSensor>
                    <OrientationSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="S_fw_I">
                      <frame ref="../../Object[Front_wheel]/Frame[C]"/>
                  </OrientationSensor>
                    <VelocitySensor xmlns="http://www.mbsim-env.de/MBSimControl" name="v_fw_I">
                      <frame ref="../../Object[Front_wheel]/Frame[C]"/>
                  </VelocitySensor>
                    <AngularVelocitySensor xmlns="http://www.mbsim-env.de/MBSimControl" name="om_fw_I">
                      <frame ref="../../Object[Front_wheel]/Frame[C]"/>
                  </AngularVelocitySensor>
                    <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="S_wc_I">
                      <inputSignal ref="../Link[S_fw_I]"/>
                      <function>
                        <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="S" arg1Dim="9">ny = [S(2); S(5); S(8)]; % y-vector of rear wheel
nx = [ny(2); -ny(1); 0]; % cross with [0,0,1] to maintain x-vector parallel with ground
nx = nx/sqrt(nx(1)*nx(1)+nx(2)*nx(2)+nx(3)*nx(3)); % normalize
nz = [nx(2)*ny(3)-nx(3)*ny(2); nx(3)*ny(1)-nx(1)*ny(3); nx(1)*ny(2)-nx(2)*ny(1)]; % cross x and y
ret = [nx(1); ny(1); nz(1); nx(2); ny(2); nz(2); nx(3); ny(3); nz(3)]; % output in S-orentiation order</SymbolicFunction>
                    </function>
                  </SignalOperation>
                    <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="S_fc_I">
                      <inputSignal ref="../Link[S_wc_I]"/>
                      <function>
                        <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="S" arg1Dim="9">nx = [S(1); S(4); S(7)]; % x vector of wheel carrier frame
nz = [0; 0; 1]; % z straight up
ny = [nz(2)*nx(3)-nz(3)*nx(2); nz(3)*nx(1)-nz(1)*nx(3); nz(1)*nx(2)-nz(2)*nx(1)]; % y = cross of z and x
ret = [nx(1); ny(1); nz(1); nx(2); ny(2); nz(2); nx(3); ny(3); nz(3)]; % output in S-orientation order</SymbolicFunction>
                    </function>
                  </SignalOperation>
                    <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="phi_f">
                      <inputSignal ref="../Link[S_wc_I]"/>
                      <inputSignal ref="../Link[S_fc_I]"/>
                      <function>
                        <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="Swc" arg1Dim="9" arg2="Sfc" arg2Dim="9">ret = asin(Swc(2)*Sfc(3)+Swc(5)*Sfc(6)+Swc(8)*Sfc(9)); % cos(phi) of wc and fc rotation matrices</SymbolicFunction>
                      </function>
                    </SignalOperation>
                    <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="road_excitation_f">
                      <inputSignal ref="../../../Group[Group_Controller]/Link[time]"/>
                      <function>
                        <PiecewiseDefinedFunction xmlns="http://www.mbsim-env.de/MBSim">
                          <limitedFunctions>
                            <LimitedFunction>
                              <function>
                                <ConstantFunction>
                                  <a0>0</a0>
                              </ConstantFunction>
                            </function>
                              <limit>T_start_road_waves</limit>
                          </LimitedFunction>
                            <LimitedFunction>
                              <function>
                                <SymbolicFunction arg1="t" arg1Dim="1">
                                  <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                                    <ele>ret = h_road_waves/2*( 1-cos (2*pi*  v0/(3.6*l_road_waves)*       (t(1)-T_start_road_waves))       )</ele>
                                </xmlVector>
                              </SymbolicFunction>
                            </function>
                              <limit>T_start_road_waves + n_road_waves*l_road_waves/v0*3.6</limit>
                          </LimitedFunction>
                            <LimitedFunction>
                              <function>
                                <ConstantFunction>
                                  <a0>0</a0>
                              </ConstantFunction>
                            </function>
                              <limit>1000</limit>
                          </LimitedFunction>
                        </limitedFunctions>
                      </PiecewiseDefinedFunction>
                    </function>
                  </SignalOperation>  
                    <Multiplexer xmlns="http://www.mbsim-env.de/MBSimControl" name="r_c_fc_inputs">
                      <inputSignal ref="../Link[phi_f]"/>
                      <inputSignal ref="../Link[p_fw_I]"/>
                      <inputSignal ref="../Link[road_excitation_f]"/>
                  </Multiplexer>  
                    <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="r_c_fc">
                      <inputSignal ref="../Link[r_c_fc_inputs]"/>
                      <function>
                        <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="i" arg1Dim="5">phi = i(1);
p = [i(2);i(3);i(4)];
z_road = i(5);
%ret = [0; r_rim_FW*sin(phi); -(r_rim_FW*cos(phi)+rc_FW )]; % (undeformed)
ret = [0; r_rim_FW*sin(phi); -(p(3)-z0_I_Road-z_road)]; % vector from wheel center to contact point, in fc frame</SymbolicFunction>
                      </function>
                    </SignalOperation>
                    <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="z_Tyre_f">
                      <inputSignal ref="../Link[r_c_fc_inputs]"/>
                      <function>
                        <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="i" arg1Dim="5">phi = i(1);
p = [i(2);i(3);i(4)];
z_road = i(5);
%ret = [0; r_rim_FW*sin(phi(1)); -(r_rim_FW*cos(phi(1))+rc_FW)]; % (undeformed)
%ret = [0; r_rim_FW*sin(phi(1)); -(p(3)-z0_I_Road)]; % vector from wheel center to contact point, in fc frame
ret =(p(3)-z0_I_Road-z_road)- (r_rim_FW*cos(phi)+rc_FW);</SymbolicFunction>
                    </function>
                  </SignalOperation>  
                    <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="v_fw_fc">
                      <inputSignal ref="../Link[v_fw_I]"/>
                      <inputSignal ref="../Link[S_fc_I]"/>
                      <function>
                        <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="v" arg1Dim="3" arg2="S" arg2Dim="9">ret = [S(1)*v(1)+S(4)*v(2)+S(7)*v(3); S(2)*v(1)+S(5)*v(2)+S(8)*v(3); S(3)*v(1)+S(6)*v(2)+S(9)*v(3)]; % standard rotation application R*v</SymbolicFunction>
                    </function>
                  </SignalOperation>  
                    <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="om_fw_wc">
                      <inputSignal ref="../Link[om_fw_I]"/>
                      <inputSignal ref="../Link[S_wc_I]"/>
                      <function>
                        <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="om" arg1Dim="3" arg2="S" arg2Dim="9">ret = [S(1)*om(1) + S(4)*om(2) + S(7)*om(3); S(2)*om(1) + S(5)*om(2) + S(8)*om(3); S(3)*om(1) + S(6)*om(2) + S(9)*om(3)]; % standard rotation application R*om</SymbolicFunction>
                    </function>
                  </SignalOperation>  
                    <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="om_fw_y">
                      <inputSignal ref="../Link[om_fw_wc]"/>
                      <function>
                        <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="om" arg1Dim="3">ret = om(2); % wheel spin</SymbolicFunction>
                    </function>
                  </SignalOperation>  
                    <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="om_wc_wc">
                      <inputSignal ref="../Link[om_fw_wc]"/>
                      <function>
                        <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="om" arg1Dim="3">ret = [om(1); 0; om(3)]; % remove wheel spin</SymbolicFunction>
                    </function>
                  </SignalOperation>  
                    <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="om_wc_I">
                      <inputSignal ref="../Link[om_wc_wc]"/>
                      <inputSignal ref="../Link[S_wc_I]"/>
                      <function>
                        <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="om" arg1Dim="3" arg2="S" arg2Dim="9">ret = [S(1)*om(1) + S(2)*om(2) + S(3)*om(3); S(4)*om(1) + S(5)*om(2) + S(6)*om(3); S(7)*om(1) + S(8)*om(2) + S(9)*om(3)];  % reverse rotation application R'*om</SymbolicFunction>
                    </function>
                  </SignalOperation>  
                    <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="om_wc_fc">
                      <inputSignal ref="../Link[om_wc_I]"/>
                      <inputSignal ref="../Link[S_fc_I]"/>
                      <function>
                        <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="om" arg1Dim="3" arg2="S" arg2Dim="9">ret = [S(1)*om(1) + S(4)*om(2) + S(7)*om(3); S(2)*om(1) + S(5)*om(2) + S(8)*om(3); S(3)*om(1) + S(6)*om(2) + S(9)*om(3)]; % standard rotation application R*om</SymbolicFunction>
                    </function>
                  </SignalOperation>  
                    <Multiplexer xmlns="http://www.mbsim-env.de/MBSimControl" name="v_c_fc_inputs">
                      <inputSignal ref="../Link[v_fw_fc]"/>
                      <inputSignal ref="../Link[om_wc_fc]"/>
                      <inputSignal ref="../Link[r_c_fc]"/>
                  </Multiplexer>  
                    <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="v_c_fc">
                      <inputSignal ref="../Link[v_c_fc_inputs]"/>
                      <function>
                        <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="i" arg1Dim="9">v = [i(1);i(2);i(3)]; % v_rw_rc
om = [i(4);i(5);i(6)]; % om_wc_rc
r =[i(7);i(8);i(9)]; % r_c_rc
ret = [v(1) + om(2)*r(3) - om(3)*r(2); v(2) + om(3)*r(1) - om(1)*r(3); v(3) + om(1)*r(2) - om(2)*r(1)]; % v1 = v0 + cross(om,r)</SymbolicFunction>
                    </function>
                  </SignalOperation>  
                    <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="r_c_I">
                      <inputSignal ref="../Link[r_c_fc]"/>
                      <inputSignal ref="../Link[S_fc_I]"/>
                      <function>
                        <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="r" arg1Dim="3" arg2="S" arg2Dim="9">ret = [S(1)*r(1) + S(2)*r(2) + S(3)*r(3); S(4)*r(1) + S(5)*r(2) + S(6)*r(3); S(7)*r(1) + S(8)*r(2) + S(9)*r(3)];  % reverse rotation application R'*r</SymbolicFunction>
                    </function>
                  </SignalOperation>  
                    <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="r_c_wc">
                      <inputSignal ref="../Link[r_c_I]"/>
                      <inputSignal ref="../Link[S_wc_I]"/>
                      <function>
                        <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="r" arg1Dim="3" arg2="S" arg2Dim="9">ret = [S(1)*r(1) + S(4)*r(2) + S(7)*r(3); S(2)*r(1) + S(5)*r(2) + S(8)*r(3); S(3)*r(1) + S(6)*r(2) + S(9)*r(3)]; % standard rotation application R*r</SymbolicFunction>
                    </function>
                  </SignalOperation>  
                    <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="v_f_rot">
                      <inputSignal ref="../Link[om_fw_y]"/>
                      <inputSignal ref="../Link[r_c_wc]"/>
                      <function>
                        <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="om" arg1Dim="1" arg2="r" arg2Dim="3">ret = om(1) * r(3); % wheelspeed at contact patch</SymbolicFunction>
                    </function>
                  </SignalOperation></links>
                  <constraints/>
                  <observers/>
                </Group>
              </groups>
              <objects>
                <RigidBody name="Front_wheel">
                  <generalizedInitialVelocity>
                    <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                      <ele>(v0/3.6)/r_FW</ele>
                    </xmlVector>
                  </generalizedInitialVelocity>
                  <frameOfReference ref="../../Group[Group_Front_fork]/Object[lower_fork]/Frame[Wheel_Center]"/>
                  <mass unit="kg">m_FW</mass>
                  <inertiaTensor unit="kg*m^2">T_FW</inertiaTensor>
                  <stateDependentRotation>
                    <RotationAboutYAxis/>
                  </stateDependentRotation>
                  <frames>
                    <FixedRelativeFrame name="unbalance_FW">
                      <frameOfReference ref="../Frame[C]"/>
                      <relativePosition unit="m">unbalance_FW</relativePosition>
                  </FixedRelativeFrame>
                </frames>  
                  <contours/>
                  <openMBVRigidBody>
                    <Cylinder xmlns="http://www.mbsim-env.de/OpenMBV" name="Cylinder2">
                      <diffuseColor>
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>-1</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </diffuseColor>
                      <transparency unit="-">0.3</transparency>
                      <initialTranslation unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </initialTranslation>
                      <initialRotation unit="rad">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </initialRotation>
                      <scaleFactor unit="-">1</scaleFactor>
                      <radius unit="m">r_FW</radius>
                      <height unit="m">0.02</height>
                    </Cylinder>
                  </openMBVRigidBody>
                  <enableOpenMBVFrameC>
                    <size unit="m">.4</size>
              </enableOpenMBVFrameC>  
                </RigidBody>
                <RigidBody name="unbalance">
                  <frameOfReference ref="../Object[Front_wheel]/Frame[unbalance_FW]"/>
                  <mass unit="kg">m_unbalance</mass>
                  <inertiaTensor unit="kg*m^2">
                    <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                    </xmlMatrix>
                  </inertiaTensor>
                  <frames/>
                  <contours/>
                  <openMBVRigidBody>
                    <Cuboid xmlns="http://www.mbsim-env.de/OpenMBV" name="Cuboid2">
                      <diffuseColor>
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>1</ele>
                          <ele>1</ele>
                        </xmlVector>
                      </diffuseColor>
                      <transparency unit="-">0.3</transparency>
                      <initialTranslation unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </initialTranslation>
                      <initialRotation unit="rad">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </initialRotation>
                      <scaleFactor unit="-">1</scaleFactor>
                      <length unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0.01</ele>
                          <ele>0.01</ele>
                          <ele>0.01</ele>
                        </xmlVector>
                      </length>
                    </Cuboid>
                  </openMBVRigidBody>
                </RigidBody>
              </objects>
               <links>
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="Long_slip_f">
                  <inputSignal ref="../Group[Kinematics]/Link[v_f_rot]"/>
                  <inputSignal ref="../Group[Kinematics]/Link[v_c_fc]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="v_rot" arg1Dim="1" arg2="v_C" arg2Dim="3">ret=-(v_C(1)+v_rot(1))/v_C(1)

</SymbolicFunction>
                </function>
              </SignalOperation>  
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="Kyal_f">
                  <inputSignal ref="../Link[Fz_Tyre_f_C]"/>
                  <inputSignal ref="../Group[Kinematics]/Link[phi_f]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="Fz" arg1Dim="1" arg2="ga" arg2Dim="1">
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>ret = pKy1*Fz0_FW*sin(pKy2*atan(Fz(1)/((pKy3+pKy4*ga(1)^2)*Fz0_FW)))/(1+pKy5*ga(1)^2)</ele>
                    </xmlVector>
                  </SymbolicFunction>
                </function>
              </SignalOperation>  
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="s_relax_f">
                  <inputSignal ref="../Link[Kyal_f]"/>
                  <inputSignal ref="../Group[Kinematics]/Link[v_c_fc]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="Kyal" arg1Dim="1" arg2="v" arg2Dim="3">
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>ret=Kyal(1)*(8.633*10^(-6)+3.725*10^(-8)*v(1)+8.398*10^(-10)*(v(1))^2)</ele>
                    </xmlVector>
                  </SymbolicFunction>
                </function>
              </SignalOperation>  
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="Slipangle_f">
                  <inputSignal ref="../Group[Kinematics]/Link[v_c_fc]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="v" arg1Dim="3">
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>ret=atan(v(2)/v(1))</ele>
                    </xmlVector>
                  </SymbolicFunction>
                </function>
              </SignalOperation>  
                <Multiplexer xmlns="http://www.mbsim-env.de/MBSimControl" name="Slipangle_f_input">
                  <inputSignal ref="../Link[Slipangle_f]"/>
                  <inputSignal ref="../Link[s_relax_f]"/>
                  <inputSignal ref="../Group[Kinematics]/Link[v_c_fc]"/>
              </Multiplexer>  
                <NonlinearTransferSystem xmlns="http://www.mbsim-env.de/MBSimControl" name="Slipangle_f_pt1">
                  <inputSignal ref="../Link[Slipangle_f_input]"/>
                  <systemFunction>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="x" arg1Dim="1" arg2="u" arg2Dim="5">
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>(u(1)-x(1))*u(3)/u(2)</ele>
                    </xmlVector>
                  </SymbolicFunction>
                </systemFunction>
                  <outputFunction>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="x" arg1Dim="1" arg2="u" arg2Dim="5">
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>x(1)</ele>
                    </xmlVector>
                  </SymbolicFunction>
                </outputFunction>
              </NonlinearTransferSystem>  
                <Multiplexer xmlns="http://www.mbsim-env.de/MBSimControl" name="Tyre_f_input">
                  <inputSignal ref="../Group[Kinematics]/Link[phi_f]"/>
                  <inputSignal ref="../Link[Long_slip_f]"/>
                  <inputSignal ref="../Link[Slipangle_f_pt1]"/>
                  <inputSignal ref="../Link[Kyal_f]"/>
                </Multiplexer>
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="Fx_Tyre_f_C">
                  <inputSignal ref="../Link[Tyre_f_input]"/>
                  <inputSignal ref="../Link[Fz_Tyre_f_C]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="i" arg1Dim="4" arg2="FzV" arg2Dim="1">ka = i(2)
als = i(3)
Fz = FzV(1)
Fz0 = Fz0_FW

dfz=(Fz-Fz0)/Fz0
Dx=(pDx1+pDx2*dfz)*Fz
Ex=(pEx1+pEx2*dfz+pEx3*dfz^2)*(1-pEx4*sign(ka))
Kxka=Fz*(pKx1+pKx2*dfz)*exp(pKx3*dfz)
Bx=Kxka/(Cx*Dx)
Fx0=Dx*sin(Cx*atan(Bx*ka-Ex*(Bx*ka-atan(Bx*ka))))

Bxal=rBx1*cos(atan(rBx2*ka))
Fx=cos(Cxal*atan(Bxal*als))*Fx0

ret=Fx</SymbolicFunction>
                  </function>
                </SignalOperation>  
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="Fy_Tyre_f_C">
                  <inputSignal ref="../Link[Tyre_f_input]"/>
                  <inputSignal ref="../Link[Fz_Tyre_f_C]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="i" arg1Dim="4" arg2="FzV" arg2Dim="1">Fz0   = Fz0_FW
Fz     = FzV(1)
ga     = i(1)
ka     = i(2)
als    = i(3)
Kyal  = i(4)

dfz=(Fz-Fz0)/Fz0
Dy=Fz*pDy1*exp(pDy2*dfz)/(1+pDy3*ga^2)
Ey=pEy1+pEy2*ga^2+pEy4*ga*sign(als)
%Kyal=pKy1*Fz0*sin(pKy2*atan(Fz/((pKy3+pKy4*ga^2)*Fz0)))/(1+pKy5*ga^2)
By=Kyal/(Cy*Dy)
Kyga=(pKy6+pKy7*dfz)*Fz *0.8 % scaling camber stiffnes for physically correct camber force
Bga=Kyga/(Cga*Dy)
Fy0=Dy*sin(Cy*atan(By*als-Ey*(By*als-atan(By*als)))+Cga*atan(Bga*ga-Ega*(Bga*ga-atan(Bga*ga))))

Byka=rBy1*cos(atan(rBy2*(als-rBy3)))
Fy=cos(Cyka*atan(Byka*ka))*Fy0

ret=-Fy</SymbolicFunction>
                  </function>
                </SignalOperation>
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="Fz_Tyre_f_unlim">
                  <inputSignal ref="../Group[Kinematics]/Link[z_Tyre_f]"/>
                  <inputSignal ref="../Group[Kinematics]/Link[v_c_fc]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="z" arg1Dim="1" arg2="v" arg2Dim="3">
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>ret =-c_z_FW*z(1) - d_z_FW*v(3) + FzPreload_FW;</ele>
                      </xmlVector>
                    </SymbolicFunction>
                  </function>
                </SignalOperation>
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="Fz_Tyre_f_C">
                  <inputSignal ref="../Link[Fz_Tyre_f_unlim]"/>
                  <function>
                    <BoundedFunction xmlns="http://www.mbsim-env.de/MBSim">
                      <lowerBound>1</lowerBound>
                      <upperBound>5000</upperBound>
                    </BoundedFunction>
                  </function>
                </SignalOperation><SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="scrub_radius_f">
                  <inputSignal ref="../Group[Kinematics]/Link[phi_f]"/>
                  <inputSignal ref="../Group[Kinematics]/Link[z_Tyre_f]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="ga" arg1Dim="1" arg2="z" arg2Dim="1">
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>ret=(rc_FW+z(1))*sin(ga(1))</ele>
                    </xmlVector>
                  </SymbolicFunction>
                </function>
              </SignalOperation>
                <Multiplexer xmlns="http://www.mbsim-env.de/MBSimControl" name="M_Fx_f_Input">
                  <inputSignal ref="../Link[Fx_Tyre_f_C]"/>
                  <inputSignal ref="../Link[scrub_radius_f]"/>
                  <inputSignal ref="../Group[Kinematics]/Link[phi_f]"/>
              </Multiplexer>
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="M_Fx_Tyre_f_C">
                  <inputSignal ref="../Link[M_Fx_f_Input]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="i" arg1Dim="3">Fx=i(1)
s  =i(2)
ga=i(3)

Mz_W  =  s*Fx   %in W system; 
My_C  = -Mz_W*sin(ga)  %in C system
Mz_C  =  Mz_W*cos(ga)
ret=[0;My_C;Mz_C]
</SymbolicFunction>
                  </function>
                </SignalOperation><SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="Mx_Fz_Tyre_f_C">
                  <inputSignal ref="../Link[Fz_Tyre_f_C]"/>
                  <inputSignal ref="../Group[Kinematics]/Link[r_c_fc]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="F" arg1Dim="1" arg2="ry" arg2Dim="3">
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>ret=F(1)*ry(2)</ele>
                    </xmlVector>
                  </SymbolicFunction>
                </function>
              </SignalOperation>
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="Mx_Fy_Tyre_f_C">
                  <inputSignal ref="../Link[Fy_Tyre_f_C]"/>
                  <inputSignal ref="../Group[Kinematics]/Link[r_c_fc]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="F" arg1Dim="1" arg2="rz" arg2Dim="3">
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>ret=-F(1)*rz(3)</ele>
                    </xmlVector>
                  </SymbolicFunction>
                </function>
              </SignalOperation>
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="Mz_Tyre_f_C">
                  <inputSignal ref="../Link[Tyre_f_input]"/>
                  <inputSignal ref="../Link[Fz_Tyre_f_C]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="i" arg1Dim="4" arg2="FzV" arg2Dim="1">Fz0  = Fz0_FW
Fz    = FzV(1)
ga    = 0
ka   = i(2)
als    = i(3)

dfz=(Fz-Fz0)/Fz0
Dy=Fz*pDy1*exp(pDy2*dfz)/(1+pDy3*ga^2)
Ey=pEy1+pEy2*ga^2+pEy4*ga*sign(als)
Kyal=pKy1*Fz0*sin(pKy2*atan(Fz/((pKy3+pKy4*ga^2)*Fz0)))/(1+pKy5*ga^2)
By=Kyal/(Cy*Dy)
Kyga=(pKy6+pKy7*dfz)*Fz*0.8 %scaling camber stiffness for physically correct camber force
Bga=Kyga/(Cga*Dy)
Fy0=Dy*sin(Cy*atan(By*als-Ey*(By*als-atan(By*als)))+Cga*atan(Bga*ga-Ega*(Bga*ga-atan(Bga*ga))))

ga    = i(1)

Byka=rBy1*cos(atan(rBy2*(als-rBy3)))
Kxka=Fz*(pKx1+pKx2*dfz)*exp(pKx3*dfz)
SHr=(qHz3+qHz4*dfz)*ga
Bt=(qBz1+qBz2*dfz)*(1+qBz5*abs(ga)+qBz6*ga^2)
Dt=Fz*(rc_FW/Fz0)*(qDz1+qDz2*dfz)*(1+qDz3*abs(ga)+qDz4*ga^2)
Et=(qEz1+qEz2*dfz)*(1+qEz5*ga*(2/pi)*atan(Bt*Ct*als))
Br=qBz9+qBz10*By*Cy
Dr=Fz*rc_FW*((qDz8+qDz9*dfz)*ga+(qDz10+qDz11*dfz)*ga*abs(ga))/sqrt(1+als^2)

Mzt0=-Dt*cos(Ct*atan(Bt*als-Et*(Bt*als-atan(Bt*als))))/sqrt(1+als^2)*Fy0
Mzr0=Dr*cos(atan(Br*(als+SHr)))
Mz0=Mzt0+Mzr0

Fy=cos(Cyka*atan(Byka*ka))*Fy0
lat=sqrt(als^2+(Kxka*ka/Kyal)^2)*sign(als)
lar=sqrt((als+SHr)^2+(Kxka*ka/Kyal)^2)*sign(als+SHr)
Mzr=Dr*cos(atan(Br*lar))
Mz=-Dt*cos(Ct*atan(Bt*lat-Et*(Bt*lat-atan(Bt*lat))))/sqrt(1+als^2)*Fy+Mzr

ret=-Mz</SymbolicFunction>
                  </function>
                </SignalOperation>
                <Multiplexer xmlns="http://www.mbsim-env.de/MBSimControl" name="F_Tyre_f_input">
                  <inputSignal ref="../Group[Kinematics]/Link[S_fc_I]"/>
                  <inputSignal ref="../Link[Fx_Tyre_f_C]"/>
                  <inputSignal ref="../Link[Fy_Tyre_f_C]"/>
                  <inputSignal ref="../Link[Fz_Tyre_f_C]"/>
              </Multiplexer>
                <Multiplexer xmlns="http://www.mbsim-env.de/MBSimControl" name="M_Tyre_f_input">
                  <inputSignal ref="../Group[Kinematics]/Link[S_fc_I]"/>
                  <inputSignal ref="../Link[Mx_Fy_Tyre_f_C]"/>
                  <inputSignal ref="../Link[Mx_Fz_Tyre_f_C]"/>
                  <inputSignal ref="../Link[Mz_Tyre_f_C]"/>
                  <inputSignal ref="../Link[M_Fx_Tyre_f_C]"/>
              </Multiplexer>
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="F_Tyre_f_I">
                  <inputSignal ref="../Link[F_Tyre_f_input]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="i" arg1Dim="12">s = [i(1);i(2);i(3);i(4);i(5);i(6);i(7);i(8);i(9)];
Fx = i(10);
Fy = i(11);
Fz = i(12);

FIx = s(1)*Fx + s(2)*Fy + s(3)*Fz; 
FIy = s(4)*Fx + s(5)*Fy + s(6)*Fz; 
FIz = s(7)*Fx + s(8)*Fy + s(9)*Fz; 

ret =[FIx;FIy;FIz]</SymbolicFunction>
                </function>
              </SignalOperation>  
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="M_Tyre_f_I">
                  <inputSignal ref="../Link[M_Tyre_f_input]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="i" arg1Dim="15">s = [i(1);i(2);i(3);i(4);i(5);i(6);i(7);i(8);i(9)];
Mx = i(10)+i(11)+i(13);
My = i(14);
Mz = i(15);%i(12)+i(15);

MIx = s(1)*Mx + s(2)*My + s(3)*Mz; 
MIy = s(4)*Mx + s(5)*My + s(6)*Mz; 
MIz = s(7)*Mx + s(8)*My + s(9)*Mz; 

ret =[MIx;MIy;MIz]</SymbolicFunction>
                  </function>
                </SignalOperation>  
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="Fxy_Tyre_f_I">
                  <inputSignal ref="../Link[F_Tyre_f_I]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="F" arg1Dim="3">
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>ret = F(1)</ele>
                        <ele>ret = F(2)</ele>
                  </xmlVector>
                </SymbolicFunction>
              </function>
            </SignalOperation>  
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="Fz_Tyre_f_I">
                  <inputSignal ref="../Link[F_Tyre_f_I]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="F" arg1Dim="3">
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>ret = F(3)</ele>
                  </xmlVector>
                </SymbolicFunction>
              </function>
            </SignalOperation>  
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="Mxy_Tyre_f_I">
                  <inputSignal ref="../Link[M_Tyre_f_I]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="M" arg1Dim="3">
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>ret = M(1)</ele>
                        <ele>ret = M(2)</ele>
                  </xmlVector>
                </SymbolicFunction>
              </function>
            </SignalOperation>  
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="Mz_Tyre_f_I">
                  <inputSignal ref="../Link[M_Tyre_f_I]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="M" arg1Dim="3">
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>ret = M(3)</ele>
                  </xmlVector>
                </SymbolicFunction>
              </function>
            </SignalOperation>  
                <KineticExcitation name="Fxy_Tyre_f_I_exc">
                  <connect ref2="../../Group[Group_Front_fork]/Object[lower_fork]/Frame[Wheel_Center]"/>
                  <frameOfReference>"firstFrame"</frameOfReference>
                  <forceDirection unit="-">
                    <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                      <row>
                        <ele>1</ele>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>1</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                    </xmlMatrix>
                  </forceDirection>
                  <forceFunction>
                    <SignalFunction xmlns="http://www.mbsim-env.de/MBSimControl">
                      <returnSignal ref="../../Link[Fxy_Tyre_f_I]"/>
                    </SignalFunction>
                  </forceFunction>
                  <enableOpenMBV>
                    <diffuseColor>
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>0</ele>
                        <ele>1</ele>
                        <ele>1</ele>
                      </xmlVector>
                    </diffuseColor>
                    <scaleLength>0.0005</scaleLength>
                    <scaleSize>0.1</scaleSize>
                  </enableOpenMBV>
                </KineticExcitation><KineticExcitation name="Fz_Tyre_f_I_exc">
                  <connect ref2="../../Group[Group_Front_fork]/Object[lower_fork]/Frame[Wheel_Center]"/>
                  <frameOfReference>"firstFrame"</frameOfReference>
                  <forceDirection unit="-">
                    <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                      <row>
                        <ele>0</ele>
                  </row>
                      <row>
                        <ele>0</ele>
                  </row>
                      <row>
                        <ele>1</ele>
                  </row>
                </xmlMatrix>
              </forceDirection>
                  <forceFunction>
                    <SignalFunction xmlns="http://www.mbsim-env.de/MBSimControl">
                      <returnSignal ref="../../Link[Fz_Tyre_f_I]"/>
                </SignalFunction>
              </forceFunction>
                  <enableOpenMBV>
                    <diffuseColor>
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>-1</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                  </xmlVector>
                </diffuseColor>
                    <scaleLength>.0005</scaleLength>
                    <scaleSize>.1</scaleSize>
              </enableOpenMBV>
            </KineticExcitation>  
                <KineticExcitation name="Mxy_Tyre_f_I_exc">
                  <connect ref2="../../Group[Group_Front_fork]/Object[lower_fork]/Frame[Wheel_Center]"/>
                  <frameOfReference>"firstFrame"</frameOfReference>
                  <momentDirection unit="-">
                    <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                      <row>
                        <ele>1</ele>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>1</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                    </xmlMatrix>
                  </momentDirection>
                  <momentFunction>
                    <SignalFunction xmlns="http://www.mbsim-env.de/MBSimControl">
                      <returnSignal ref="../../Link[Mxy_Tyre_f_I]"/>
                    </SignalFunction>
                  </momentFunction>
                  <enableOpenMBV>
                    <diffuseColor>
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>0</ele>
                        <ele>1</ele>
                        <ele>1</ele>
                      </xmlVector>
                    </diffuseColor>
                    <scaleLength>.01</scaleLength>
                    <scaleSize>.1</scaleSize>
                  </enableOpenMBV>
                </KineticExcitation><KineticExcitation name="Mz_Tyre_f_I_exc">
                  <connect ref2="../../Group[Group_Front_fork]/Object[lower_fork]/Frame[Wheel_Center]"/>
                  <frameOfReference>"firstFrame"</frameOfReference>
                  <momentDirection unit="-">
                    <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                      <row>
                        <ele>0</ele>
                  </row>
                      <row>
                        <ele>0</ele>
                  </row>
                      <row>
                        <ele>1</ele>
                  </row>
                </xmlMatrix>
              </momentDirection>
                  <momentFunction>
                    <SignalFunction xmlns="http://www.mbsim-env.de/MBSimControl">
                      <returnSignal ref="../../Link[Mz_Tyre_f_I]"/>
                </SignalFunction>
              </momentFunction>
                  <enableOpenMBV>
                    <diffuseColor>
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>0</ele>
                        <ele>1</ele>
                        <ele>1</ele>
                  </xmlVector>
                </diffuseColor>
                    <scaleLength>.01</scaleLength>
                    <scaleSize>.1</scaleSize>
              </enableOpenMBV>
            </KineticExcitation>  
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="My_Fx_f_W_sop">
                  <inputSignal ref="../Link[Fx_Tyre_f_C]"/>
                  <inputSignal ref="../Group[Kinematics]/Link[r_c_wc]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="Fx" arg1Dim="1" arg2="r" arg2Dim="3">ret = r(3)*Fx(1) </SymbolicFunction>
                </function>
              </SignalOperation>
                <KineticExcitation name="My_Fx_f_W_exc" xmlns="http://www.mbsim-env.de/MBSim">
                  <connect ref1="../../Frame[I]" ref2="../Object[Front_wheel]/Frame[C]"/>
                  <momentDirection unit="-">
                    <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                      <row>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>1</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                      </row>
                    </xmlMatrix>
                  </momentDirection>
                  <momentFunction>
                    <SignalFunction xmlns="http://www.mbsim-env.de/MBSimControl">
                      <returnSignal ref="../../Link[My_Fx_f_W_sop]"/>
                    </SignalFunction>
                  </momentFunction>
                </KineticExcitation><SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="My_brake_f_W_sop">
                  <inputSignal ref="../../Group[Group_Controller]/Group[longitudinal]/Link[M_brake]"/>
                  <inputSignal ref="../../Group[Group_Controller]/Group[longitudinal]/Link[M_brake_f_stat]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="Mbr_st" arg1Dim="1" arg2="Mbr_dyn" arg2Dim="1">
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>ret = Mbr_st(1)*(1-Velocity_controller) + Brake_distribution*Mbr_dyn(1)</ele>
                      </xmlVector>
                    </SymbolicFunction>
                  </function>
                </SignalOperation>
                <KineticExcitation name="My_brake_f_W_exc" xmlns="http://www.mbsim-env.de/MBSim">
                  <connect ref1="../../Group[Group_Front_fork]/Object[lower_fork]/Frame[Wheel_Center]" ref2="../Object[Front_wheel]/Frame[C]"/>
                  <momentDirection unit="-">
                    <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                      <row>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>1</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                      </row>
                    </xmlMatrix>
                  </momentDirection>
                  <momentFunction>
                    <SignalFunction xmlns="http://www.mbsim-env.de/MBSimControl">
                      <returnSignal ref="../../Link[My_brake_f_W_sop]"/>
                    </SignalFunction>
                  </momentFunction>
                  <enableOpenMBV>
                    <diffuseColor>
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>0.111111</ele>
                        <ele>1</ele>
                        <ele>1</ele>
                      </xmlVector>
                    </diffuseColor>
                    <scaleLength>.01</scaleLength>
                    <scaleSize>.1</scaleSize>
                  </enableOpenMBV>
                </KineticExcitation>
                <KineticExcitation name="Mz_Tyre_f_C_exc">
                  <connect ref2="../Object[Front_wheel]/Frame[C]"/>
                  <momentDirection unit="-">
                    <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                      <row>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>1</ele>
                      </row>
                    </xmlMatrix>
                  </momentDirection>
                  <momentFunction>
                    <SignalFunction xmlns="http://www.mbsim-env.de/MBSimControl">
                      <returnSignal ref="../../Link[Mz_Tyre_f_C]"/>
                    </SignalFunction>
                  </momentFunction>
                  <enableOpenMBV/>
                </KineticExcitation>
              </links>
              <constraints/>
              <observers/>
            </Group>
          </Embed>
          <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils" parameterHref="Data/Group_swingarm.xml">
            <Group xmlns="http://www.mbsim-env.de/MBSim" name="Group_swingarm">
              <frames/>
              <contours/>
              <groups>
                <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils" count="enable_swingarm_torsion" counterName="n">
                  <Parameter/>
                  <Group xmlns="http://www.mbsim-env.de/MBSim" name="Dof_swingarm_torsion">
                    <frames/>
                    <contours/>
                    <groups/>
                    <objects/>
                    <links>
                      <GeneralizedPositionSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="al_tors_swingarm_RW">
                        <object ref="../../Object[swingarm]"/>
                      </GeneralizedPositionSensor>
                      <GeneralizedVelocitySensor xmlns="http://www.mbsim-env.de/MBSimControl" name="alp_tors_swingarm_RW">
                        <object ref="../../Object[swingarm]"/>
                      </GeneralizedVelocitySensor>
                      <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="Mx_tors_swingarm_sop">
                        <inputSignal ref="../Link[al_tors_swingarm_RW]"/>
                        <inputSignal ref="../Link[alp_tors_swingarm_RW]"/>
                        <function>
                          <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="al" arg1Dim="1" arg2="alp" arg2Dim="1">
                            <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                              <ele>ret=-tors_swingarm(1)*al(1) - tors_swingarm(2)*alp(1)</ele>
                            </xmlVector>
                          </SymbolicFunction>
                        </function>
                      </SignalOperation>      
                      <KineticExcitation name="Mx_tors_swingarm_exc">
                        <connect ref1="../../Object[swingarm_axis]/Frame[C]" ref2="../../Object[swingarm]/Frame[frame_axis]"/>
                        <momentDirection unit="-">
                          <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                            <row>
                              <ele>1</ele>
                            </row>
                            <row>
                              <ele>0</ele>
                            </row>
                            <row>
                              <ele>0</ele>
                            </row>
                          </xmlMatrix>
                        </momentDirection>
                        <momentFunction>
                          <SignalFunction xmlns="http://www.mbsim-env.de/MBSimControl">
                            <returnSignal ref="../../Link[Mx_tors_swingarm_sop]"/>
                          </SignalFunction>
                        </momentFunction>
                        <enableOpenMBV>
                          <diffuseColor>
                            <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                              <ele>0.666667</ele>
                              <ele>.3</ele>
                              <ele>1</ele>
                            </xmlVector>
                          </diffuseColor>
                          <scaleLength>.01</scaleLength>
                          <scaleSize>.1</scaleSize>
                        </enableOpenMBV>
                      </KineticExcitation>
                    </links>
                    <constraints/>
                    <observers/>
                  </Group>
                </Embed>
                <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils" count="enable_rear_susp" counterName="n">
                  <Parameter/>
                  <Group xmlns="http://www.mbsim-env.de/MBSim" name="Dof_rear_susp">
                    <frames/>
                    <contours/>
                    <groups/>
                    <objects/>
                    <links>
                      <GeneralizedPositionSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="be_swingarm">
                        <object ref="../../Object[swingarm_axis]"/>
                  </GeneralizedPositionSensor>
                      <GeneralizedVelocitySensor xmlns="http://www.mbsim-env.de/MBSimControl" name="bep_swingarm">
                        <object ref="../../Object[swingarm]"/>
                  </GeneralizedVelocitySensor>
                      <SpringDamper name="rear_suspension">
                        <connect ref1="../../../Group[Group_Frame]/Object[Frame]/Frame[rear_suspension_top]" ref2="../../Object[Rocker]/Frame[p21]"/>
                        <forceFunction>
                          <NonlinearSpringDamperForce>
                            <forceDeflectionFunction>
                              <TabularFunction>
                                <xy>
                                  <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                                    <row>
                                      <ele>-1</ele>
                                      <ele>-c_suspension_r</ele>
                                    </row>
                                    <row>
                                      <ele>0</ele>
                                      <ele>0</ele>
                                    </row>
                                    <row>
                                      <ele>1</ele>
                                      <ele>c_suspension_r</ele>
                                    </row>
                                  </xmlMatrix>
                                </xy>
                              </TabularFunction>
                            </forceDeflectionFunction>
                            <forceVelocityFunction>
                              <TabularFunction>
                                <xy>
                                  <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                                    <row>
                                      <ele>-1</ele>
                                      <ele>-Fd_compression_r</ele>
                                    </row>
                                    <row>
                                      <ele>0</ele>
                                      <ele>0</ele>
                                    </row>
                                    <row>
                                      <ele>1</ele>
                                      <ele>Fd_rebound_r</ele>
                                    </row>
                                  </xmlMatrix>
                                </xy>
                              </TabularFunction>
                            </forceVelocityFunction>
                          </NonlinearSpringDamperForce>
                        </forceFunction>
                        <unloadedLength unit="m">F0_suspension_r/c_suspension_r + L0_spring_r</unloadedLength>
                        <enableOpenMBV>
                          <diffuseColor>
                            <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                              <ele>0</ele>
                              <ele>1</ele>
                              <ele>0.666667</ele>
                            </xmlVector>
                          </diffuseColor>
                          <numberOfCoils>10</numberOfCoils>
                          <springRadius unit="m">.04</springRadius>
                          <crossSectionRadius unit="m">0.008</crossSectionRadius>
                        </enableOpenMBV>
                      </SpringDamper>
                      <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils" count="0" counterName="n">
                        <Parameter/>
                        <PositionSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="rear_susp_top">
                          <frame ref="../../../Group[Group_Frame]/Object[Frame]/Frame[rear_suspension_top]"/>
                      </PositionSensor></Embed>
                      <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils" count="0" counterName="n">
                        <Parameter/>
                        <PositionSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="rear_susp_bottom">
                          <frame ref="../../Object[Rocker]/Frame[p21]"/>
                      </PositionSensor></Embed>
                      <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils" count="0" counterName="n">
                        <Parameter/>
                        <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="L0_rear_suspension">
                          <inputSignal ref="../Link[rear_susp_top]"/>
                          <inputSignal ref="../Link[rear_susp_bottom]"/>
                          <function>
                            <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="rt" arg1Dim="3" arg2="rb" arg2Dim="3">
                              <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                                <ele>ret = sqrt( (rb(1)-rt(1))^2 + (rb(3)-rt(3))^2) </ele>
                            </xmlVector>
                          </SymbolicFunction>
                        </function>
                      </SignalOperation></Embed>
                    </links>
                    <constraints/>
                    <observers/>
                  </Group>
                </Embed>
              </groups>
              <objects>
                <RigidBody name="swingarm_axis">
                  <frameOfReference ref="../../Group[Group_Frame]/Object[Frame]/Frame[axis_swingarm]"/>
                  <mass unit="kg">0</mass>
                  <inertiaTensor unit="kg*m^2">
                    <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                    </xmlMatrix>
                  </inertiaTensor>
                  <stateDependentRotation>
                    <RotationAboutYAxis/>
                  </stateDependentRotation>
                  <frames>
                    <FixedRelativeFrame name="p22">
                      <frameOfReference ref="../Frame[C]"/>
                      <relativePosition unit="m">p22</relativePosition>
                      <relativeOrientation>
                        <aboutY xmlns="http://www.mbsim-env.de/MBXMLUtils" unit="rad">0.92962</aboutY>
                      </relativeOrientation>
                    </FixedRelativeFrame>
                  </frames><contours/>
                  <openMBVRigidBody>
                    <Cylinder xmlns="http://www.mbsim-env.de/OpenMBV" name="Cylinder2">
                      <transparency unit="-">0.3</transparency>
                      <initialTranslation unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </initialTranslation>
                      <initialRotation unit="rad">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </initialRotation>
                      <scaleFactor unit="-">1</scaleFactor>
                      <radius unit="m">0.015</radius>
                      <height unit="m">0.1</height>
                    </Cylinder>
                  </openMBVRigidBody>
                </RigidBody>
                <RigidBody name="swingarm">
                  <frameOfReference ref="../Object[swingarm_axis]/Frame[C]"/>
                  <frameForKinematics ref="Frame[frame_axis]"/>
                  <mass unit="kg">m_swingarm</mass>
                  <inertiaTensor unit="kg*m^2">T_swingarm</inertiaTensor>
                  <stateDependentRotation>
                    <RotationAboutXAxis/>
                  </stateDependentRotation>
                  <frames>
                    <FixedRelativeFrame name="frame_axis">
                      <frameOfReference ref="../Frame[C]"/>
                      <relativePosition unit="m">frame_axis</relativePosition>
                  </FixedRelativeFrame>
                    <FixedRelativeFrame name="wheel_axis_rear">
                      <frameOfReference ref="../Frame[C]"/>
                      <relativePosition unit="m">wheel_axis_rear</relativePosition>
                  </FixedRelativeFrame>
                  </frames><contours/>
                  <openMBVRigidBody>
                    <Cuboid xmlns="http://www.mbsim-env.de/OpenMBV" name="Cuboid2">
                      <diffuseColor>
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0.666667</ele>
                          <ele>1</ele>
                          <ele>1</ele>
                        </xmlVector>
                      </diffuseColor>
                      <transparency unit="-">0.3</transparency>
                      <initialTranslation unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0.08</ele>
                          <ele>0</ele>
                          <ele>0.00</ele>
                        </xmlVector>
                      </initialTranslation>
                      <initialRotation unit="rad">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>-0.11</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </initialRotation>
                      <scaleFactor unit="-">1</scaleFactor>
                      <length unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0.553</ele>
                          <ele>0.04</ele>
                          <ele>0.08</ele>
                        </xmlVector>
                      </length>
                    </Cuboid>
                  </openMBVRigidBody>
                </RigidBody>
                <RigidBody name="Wheelaxis_rear">
                  <frameOfReference ref="../Object[swingarm]/Frame[wheel_axis_rear]"/>
                  <mass unit="kg">0</mass>
                  <inertiaTensor unit="kg*m^2">
                    <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                    </xmlMatrix>
                  </inertiaTensor>
                  <frames/>
                  <contours/>
                  <openMBVRigidBody>
                    <Cylinder xmlns="http://www.mbsim-env.de/OpenMBV" name="Cylinder2">
                      <transparency unit="-">0.3</transparency>
                      <initialTranslation unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </initialTranslation>
                      <initialRotation unit="rad">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </initialRotation>
                      <scaleFactor unit="-">1</scaleFactor>
                      <radius unit="m">.02</radius>
                      <height unit="m">.1</height>
                    </Cylinder>
                  </openMBVRigidBody>
                </RigidBody>
                <RigidBody name="Rocker">
                  <frameOfReference ref="../../Group[Group_Frame]/Object[Frame]/Frame[p19]"/>
                  <mass unit="kg">0</mass>
                  <inertiaTensor unit="kg*m^2">
                    <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                      <row>
                        <ele>0.0001</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>0.0001</ele>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0.0001</ele>
                      </row>
                    </xmlMatrix>
                  </inertiaTensor>
                  <stateDependentRotation>
                    <RotationAboutYAxis/>
                  </stateDependentRotation>
                  <frames>
                    <FixedRelativeFrame name="p20">
                      <frameOfReference ref="../Frame[C]"/>
                      <relativePosition unit="m">p20</relativePosition>
                      <relativeOrientation>
                        <aboutY xmlns="http://www.mbsim-env.de/MBXMLUtils" unit="rad">0.78621</aboutY>
                      </relativeOrientation>
                    </FixedRelativeFrame>
                    <FixedRelativeFrame name="p21">
                      <frameOfReference ref="../Frame[C]"/>
                      <relativePosition unit="m">p21</relativePosition>
                    </FixedRelativeFrame>
                  </frames><contours/>
                  <openMBVRigidBody>
                    <Cuboid xmlns="http://www.mbsim-env.de/OpenMBV" name="Cuboid2">
                      <transparency unit="-">0.3</transparency>
                      <initialTranslation unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>-0.05691/2*cos(0.67584)</ele>
                          <ele>0</ele>
                          <ele>-0.05691/2*sin(0.67584)</ele>
                        </xmlVector>
                      </initialTranslation>
                      <initialRotation unit="rad">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>-0.67584</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </initialRotation>
                      <scaleFactor unit="-">1</scaleFactor>
                      <length unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0.05691</ele>
                          <ele>0.02</ele>
                          <ele>0.02</ele>
                        </xmlVector>
                      </length>
                    </Cuboid>
                  </openMBVRigidBody>
                </RigidBody>
                <RigidBody name="Rocker_arm">
                  <frameOfReference ref="../Object[Rocker]/Frame[p21]"/>
                  <mass unit="kg">0</mass>
                  <inertiaTensor unit="kg*m^2">
                    <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                      <row>
                        <ele>0.0001</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>0.0001</ele>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0.0001</ele>
                      </row>
                    </xmlMatrix>
                  </inertiaTensor>
                  <frames/>
                  <contours/>
                  <openMBVRigidBody>
                    <Cuboid xmlns="http://www.mbsim-env.de/OpenMBV" name="Cuboid2">
                      <transparency unit="-">0.3</transparency>
                      <initialTranslation unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0.0566/2*cos(0.4771)</ele>
                          <ele>0</ele>
                          <ele>-0.0566/2*sin(0.4771)</ele>
                        </xmlVector>
                      </initialTranslation>
                      <initialRotation unit="rad">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0.4771</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </initialRotation>
                      <scaleFactor unit="-">1</scaleFactor>
                      <length unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0.0566</ele>
                          <ele>0.02</ele>
                          <ele>0.02</ele>
                        </xmlVector>
                      </length>
                    </Cuboid>
                  </openMBVRigidBody>
                </RigidBody>
                <RigidBody name="Pull_rod_body">
                  <frameOfReference ref="../Object[Rocker]/Frame[p20]"/>
                  <frameForKinematics ref="Frame[C]"/>
                  <mass unit="kg">0</mass>
                  <inertiaTensor unit="kg*m^2">
                    <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                      <row>
                        <ele>0.0001</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>0.0001</ele>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0.0001</ele>
                      </row>
                    </xmlMatrix>
                  </inertiaTensor>
                  <stateDependentRotation>
                    <RotationAboutYAxis/>
                  </stateDependentRotation>
                  <frames>
                    <FixedRelativeFrame name="P22_pr">
                      <frameOfReference ref="../Frame[C]"/>
                      <relativePosition unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>-0.17324</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </relativePosition>
                    </FixedRelativeFrame>
                  </frames><contours/>
                  <openMBVRigidBody>
                    <Cuboid xmlns="http://www.mbsim-env.de/OpenMBV" name="Cuboid2">
                      <diffuseColor>
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>1</ele>
                          <ele>1</ele>
                        </xmlVector>
                      </diffuseColor>
                      <transparency unit="-">0.3</transparency>
                      <initialTranslation unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>-0.17324/2</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </initialTranslation>
                      <initialRotation unit="rad">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </initialRotation>
                      <scaleFactor unit="-">1</scaleFactor>
                      <length unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0.17324</ele>
                          <ele>0.01</ele>
                          <ele>0.01</ele>
                        </xmlVector>
                      </length>
                    </Cuboid>
                  </openMBVRigidBody>
                </RigidBody>
              </objects>
              <links>
              </links>
              <constraints>
                <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils" count="1-enable_swingarm_torsion" counterName="n">
                  <Parameter/>
                  <GeneralizedPositionConstraint xmlns="http://www.mbsim-env.de/MBSim" name="con_swingarm_torsion">
                    <dependentRigidBody ref="../Object[swingarm]"/>
                    <constraintFunction>
                      <ConstantFunction>
                        <a0>0</a0>
                      </ConstantFunction>
                    </constraintFunction>
                  </GeneralizedPositionConstraint>
                </Embed>
                <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils" count="1-enable_rear_susp" counterName="n">
                  <Parameter/>
                  <GeneralizedPositionConstraint xmlns="http://www.mbsim-env.de/MBSim" name="con_rear_suspension">
                    <dependentRigidBody ref="../Object[swingarm_axis]"/>
                    <constraintFunction>
                      <ConstantFunction>
                        <a0>0</a0>
                  </ConstantFunction>
                </constraintFunction>
              </GeneralizedPositionConstraint>
                </Embed>    
                <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils" count="1-enable_rear_susp" counterName="n">
                  <Parameter/>
                  <GeneralizedPositionConstraint xmlns="http://www.mbsim-env.de/MBSim" name="con_rocker">
                    <dependentRigidBody ref="../Object[Rocker]"/>
                    <constraintFunction>
                      <ConstantFunction>
                        <a0>0</a0>
                      </ConstantFunction>
                    </constraintFunction>
                  </GeneralizedPositionConstraint>
                </Embed>
                <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils" count="1-enable_rear_susp" counterName="n">
                  <Parameter/>
                  <GeneralizedPositionConstraint xmlns="http://www.mbsim-env.de/MBSim" name="con_pull_rod">
                    <dependentRigidBody ref="../Object[Pull_rod_body]"/>
                    <constraintFunction>
                      <ConstantFunction>
                        <a0>0</a0>
                      </ConstantFunction>
                    </constraintFunction>
                  </GeneralizedPositionConstraint>
                </Embed>
                <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils" count="enable_rear_susp" counterName="n">
                  <Parameter/>
                  <JointConstraint xmlns="http://www.mbsim-env.de/MBSim" name="Pr_sw">
                    <dependentRigidBodyOnFirstSide ref="../Object[Pull_rod_body]"/>
                    <dependentRigidBodyOnSecondSide ref="../Object[swingarm_axis]"/>
                    <independentRigidBody ref="../Object[Rocker]"/>
                    <connect ref1="../Object[Pull_rod_body]/Frame[P22_pr]" ref2="../Object[swingarm_axis]/Frame[p22]"/>
                    <forceDirection unit="-">
                      <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <row>
                          <ele>1</ele>
                          <ele>0</ele>
                        </row>
                        <row>
                          <ele>0</ele>
                          <ele>0</ele>
                        </row>
                        <row>
                          <ele>0</ele>
                          <ele>1</ele>
                        </row>
                      </xmlMatrix>
                    </forceDirection>
                  </JointConstraint>
                </Embed>
              </constraints>
              <observers/>
            </Group>
          </Embed>
          <Embed xmlns="http://www.mbsim-env.de/MBXMLUtils" parameterHref="Data/Group_Rear_wheel.xml">
            <Group xmlns="http://www.mbsim-env.de/MBSim" name="Group_Rear_wheel">
              <frames/>
              <contours/>
              <groups>
                <Group name="Kinematics">
                  <frames/>
                  <contours/>
                  <groups/>
                  <objects/>
                  <links>
                    <PositionSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="p_rw_I">
                      <frame ref="../../Object[Rear_wheel]/Frame[C]"/>
                  </PositionSensor>
                    <OrientationSensor xmlns="http://www.mbsim-env.de/MBSimControl" name="S_rw_I">
                      <frame ref="../../Object[Rear_wheel]/Frame[C]"/>
                  </OrientationSensor>
                    <VelocitySensor xmlns="http://www.mbsim-env.de/MBSimControl" name="v_rw_I">
                      <frame ref="../../Object[Rear_wheel]/Frame[C]"/>
                  </VelocitySensor>
                    <AngularVelocitySensor xmlns="http://www.mbsim-env.de/MBSimControl" name="om_rw_I">
                      <frame ref="../../Object[Rear_wheel]/Frame[C]"/>
                  </AngularVelocitySensor>
                    <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="S_wc_I">
                      <inputSignal ref="../Link[S_rw_I]"/>
                      <function>
                        <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="S" arg1Dim="9">ny = [S(2); S(5); S(8)]; % y-vector of rear wheel
nx = [ny(2); -ny(1); 0]; % cross with [0,0,1] to maintain x-vector parallel with ground
nx = nx/sqrt(nx(1)*nx(1)+nx(2)*nx(2)+nx(3)*nx(3)); % normalize
nz = [nx(2)*ny(3)-nx(3)*ny(2); nx(3)*ny(1)-nx(1)*ny(3); nx(1)*ny(2)-nx(2)*ny(1)]; % cross x and y
ret = [nx(1); ny(1); nz(1); nx(2); ny(2); nz(2); nx(3); ny(3); nz(3)]; % output in S-orentiation order</SymbolicFunction>
                </function>
              </SignalOperation>    
                    <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="S_rc_I">
                      <inputSignal ref="../Link[S_wc_I]"/>
                      <function>
                        <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="S" arg1Dim="9">nx = [S(1); S(4); S(7)]; % x vector of wheel carrier frame
nz = [0; 0; 1]; % z straight up
ny = [nz(2)*nx(3)-nz(3)*nx(2); nz(3)*nx(1)-nz(1)*nx(3); nz(1)*nx(2)-nz(2)*nx(1)]; % y = cross of z and x
ret = [nx(1); ny(1); nz(1); nx(2); ny(2); nz(2); nx(3); ny(3); nz(3)]; % output in S-orientation order</SymbolicFunction>
                </function>
              </SignalOperation>    
                    <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="phi_r">
                      <inputSignal ref="../Link[S_wc_I]"/>
                      <inputSignal ref="../Link[S_rc_I]"/>
                      <function>
                        <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="Swc" arg1Dim="9" arg2="Src" arg2Dim="9">ret = asin(Swc(2)*Src(3)+Swc(5)*Src(6)+Swc(8)*Src(9)); % cos(phi) of wc and rc rotation matrices</SymbolicFunction>
                      </function>
                    </SignalOperation>
                    <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="road_excitation_r">
                      <inputSignal ref="../../../Group[Group_Controller]/Link[time]"/>
                      <function>
                        <PiecewiseDefinedFunction xmlns="http://www.mbsim-env.de/MBSim">
                          <limitedFunctions>
                            <LimitedFunction>
                              <function>
                                <ConstantFunction>
                                  <a0>0</a0>
                              </ConstantFunction>
                            </function>
                              <limit>T_start_road_waves + wheelbase/v0*3.6</limit>
                          </LimitedFunction>
                            <LimitedFunction>
                              <function>
                                <SymbolicFunction arg1="t" arg1Dim="1">
                                  <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                                    <ele>ret = h_road_waves/2*( 1-cos (2*pi*  v0/(3.6*l_road_waves)*(t(1)-(T_start_road_waves + wheelbase/v0*3.6) )  )      )</ele>
                                </xmlVector>
                              </SymbolicFunction>
                            </function>
                              <limit>T_start_road_waves + wheelbase/v0*3.6 + n_road_waves*l_road_waves/v0*3.6</limit>
                          </LimitedFunction>
                            <LimitedFunction>
                              <function>
                                <ConstantFunction>
                                  <a0>0</a0>
                              </ConstantFunction>
                            </function>
                              <limit>1000</limit>
                          </LimitedFunction>
                        </limitedFunctions>
                      </PiecewiseDefinedFunction>
                    </function>
                  </SignalOperation>  
                    <Multiplexer xmlns="http://www.mbsim-env.de/MBSimControl" name="r_c_rc_inputs">
                      <inputSignal ref="../Link[phi_r]"/>
                      <inputSignal ref="../Link[p_rw_I]"/>
                      <inputSignal ref="../Link[road_excitation_r]"/>
                  </Multiplexer>  
                    <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="r_c_rc">
                      <inputSignal ref="../Link[r_c_rc_inputs]"/>
                      <function>
                        <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="i" arg1Dim="5">phi = i(1);
p = [i(2);i(3);i(4)];
z_road = i(5);
%ret = [0; r_rim_RW*sin(phi); -(r_rim_RW*cos(phi)+rc_RW )]; % (undeformed)
ret = [0; r_rim_RW*sin(phi); -(p(3)-z0_I_Road-z_road)]; % vector from wheel center to contact point, in rc frame</SymbolicFunction>
                      </function>
                    </SignalOperation>  
                    <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="z_Tyre_r">
                      <inputSignal ref="../Link[r_c_rc_inputs]"/>
                      <function>
                        <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="i" arg1Dim="5">phi = i(1);
p = [i(2);i(3);i(4)];
z_road = i(5);
%ret = [0; r_rim_RW*sin(phi(1)); -(r_rim_RW*cos(phi(1))+rc_RW)]; % (undeformed)
%ret = [0; r_rim_RW*sin(phi(1)); -(p(3)-z0_I_Road)]; % vector from wheel center to contact point, in rc frame
ret =(p(3)-z0_I_Road-z_road)- (r_rim_RW*cos(phi)+rc_RW);</SymbolicFunction>
                    </function>
                  </SignalOperation>  
                    <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="v_rw_rc">
                      <inputSignal ref="../Link[v_rw_I]"/>
                      <inputSignal ref="../Link[S_rc_I]"/>
                      <function>
                        <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="v" arg1Dim="3" arg2="S" arg2Dim="9">ret = [S(1)*v(1)+S(4)*v(2)+S(7)*v(3); S(2)*v(1)+S(5)*v(2)+S(8)*v(3); S(3)*v(1)+S(6)*v(2)+S(9)*v(3)]; % standard rotation application R*v</SymbolicFunction>
                </function>
              </SignalOperation>    
                    <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="om_rw_wc">
                      <inputSignal ref="../Link[om_rw_I]"/>
                      <inputSignal ref="../Link[S_wc_I]"/>
                      <function>
                        <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="om" arg1Dim="3" arg2="S" arg2Dim="9">ret = [S(1)*om(1) + S(4)*om(2) + S(7)*om(3); S(2)*om(1) + S(5)*om(2) + S(8)*om(3); S(3)*om(1) + S(6)*om(2) + S(9)*om(3)]; % standard rotation application R*om</SymbolicFunction>
                </function>
              </SignalOperation>    
                    <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="om_rw_y">
                      <inputSignal ref="../Link[om_rw_wc]"/>
                      <function>
                        <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="om" arg1Dim="3">ret = om(2); % wheel spin</SymbolicFunction>
                </function>
              </SignalOperation>    
                    <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="om_wc_wc">
                      <inputSignal ref="../Link[om_rw_wc]"/>
                      <function>
                        <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="om" arg1Dim="3">ret = [om(1); 0; om(3)]; % remove wheel spin</SymbolicFunction>
                </function>
              </SignalOperation>    
                    <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="om_wc_I">
                      <inputSignal ref="../Link[om_wc_wc]"/>
                      <inputSignal ref="../Link[S_wc_I]"/>
                      <function>
                        <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="om" arg1Dim="3" arg2="S" arg2Dim="9">ret = [S(1)*om(1) + S(2)*om(2) + S(3)*om(3); S(4)*om(1) + S(5)*om(2) + S(6)*om(3); S(7)*om(1) + S(8)*om(2) + S(9)*om(3)];  % reverse rotation application R'*om</SymbolicFunction>
                </function>
              </SignalOperation>    
                    <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="om_wc_rc">
                      <inputSignal ref="../Link[om_wc_I]"/>
                      <inputSignal ref="../Link[S_rc_I]"/>
                      <function>
                        <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="om" arg1Dim="3" arg2="S" arg2Dim="9">ret = [S(1)*om(1) + S(4)*om(2) + S(7)*om(3); S(2)*om(1) + S(5)*om(2) + S(8)*om(3); S(3)*om(1) + S(6)*om(2) + S(9)*om(3)]; % standard rotation application R*om</SymbolicFunction>
                </function>
              </SignalOperation>    
                    <Multiplexer xmlns="http://www.mbsim-env.de/MBSimControl" name="v_c_rc_inputs">
                      <inputSignal ref="../Link[v_rw_rc]"/>
                      <inputSignal ref="../Link[om_wc_rc]"/>
                      <inputSignal ref="../Link[r_c_rc]"/>
              </Multiplexer>    
                    <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="v_c_rc">
                      <inputSignal ref="../Link[v_c_rc_inputs]"/>
                      <function>
                        <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="i" arg1Dim="9">v = [i(1);i(2);i(3)]; % v_rw_rc
om = [i(4);i(5);i(6)]; % om_wc_rc
r =[i(7);i(8);i(9)]; % r_c_rc
ret = [v(1) + om(2)*r(3) - om(3)*r(2); v(2) + om(3)*r(1) - om(1)*r(3); v(3) + om(1)*r(2) - om(2)*r(1)]; % v1 = v0 + cross(om,r)</SymbolicFunction>
                </function>
              </SignalOperation>    
                    <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="r_c_I">
                      <inputSignal ref="../Link[r_c_rc]"/>
                      <inputSignal ref="../Link[S_rc_I]"/>
                      <function>
                        <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="r" arg1Dim="3" arg2="S" arg2Dim="9">ret = [S(1)*r(1) + S(2)*r(2) + S(3)*r(3); S(4)*r(1) + S(5)*r(2) + S(6)*r(3); S(7)*r(1) + S(8)*r(2) + S(9)*r(3)];  % reverse rotation application R'*r</SymbolicFunction>
                </function>
              </SignalOperation>    
                    <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="r_c_wc">
                      <inputSignal ref="../Link[r_c_I]"/>
                      <inputSignal ref="../Link[S_wc_I]"/>
                      <function>
                        <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="r" arg1Dim="3" arg2="S" arg2Dim="9">ret = [S(1)*r(1) + S(4)*r(2) + S(7)*r(3); S(2)*r(1) + S(5)*r(2) + S(8)*r(3); S(3)*r(1) + S(6)*r(2) + S(9)*r(3)]; % standard rotation application R*r</SymbolicFunction>
                </function>
              </SignalOperation>    
                    <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="v_r_rot">
                      <inputSignal ref="../Link[om_rw_y]"/>
                      <inputSignal ref="../Link[r_c_wc]"/>
                      <function>
                        <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="om" arg1Dim="1" arg2="r" arg2Dim="3">ret = om(1) * r(3); % wheelspeed at contact patch</SymbolicFunction>
                </function>
              </SignalOperation>  
                  </links>
                  <constraints/>
                  <observers/>
                </Group>
              </groups>
              <objects>
                <RigidBody name="Rear_wheel">
                  <generalizedInitialVelocity>
                    <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                      <ele>(v0/3.6)/r_RW</ele>
                    </xmlVector>
                  </generalizedInitialVelocity>
                  <frameOfReference ref="../../Group[Group_swingarm]/Object[Wheelaxis_rear]/Frame[C]"/>
                  <mass unit="kg">m_RW</mass>
                  <inertiaTensor unit="kg*m^2">T_RW</inertiaTensor>
                  <stateDependentRotation>
                    <RotationAboutYAxis/>
                  </stateDependentRotation>
                  <frames>
                  </frames><contours/>
                  <openMBVRigidBody>
                    <Cylinder xmlns="http://www.mbsim-env.de/OpenMBV" name="Cylinder2">
                      <diffuseColor>
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>-1</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </diffuseColor>
                      <transparency unit="-">0.3</transparency>
                      <initialTranslation unit="m">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </initialTranslation>
                      <initialRotation unit="rad">
                        <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                          <ele>0</ele>
                          <ele>0</ele>
                          <ele>0</ele>
                        </xmlVector>
                      </initialRotation>
                      <scaleFactor unit="-">1</scaleFactor>
                      <radius unit="m">r_RW</radius>
                      <height unit="m">0.04</height>
                    </Cylinder>
                  </openMBVRigidBody>
                  <enableOpenMBVFrameC>
                    <size unit="m">.4</size>
                </enableOpenMBVFrameC></RigidBody>
              </objects>
               <links>
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="Long_slip_r">
                  <inputSignal ref="../Group[Kinematics]/Link[v_r_rot]"/>
                  <inputSignal ref="../Group[Kinematics]/Link[v_c_rc]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="v_rot" arg1Dim="1" arg2="v_C" arg2Dim="3">ret=-(v_C(1)+v_rot(1))/v_C(1)</SymbolicFunction>
                </function>
              </SignalOperation>  
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="Kyal_r">
                  <inputSignal ref="../Link[Fz_Tyre_r_C]"/>
                  <inputSignal ref="../Group[Kinematics]/Link[phi_r]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="Fz" arg1Dim="1" arg2="ga" arg2Dim="1">
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>ret = pKy1*Fz0_RW*sin(pKy2*atan(Fz(1)/((pKy3+pKy4*ga(1)^2)*Fz0_RW)))/(1+pKy5*ga(1)^2)</ele>
                    </xmlVector>
                  </SymbolicFunction>
                </function>
              </SignalOperation>  
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="s_relax_r">
                  <inputSignal ref="../Link[Kyal_r]"/>
                  <inputSignal ref="../Group[Kinematics]/Link[v_c_rc]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="Kyal" arg1Dim="1" arg2="v" arg2Dim="3">
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>ret=Kyal(1)*(9.694*10^(-6)-1.333*10^(-8)*v(1)+1.898*10^(-9)*(v(1))^2)</ele>
                    </xmlVector>
                  </SymbolicFunction>
                </function>
              </SignalOperation>  
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="Slipangle_r">
                  <inputSignal ref="../Group[Kinematics]/Link[v_c_rc]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="v" arg1Dim="3">
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>ret=atan(v(2)/v(1))</ele>
                    </xmlVector>
                  </SymbolicFunction>
                </function>
              </SignalOperation>  
                <Multiplexer xmlns="http://www.mbsim-env.de/MBSimControl" name="Slipangle_r_input">
                  <inputSignal ref="../Link[Slipangle_r]"/>
                  <inputSignal ref="../Link[s_relax_r]"/>
                  <inputSignal ref="../Group[Kinematics]/Link[v_c_rc]"/>
              </Multiplexer>  
                <NonlinearTransferSystem xmlns="http://www.mbsim-env.de/MBSimControl" name="Slipangle_r_pt1">
                  <inputSignal ref="../Link[Slipangle_r_input]"/>
                  <systemFunction>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="x" arg1Dim="1" arg2="u" arg2Dim="5">
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>(u(1)-x(1))*u(3)/u(2)</ele>
                    </xmlVector>
                  </SymbolicFunction>
                </systemFunction>
                  <outputFunction>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="x" arg1Dim="1" arg2="u" arg2Dim="5">
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>x(1)</ele>
                    </xmlVector>
                  </SymbolicFunction>
                </outputFunction>
              </NonlinearTransferSystem>  
                <Multiplexer xmlns="http://www.mbsim-env.de/MBSimControl" name="Tyre_r_input">
                  <inputSignal ref="../Group[Kinematics]/Link[phi_r]"/>
                  <inputSignal ref="../Link[Long_slip_r]"/>
                  <inputSignal ref="../Link[Slipangle_r_pt1]"/>
                  <inputSignal ref="../Link[Kyal_r]"/>
                </Multiplexer>  
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="Fx_Tyre_r_C">
                  <inputSignal ref="../Link[Tyre_r_input]"/>
                  <inputSignal ref="../Link[Fz_Tyre_r_C]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="i" arg1Dim="4" arg2="FzH" arg2Dim="1">ka  = i(2)
als  = i(3)
Fz   = FzH(1)
Fz0 = Fz0_RW
t     = i(4)

dfz=(Fz-Fz0)/Fz0
Dx=(pDx1+pDx2*dfz)*Fz
Ex=(pEx1+pEx2*dfz+pEx3*dfz^2)*(1-pEx4*sign(ka))
Kxka=Fz*(pKx1+pKx2*dfz)*exp(pKx3*dfz)
Bx=Kxka/(Cx*Dx)
Fx0=Dx*sin(Cx*atan(Bx*ka-Ex*(Bx*ka-atan(Bx*ka))))

Bxal=rBx1*cos(atan(rBx2*ka))
Fx=cos(Cxal*atan(Bxal*als))*Fx0

ret=Fx</SymbolicFunction>
                  </function>
                </SignalOperation>
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="Fy_Tyre_r_C">
                  <inputSignal ref="../Link[Tyre_r_input]"/>
                  <inputSignal ref="../Link[Fz_Tyre_r_C]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="i" arg1Dim="4" arg2="FzH" arg2Dim="1">Fz0    = Fz0_RW
Fz     = FzH(1)
ga     = i(1)
ka     = i(2)
als    = i(3)
Kyal  = i(4)

dfz=(Fz-Fz0)/Fz0
Dy=Fz*pDy1*exp(pDy2*dfz)/(1+pDy3*ga^2)
Ey=pEy1+pEy2*ga^2+pEy4*ga*sign(als)
%Kyal=pKy1*Fz0*sin(pKy2*atan(Fz/((pKy3+pKy4*ga^2)*Fz0)))/(1+pKy5*ga^2)
By=Kyal/(Cy*Dy)
Kyga=(pKy6+pKy7*dfz)*Fz
Bga=Kyga/(Cga*Dy)
Fy0=Dy*sin(Cy*atan(By*als-Ey*(By*als-atan(By*als)))+Cga*atan(Bga*ga-Ega*(Bga*ga-atan(Bga*ga))))

Byka=rBy1*cos(atan(rBy2*(als-rBy3)))
Fy=cos(Cyka*atan(Byka*ka))*Fy0

ret=-Fy</SymbolicFunction>
                  </function>
                </SignalOperation>
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="Fz_Tyre_r_C_unlim">
                  <inputSignal ref="../Group[Kinematics]/Link[z_Tyre_r]"/>
                  <inputSignal ref="../Group[Kinematics]/Link[v_c_rc]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="z" arg1Dim="1" arg2="v" arg2Dim="3">
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>ret=-c_z_RW*z(1) - d_z_RW*v(3) + FzPreload_RW;</ele>
                    </xmlVector>
                  </SymbolicFunction>
                </function>
              </SignalOperation>  
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="Fz_Tyre_r_C">
                  <inputSignal ref="../Link[Fz_Tyre_r_C_unlim]"/>
                  <function>
                    <BoundedFunction xmlns="http://www.mbsim-env.de/MBSim">
                      <lowerBound>1</lowerBound>
                      <upperBound>5000</upperBound>
                  </BoundedFunction>
                </function>
              </SignalOperation>  
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="scrub_radius_r">
                  <inputSignal ref="../Group[Kinematics]/Link[phi_r]"/>
                  <inputSignal ref="../Group[Kinematics]/Link[z_Tyre_r]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="ga" arg1Dim="1" arg2="z" arg2Dim="1">
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>ret=(rc_RW+z(1))*sin(ga(1))</ele>
                    </xmlVector>
                  </SymbolicFunction>
                </function>
              </SignalOperation>
                <Multiplexer xmlns="http://www.mbsim-env.de/MBSimControl" name="M_Fx_r_Input">
                  <inputSignal ref="../Link[Fx_Tyre_r_C]"/>
                  <inputSignal ref="../Link[scrub_radius_r]"/>
                  <inputSignal ref="../Group[Kinematics]/Link[phi_r]"/>
              </Multiplexer>
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="M_Fx_Tyre_r_C">
                  <inputSignal ref="../Link[M_Fx_r_Input]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="i" arg1Dim="3">Fx =i(1)
s   =i(2)
ga =i(3)

Mz_W=s*Fx   %in W system; 
My_C = -Mz_W*sin(ga)  %in C system
Mz_C = Mz_W*cos(ga)
ret=[0;My_C;Mz_C]
</SymbolicFunction>
                  </function>
                </SignalOperation><SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="Mx_Fz_Tyre_r_C">
                  <inputSignal ref="../Link[Fz_Tyre_r_C]"/>
                  <inputSignal ref="../Group[Kinematics]/Link[r_c_rc]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="F" arg1Dim="1" arg2="ry" arg2Dim="3">
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>ret=F(1)*ry(2)</ele>
                    </xmlVector>
                  </SymbolicFunction>
                </function>
              </SignalOperation>
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="Mx_Fy_Tyre_r_C">
                  <inputSignal ref="../Link[Fy_Tyre_r_C]"/>
                  <inputSignal ref="../Group[Kinematics]/Link[r_c_rc]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="F" arg1Dim="1" arg2="rz" arg2Dim="3">
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>ret=-F(1)*rz(3)</ele>
                    </xmlVector>
                  </SymbolicFunction>
                </function>
              </SignalOperation>
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="Mz_Tyre_r_C">
                  <inputSignal ref="../Link[Tyre_r_input]"/>
                  <inputSignal ref="../Link[Fz_Tyre_r_C]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="i" arg1Dim="4" arg2="FzH" arg2Dim="1">Fz0  = Fz0_RW
Fz    = FzH(1)
ga    = 0
ka   = i(2)
als    = i(3)

dfz=(Fz-Fz0)/Fz0
Dy=Fz*pDy1*exp(pDy2*dfz)/(1+pDy3*ga^2)
Ey=pEy1+pEy2*ga^2+pEy4*ga*sign(als)
Kyal=pKy1*Fz0*sin(pKy2*atan(Fz/((pKy3+pKy4*ga^2)*Fz0)))/(1+pKy5*ga^2)
By=Kyal/(Cy*Dy)
Kyga=(pKy6+pKy7*dfz)*Fz
Bga=Kyga/(Cga*Dy)
Fy0=Dy*sin(Cy*atan(By*als-Ey*(By*als-atan(By*als)))+Cga*atan(Bga*ga-Ega*(Bga*ga-atan(Bga*ga))))

ga    = i(1)

Byka=rBy1*cos(atan(rBy2*(als-rBy3)))
Kxka=Fz*(pKx1+pKx2*dfz)*exp(pKx3*dfz)
SHr=(qHz3+qHz4*dfz)*ga
Bt=(qBz1+qBz2*dfz)*(1+qBz5*abs(ga)+qBz6*ga^2)
Dt=Fz*(rc_RW/Fz0)*(qDz1+qDz2*dfz)*(1+qDz3*abs(ga)+qDz4*ga^2)
Et=(qEz1+qEz2*dfz)*(1+qEz5*ga*(2/pi)*atan(Bt*Ct*als))
Br=qBz9+qBz10*By*Cy
Dr=Fz*rc_RW*((qDz8+qDz9*dfz)*ga+(qDz10+qDz11*dfz)*ga*abs(ga))/sqrt(1+als^2)
Mzt0=-Dt*cos(Ct*atan(Bt*als-Et*(Bt*als-atan(Bt*als))))/sqrt(1+als^2)*Fy0
Mzr0=Dr*cos(atan(Br*(als+SHr)))
Mz0=Mzt0+Mzr0

Fy=cos(Cyka*atan(Byka*ka))*Fy0
lat=sqrt(als^2+(Kxka*ka/Kyal)^2)*sign(als)
lar=sqrt((als+SHr)^2+(Kxka*ka/Kyal)^2)*sign(als+SHr)
Mzr=Dr*cos(atan(Br*lar))
Mz=-Dt*cos(Ct*atan(Bt*lat-Et*(Bt*lat-atan(Bt*lat))))/sqrt(1+als^2)*Fy+Mzr

ret=-Mz</SymbolicFunction>
                  </function>
                </SignalOperation>
                <Multiplexer xmlns="http://www.mbsim-env.de/MBSimControl" name="F_Tyre_r_input">
                  <inputSignal ref="../Group[Kinematics]/Link[S_rc_I]"/>
                  <inputSignal ref="../Link[Fx_Tyre_r_C]"/>
                  <inputSignal ref="../Link[Fy_Tyre_r_C]"/>
                  <inputSignal ref="../Link[Fz_Tyre_r_C]"/>
              </Multiplexer>
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="F_Tyre_r_I">
                  <inputSignal ref="../Link[F_Tyre_r_input]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="i" arg1Dim="12">s = [i(1);i(2);i(3);i(4);i(5);i(6);i(7);i(8);i(9)];
Fx = i(10);
Fy = i(11);
Fz = i(12);

FIx = s(1)*Fx + s(2)*Fy + s(3)*Fz; 
FIy = s(4)*Fx + s(5)*Fy + s(6)*Fz; 
FIz = s(7)*Fx + s(8)*Fy + s(9)*Fz; 

ret =[FIx;FIy;FIz]</SymbolicFunction>
                </function>
              </SignalOperation>  
                <Multiplexer xmlns="http://www.mbsim-env.de/MBSimControl" name="M_Tyre_r_input">
                  <inputSignal ref="../Group[Kinematics]/Link[S_rc_I]"/>
                  <inputSignal ref="../Link[Mx_Fy_Tyre_r_C]"/>
                  <inputSignal ref="../Link[Mx_Fz_Tyre_r_C]"/>
                  <inputSignal ref="../Link[Mz_Tyre_r_C]"/>
                  <inputSignal ref="../Link[M_Fx_Tyre_r_C]"/>
              </Multiplexer>
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="M_Tyre_r_I">
                  <inputSignal ref="../Link[M_Tyre_r_input]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="i" arg1Dim="15">s = [i(1);i(2);i(3);i(4);i(5);i(6);i(7);i(8);i(9)];
Mx = i(10)+i(11)+i(13);
My = i(14);
Mz = i(12)+i(15);

MIx = s(1)*Mx + s(2)*My + s(3)*Mz; 
MIy = s(4)*Mx + s(5)*My + s(6)*Mz; 
MIz = s(7)*Mx + s(8)*My + s(9)*Mz; 

ret =[MIx;MIy;MIz]</SymbolicFunction>
                </function>
              </SignalOperation>  
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="Fxy_Tyre_r_I">
                  <inputSignal ref="../Link[F_Tyre_r_I]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="F" arg1Dim="3">
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>ret = F(1)</ele>
                        <ele>ret = F(2)</ele>
                  </xmlVector>
                </SymbolicFunction>
              </function>
            </SignalOperation>  
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="Fz_Tyre_r_I">
                  <inputSignal ref="../Link[F_Tyre_r_I]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="F" arg1Dim="3">
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>ret = F(3)</ele>
                  </xmlVector>
                </SymbolicFunction>
              </function>
            </SignalOperation>  
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="Mxy_Tyre_r_I">
                  <inputSignal ref="../Link[M_Tyre_r_I]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="M" arg1Dim="3">
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>ret = M(1)</ele>
                        <ele>ret = M(2)</ele>
                  </xmlVector>
                </SymbolicFunction>
              </function>
            </SignalOperation>  
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="Mz_Tyre_r_I">
                  <inputSignal ref="../Link[M_Tyre_r_I]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="M" arg1Dim="3">
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>ret = M(3)</ele>
                  </xmlVector>
                </SymbolicFunction>
              </function>
            </SignalOperation>  
                <KineticExcitation name="Fxy_Tyre_r_I_exc">
                  <connect ref2="../../Group[Group_swingarm]/Object[Wheelaxis_rear]/Frame[C]"/>
                  <frameOfReference>"firstFrame"</frameOfReference>
                  <forceDirection unit="-">
                    <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                      <row>
                        <ele>1</ele>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>1</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                      </row>
                    </xmlMatrix>
                  </forceDirection>
                  <forceFunction>
                    <SignalFunction xmlns="http://www.mbsim-env.de/MBSimControl">
                      <returnSignal ref="../../Link[Fxy_Tyre_r_I]"/>
                    </SignalFunction>
                  </forceFunction>
                  <enableOpenMBV>
                    <diffuseColor>
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>0</ele>
                        <ele>1</ele>
                        <ele>1</ele>
                      </xmlVector>
                    </diffuseColor>
                    <scaleLength>0.0005</scaleLength>
                    <scaleSize>0.1</scaleSize>
                  </enableOpenMBV>
                </KineticExcitation><KineticExcitation name="Fz_Tyre_r_I_exc">
                  <connect ref2="../../Group[Group_swingarm]/Object[Wheelaxis_rear]/Frame[C]"/>
                  <frameOfReference>"firstFrame"</frameOfReference>
                  <forceDirection unit="-">
                    <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                      <row>
                        <ele>0</ele>
                  </row>
                      <row>
                        <ele>0</ele>
                  </row>
                      <row>
                        <ele>1</ele>
                  </row>
                </xmlMatrix>
              </forceDirection>
                  <forceFunction>
                    <SignalFunction xmlns="http://www.mbsim-env.de/MBSimControl">
                      <returnSignal ref="../../Link[Fz_Tyre_r_I]"/>
                </SignalFunction>
              </forceFunction>
                  <enableOpenMBV>
                    <diffuseColor>
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>-1</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                  </xmlVector>
                </diffuseColor>
                    <scaleLength>.0005</scaleLength>
                    <scaleSize>.1</scaleSize>
              </enableOpenMBV>
            </KineticExcitation>  
                <KineticExcitation name="Mxy_Tyre_r_I_exc">
                  <connect ref2="../../Group[Group_swingarm]/Object[Wheelaxis_rear]/Frame[C]"/>
                  <frameOfReference>"firstFrame"</frameOfReference>
                  <momentDirection unit="-">
                    <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                      <row>
                        <ele>1</ele>
                        <ele>0</ele>
                  </row>
                      <row>
                        <ele>0</ele>
                        <ele>1</ele>
                  </row>
                      <row>
                        <ele>0</ele>
                        <ele>0</ele>
                  </row>
                </xmlMatrix>
              </momentDirection>
                  <momentFunction>
                    <SignalFunction xmlns="http://www.mbsim-env.de/MBSimControl">
                      <returnSignal ref="../../Link[Mxy_Tyre_r_I]"/>
                </SignalFunction>
              </momentFunction>
                  <enableOpenMBV>
                    <diffuseColor>
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>0</ele>
                        <ele>1</ele>
                        <ele>1</ele>
                  </xmlVector>
                </diffuseColor>
                    <scaleLength>0.01</scaleLength>
                    <scaleSize>0.1</scaleSize>
              </enableOpenMBV>
            </KineticExcitation>  
                <KineticExcitation name="Mz_Tyre_r_I_exc">
                  <connect ref2="../../Group[Group_swingarm]/Object[Wheelaxis_rear]/Frame[C]"/>
                  <frameOfReference>"firstFrame"</frameOfReference>
                  <momentDirection unit="-">
                    <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                      <row>
                        <ele>0</ele>
                  </row>
                      <row>
                        <ele>0</ele>
                  </row>
                      <row>
                        <ele>1</ele>
                  </row>
                </xmlMatrix>
              </momentDirection>
                  <momentFunction>
                    <SignalFunction xmlns="http://www.mbsim-env.de/MBSimControl">
                      <returnSignal ref="../../Link[Mz_Tyre_r_I]"/>
                </SignalFunction>
              </momentFunction>
                  <enableOpenMBV>
                    <diffuseColor>
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>0</ele>
                        <ele>1</ele>
                        <ele>1</ele>
                  </xmlVector>
                </diffuseColor>
                    <scaleLength>0.01</scaleLength>
                    <scaleSize>0.1</scaleSize>
              </enableOpenMBV>
            </KineticExcitation>  
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="My_Fx_r_W_sop">
                  <inputSignal ref="../Link[Fx_Tyre_r_C]"/>
                  <inputSignal ref="../Group[Kinematics]/Link[r_c_wc]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="Fx" arg1Dim="1" arg2="r" arg2Dim="3">ret = r(3)*Fx(1)</SymbolicFunction>
                </function>
              </SignalOperation>
                <KineticExcitation name="My_Fx_r_W_exc" xmlns="http://www.mbsim-env.de/MBSim">
                  <connect ref1="../../Frame[I]" ref2="../Object[Rear_wheel]/Frame[C]"/>
                  <momentDirection unit="-">
                    <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                      <row>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>1</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                      </row>
                    </xmlMatrix>
                  </momentDirection>
                  <momentFunction>
                    <SignalFunction xmlns="http://www.mbsim-env.de/MBSimControl">
                      <returnSignal ref="../../Link[My_Fx_r_W_sop]"/>
                    </SignalFunction>
                  </momentFunction>
                </KineticExcitation><Multiplexer xmlns="http://www.mbsim-env.de/MBSimControl" name="My_drive_r_W_in">
                  <inputSignal ref="../../Group[Group_Controller]/Group[longitudinal]/Link[M_brake_r_stat]"/>
                  <inputSignal ref="../../Group[Group_Controller]/Group[longitudinal]/Link[M_brake]"/>
                  <inputSignal ref="../../Group[Group_Controller]/Group[longitudinal]/Link[M_drive]"/>
                </Multiplexer>
                <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="My_drive_r_W_sop">
                  <inputSignal ref="../Link[My_drive_r_W_in]"/>
                  <function>
                    <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="i" arg1Dim="3">Mbr_st    = i(1)
Mbr_dyn = i(2) 
Mdrive    = i(3)

ret = Mbr_st*(1-Velocity_controller) + (1-Brake_distribution)*Mbr_dyn + Mdrive</SymbolicFunction>
                  </function>
                </SignalOperation>
                <KineticExcitation name="My_drive_W_exc" xmlns="http://www.mbsim-env.de/MBSim">
                  <connect ref1="../../Group[Group_swingarm]/Object[Wheelaxis_rear]/Frame[C]" ref2="../Object[Rear_wheel]/Frame[C]"/>
                  <frameOfReference>"secondFrame"</frameOfReference>
                  <momentDirection unit="-">
                    <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                      <row>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>1</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                      </row>
                    </xmlMatrix>
                  </momentDirection>
                  <momentFunction>
                    <SignalFunction xmlns="http://www.mbsim-env.de/MBSimControl">
                      <returnSignal ref="../../Link[My_drive_r_W_sop]"/>
                    </SignalFunction>
                  </momentFunction>
                  <enableOpenMBV>
                    <diffuseColor>
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>0.111111</ele>
                        <ele>1</ele>
                        <ele>1</ele>
                      </xmlVector>
                    </diffuseColor>
                    <scaleLength>.01</scaleLength>
                    <scaleSize>.1</scaleSize>
                  </enableOpenMBV>
                </KineticExcitation>
                <KineticExcitation name="Mz_Tyre_r_C_exc">
                  <connect ref2="../Object[Rear_wheel]/Frame[C]"/>
                  <momentDirection unit="-">
                    <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                      <row>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>0</ele>
                      </row>
                      <row>
                        <ele>1</ele>
                      </row>
                    </xmlMatrix>
                  </momentDirection>
                  <momentFunction>
                    <SignalFunction xmlns="http://www.mbsim-env.de/MBSimControl">
                      <returnSignal ref="../../Link[Mz_Tyre_r_C]"/>
                    </SignalFunction>
                  </momentFunction>
                  <enableOpenMBV/>
                </KineticExcitation>
              </links>
              <constraints>
              </constraints>
              <observers/>
            </Group>
          </Embed>  
          <Group name="Group_Cameras">
            <frames/>
            <contours/>
            <groups/>
            <objects>
              <RigidBody name="Camera_xy">
                <generalizedInitialVelocity>
                  <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                    <ele>v0/3.6</ele>
                    <ele>0</ele>
                </xmlVector>
              </generalizedInitialVelocity>
                <frameOfReference ref="../../Frame[cam_pos_xy]"/>
                <mass unit="kg">.1</mass>
                <inertiaTensor unit="kg*m^2">
                  <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                    <row>
                      <ele>0.01</ele>
                      <ele>0</ele>
                      <ele>0</ele>
                  </row>
                    <row>
                      <ele>0</ele>
                      <ele>0.01</ele>
                      <ele>0</ele>
                  </row>
                    <row>
                      <ele>0</ele>
                      <ele>0</ele>
                      <ele>0.01</ele>
                  </row>
                </xmlMatrix>
              </inertiaTensor>
                <stateDependentTranslation>
                  <TranslationAlongAxesXY/>
              </stateDependentTranslation>
                <frames/>
                <contours/>
                <openMBVRigidBody>
                  <Cuboid xmlns="http://www.mbsim-env.de/OpenMBV" name="Cuboid2">
                    <diffuseColor>
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>0.666667</ele>
                        <ele>1</ele>
                        <ele>0.498039</ele>
                    </xmlVector>
                  </diffuseColor>
                    <transparency unit="-">0.3</transparency>
                    <initialTranslation unit="m">
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                    </xmlVector>
                  </initialTranslation>
                    <initialRotation unit="rad">
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>0</ele>
                        <ele>0</ele>
                        <ele>0</ele>
                    </xmlVector>
                  </initialRotation>
                    <scaleFactor unit="-">1</scaleFactor>
                    <length unit="m">
                      <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                        <ele>0.02</ele>
                        <ele>0.02</ele>
                        <ele>.01</ele>
                    </xmlVector>
                  </length>
                </Cuboid>
              </openMBVRigidBody>
                <enableOpenMBVFrameC>
                  <size unit="m">0.2</size>
              </enableOpenMBVFrameC>
            </RigidBody>
          </objects>
            <links>
              <VelocitySensor xmlns="http://www.mbsim-env.de/MBSimControl" name="v_frame">
                <frame ref="../../Group[Group_Frame]/Object[yaw_axis]/Frame[C]"/>
            </VelocitySensor>
              <VelocitySensor xmlns="http://www.mbsim-env.de/MBSimControl" name="v_cam_xy">
                <frame ref="../Object[Camera_xy]/Frame[C]"/>
            </VelocitySensor>
              <SignalOperation xmlns="http://www.mbsim-env.de/MBSimControl" name="F_cam_xy">
                <inputSignal ref="../Link[v_frame]"/>
                <inputSignal ref="../Link[v_cam_xy]"/>
                <function>
                  <SymbolicFunction xmlns="http://www.mbsim-env.de/MBSim" arg1="vf" arg1Dim="3" arg2="vc" arg2Dim="3">
                    <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                      <ele>ret = 50*(vf(1) - vc(1))</ele>
                      <ele>ret = 50*(vf(2) - vc(2))</ele>
                  </xmlVector>
                </SymbolicFunction>
              </function>
            </SignalOperation>
              <KineticExcitation name="F_cam_xy_exc">
                <connect ref2="../Object[Camera_xy]/Frame[C]"/>
                <forceDirection unit="-">
                  <xmlMatrix xmlns="http://www.mbsim-env.de/MBXMLUtils">
                    <row>
                      <ele>1</ele>
                      <ele>0</ele>
                  </row>
                    <row>
                      <ele>0</ele>
                      <ele>1</ele>
                  </row>
                    <row>
                      <ele>0</ele>
                      <ele>0</ele>
                  </row>
                </xmlMatrix>
              </forceDirection>
                <forceFunction>
                  <SignalFunction xmlns="http://www.mbsim-env.de/MBSimControl">
                    <returnSignal ref="../../Link[F_cam_xy]"/>
                </SignalFunction>
              </forceFunction>
            </KineticExcitation>
          </links>
            <constraints/>
            <observers/>
        </Group>
        </groups>
        <objects/>
        <links/>
        <constraints/>
        <observers>
        </observers>  
        <enableOpenMBVFrameI/>
        <environments>
          <MBSimEnvironment>
          
          
          
          
          
          
          
          
          
          
            
            <accelerationOfGravity unit="m/s^2">
              <xmlVector xmlns="http://www.mbsim-env.de/MBXMLUtils">
                <ele>0</ele>
                <ele>0</ele>
                <ele>-9.81</ele>
              </xmlVector>
            </accelerationOfGravity>
          </MBSimEnvironment>
        </environments>
        <determineEquilibriumState>false</determineEquilibriumState>
      </DynamicSystemSolver>
    </Embed>
    <LSODEIntegrator xmlns="http://www.mbsim-env.de/MBSim">
      <startTime unit="s">0</startTime>
      <endTime unit="s">5</endTime>
      <plotStepSize unit="s">1e-2</plotStepSize>
    </LSODEIntegrator>
  </MBSimProject>










































































































































</Embed>
